!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AMVK_BUFFER_MANAGER_H	inc/buffer_manager.h	2;"	d
AMVK_DEVICE_QUEUE_INDICES	inc/device_queue_indices.h	2;"	d
AMVK_ENGINE_H	inc/engine.h	2;"	d
AMVK_FILE_MANAGER	inc/file_manager.h	2;"	d
AMVK_INPUT_MANAGER_H	inc/input_manager.h	2;"	d
AMVK_MACROS_H	inc/macro.h	3;"	d
AMVK_QUAD_H	inc/quad.h	2;"	d
AMVK_TASK_MANAGER_H	inc/task_manager.h	4;"	d
AMVK_VULKAN_CONTEXT_H	inc/vulkan_context.h	2;"	d
AMVK_VULKAN_MANAGER_H	inc/vulkan_manager.h	2;"	d
AMVK_WINDOW_H	inc/window.h	2;"	d
ARRAY_SIZE	inc/macro.h	17;"	d
AccessQualifier	lib/vulkan/spirv.hpp	/^enum AccessQualifier {$/;"	g	namespace:spv
AccessQualifierMax	lib/vulkan/spirv.hpp	/^    AccessQualifierMax = 0x7fffffff,$/;"	e	enum:spv::AccessQualifier
AccessQualifierReadOnly	lib/vulkan/spirv.hpp	/^    AccessQualifierReadOnly = 0,$/;"	e	enum:spv::AccessQualifier
AccessQualifierReadWrite	lib/vulkan/spirv.hpp	/^    AccessQualifierReadWrite = 2,$/;"	e	enum:spv::AccessQualifier
AccessQualifierWriteOnly	lib/vulkan/spirv.hpp	/^    AccessQualifierWriteOnly = 1,$/;"	e	enum:spv::AccessQualifier
AcquireNextImageKHR	lib/vulkan/vk_layer.h	/^    PFN_vkAcquireNextImageKHR AcquireNextImageKHR;$/;"	m	struct:VkLayerDispatchTable_
AddressingModel	lib/vulkan/spirv.hpp	/^enum AddressingModel {$/;"	g	namespace:spv
AddressingModelLogical	lib/vulkan/spirv.hpp	/^    AddressingModelLogical = 0,$/;"	e	enum:spv::AddressingModel
AddressingModelMax	lib/vulkan/spirv.hpp	/^    AddressingModelMax = 0x7fffffff,$/;"	e	enum:spv::AddressingModel
AddressingModelPhysical32	lib/vulkan/spirv.hpp	/^    AddressingModelPhysical32 = 1,$/;"	e	enum:spv::AddressingModel
AddressingModelPhysical64	lib/vulkan/spirv.hpp	/^    AddressingModelPhysical64 = 2,$/;"	e	enum:spv::AddressingModel
AllocateCommandBuffers	lib/vulkan/vk_layer.h	/^    PFN_vkAllocateCommandBuffers AllocateCommandBuffers;$/;"	m	struct:VkLayerDispatchTable_
AllocateDescriptorSets	lib/vulkan/vk_layer.h	/^    PFN_vkAllocateDescriptorSets AllocateDescriptorSets;$/;"	m	struct:VkLayerDispatchTable_
AllocateMemory	lib/vulkan/vk_layer.h	/^    PFN_vkAllocateMemory AllocateMemory;$/;"	m	struct:VkLayerDispatchTable_
BIN_DIR	Makefile	/^BIN_DIR := bin$/;"	m
BeginCommandBuffer	lib/vulkan/vk_layer.h	/^    PFN_vkBeginCommandBuffer BeginCommandBuffer;$/;"	m	struct:VkLayerDispatchTable_
BindBufferMemory	lib/vulkan/vk_layer.h	/^    PFN_vkBindBufferMemory BindBufferMemory;$/;"	m	struct:VkLayerDispatchTable_
BindImageMemory	lib/vulkan/vk_layer.h	/^    PFN_vkBindImageMemory BindImageMemory;$/;"	m	struct:VkLayerDispatchTable_
BufferManager	inc/buffer_manager.h	/^class BufferManager {$/;"	c
BuiltIn	lib/vulkan/spirv.hpp	/^enum BuiltIn {$/;"	g	namespace:spv
BuiltInClipDistance	lib/vulkan/spirv.hpp	/^    BuiltInClipDistance = 3,$/;"	e	enum:spv::BuiltIn
BuiltInCullDistance	lib/vulkan/spirv.hpp	/^    BuiltInCullDistance = 4,$/;"	e	enum:spv::BuiltIn
BuiltInEnqueuedWorkgroupSize	lib/vulkan/spirv.hpp	/^    BuiltInEnqueuedWorkgroupSize = 32,$/;"	e	enum:spv::BuiltIn
BuiltInFragCoord	lib/vulkan/spirv.hpp	/^    BuiltInFragCoord = 15,$/;"	e	enum:spv::BuiltIn
BuiltInFragDepth	lib/vulkan/spirv.hpp	/^    BuiltInFragDepth = 22,$/;"	e	enum:spv::BuiltIn
BuiltInFrontFacing	lib/vulkan/spirv.hpp	/^    BuiltInFrontFacing = 17,$/;"	e	enum:spv::BuiltIn
BuiltInGlobalInvocationId	lib/vulkan/spirv.hpp	/^    BuiltInGlobalInvocationId = 28,$/;"	e	enum:spv::BuiltIn
BuiltInGlobalLinearId	lib/vulkan/spirv.hpp	/^    BuiltInGlobalLinearId = 34,$/;"	e	enum:spv::BuiltIn
BuiltInGlobalOffset	lib/vulkan/spirv.hpp	/^    BuiltInGlobalOffset = 33,$/;"	e	enum:spv::BuiltIn
BuiltInGlobalSize	lib/vulkan/spirv.hpp	/^    BuiltInGlobalSize = 31,$/;"	e	enum:spv::BuiltIn
BuiltInHelperInvocation	lib/vulkan/spirv.hpp	/^    BuiltInHelperInvocation = 23,$/;"	e	enum:spv::BuiltIn
BuiltInInstanceId	lib/vulkan/spirv.hpp	/^    BuiltInInstanceId = 6,$/;"	e	enum:spv::BuiltIn
BuiltInInstanceIndex	lib/vulkan/spirv.hpp	/^    BuiltInInstanceIndex = 43,$/;"	e	enum:spv::BuiltIn
BuiltInInvocationId	lib/vulkan/spirv.hpp	/^    BuiltInInvocationId = 8,$/;"	e	enum:spv::BuiltIn
BuiltInLayer	lib/vulkan/spirv.hpp	/^    BuiltInLayer = 9,$/;"	e	enum:spv::BuiltIn
BuiltInLocalInvocationId	lib/vulkan/spirv.hpp	/^    BuiltInLocalInvocationId = 27,$/;"	e	enum:spv::BuiltIn
BuiltInLocalInvocationIndex	lib/vulkan/spirv.hpp	/^    BuiltInLocalInvocationIndex = 29,$/;"	e	enum:spv::BuiltIn
BuiltInMax	lib/vulkan/spirv.hpp	/^    BuiltInMax = 0x7fffffff,$/;"	e	enum:spv::BuiltIn
BuiltInNumEnqueuedSubgroups	lib/vulkan/spirv.hpp	/^    BuiltInNumEnqueuedSubgroups = 39,$/;"	e	enum:spv::BuiltIn
BuiltInNumSubgroups	lib/vulkan/spirv.hpp	/^    BuiltInNumSubgroups = 38,$/;"	e	enum:spv::BuiltIn
BuiltInNumWorkgroups	lib/vulkan/spirv.hpp	/^    BuiltInNumWorkgroups = 24,$/;"	e	enum:spv::BuiltIn
BuiltInPatchVertices	lib/vulkan/spirv.hpp	/^    BuiltInPatchVertices = 14,$/;"	e	enum:spv::BuiltIn
BuiltInPointCoord	lib/vulkan/spirv.hpp	/^    BuiltInPointCoord = 16,$/;"	e	enum:spv::BuiltIn
BuiltInPointSize	lib/vulkan/spirv.hpp	/^    BuiltInPointSize = 1,$/;"	e	enum:spv::BuiltIn
BuiltInPosition	lib/vulkan/spirv.hpp	/^    BuiltInPosition = 0,$/;"	e	enum:spv::BuiltIn
BuiltInPrimitiveId	lib/vulkan/spirv.hpp	/^    BuiltInPrimitiveId = 7,$/;"	e	enum:spv::BuiltIn
BuiltInSampleId	lib/vulkan/spirv.hpp	/^    BuiltInSampleId = 18,$/;"	e	enum:spv::BuiltIn
BuiltInSampleMask	lib/vulkan/spirv.hpp	/^    BuiltInSampleMask = 20,$/;"	e	enum:spv::BuiltIn
BuiltInSamplePosition	lib/vulkan/spirv.hpp	/^    BuiltInSamplePosition = 19,$/;"	e	enum:spv::BuiltIn
BuiltInSubgroupId	lib/vulkan/spirv.hpp	/^    BuiltInSubgroupId = 40,$/;"	e	enum:spv::BuiltIn
BuiltInSubgroupLocalInvocationId	lib/vulkan/spirv.hpp	/^    BuiltInSubgroupLocalInvocationId = 41,$/;"	e	enum:spv::BuiltIn
BuiltInSubgroupMaxSize	lib/vulkan/spirv.hpp	/^    BuiltInSubgroupMaxSize = 37,$/;"	e	enum:spv::BuiltIn
BuiltInSubgroupSize	lib/vulkan/spirv.hpp	/^    BuiltInSubgroupSize = 36,$/;"	e	enum:spv::BuiltIn
BuiltInTessCoord	lib/vulkan/spirv.hpp	/^    BuiltInTessCoord = 13,$/;"	e	enum:spv::BuiltIn
BuiltInTessLevelInner	lib/vulkan/spirv.hpp	/^    BuiltInTessLevelInner = 12,$/;"	e	enum:spv::BuiltIn
BuiltInTessLevelOuter	lib/vulkan/spirv.hpp	/^    BuiltInTessLevelOuter = 11,$/;"	e	enum:spv::BuiltIn
BuiltInVertexId	lib/vulkan/spirv.hpp	/^    BuiltInVertexId = 5,$/;"	e	enum:spv::BuiltIn
BuiltInVertexIndex	lib/vulkan/spirv.hpp	/^    BuiltInVertexIndex = 42,$/;"	e	enum:spv::BuiltIn
BuiltInViewportIndex	lib/vulkan/spirv.hpp	/^    BuiltInViewportIndex = 10,$/;"	e	enum:spv::BuiltIn
BuiltInWorkDim	lib/vulkan/spirv.hpp	/^    BuiltInWorkDim = 30,$/;"	e	enum:spv::BuiltIn
BuiltInWorkgroupId	lib/vulkan/spirv.hpp	/^    BuiltInWorkgroupId = 26,$/;"	e	enum:spv::BuiltIn
BuiltInWorkgroupSize	lib/vulkan/spirv.hpp	/^    BuiltInWorkgroupSize = 25,$/;"	e	enum:spv::BuiltIn
CASE	lib/stb/stb_image.h	1360;"	d
CASE	lib/stb/stb_image.h	1378;"	d
CASE	lib/stb/stb_image.h	4084;"	d
CASE	lib/stb/stb_image.h	4097;"	d
CASE	lib/stb/stb_image.h	4101;"	d
CASE	lib/stb/stb_image.h	4114;"	d
COMBO	lib/stb/stb_image.h	1359;"	d
CURRENT_LOADER_ICD_INTERFACE_VERSION	lib/vulkan/vk_icd.h	31;"	d
CXX	Makefile	/^CXX=g++$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS=-Wall -Werror -std=c++14 -I. -Isrc -Iinc -Ilib$/;"	m
Capability	lib/vulkan/spirv.hpp	/^enum Capability {$/;"	g	namespace:spv
CapabilityAddresses	lib/vulkan/spirv.hpp	/^    CapabilityAddresses = 4,$/;"	e	enum:spv::Capability
CapabilityAtomicStorage	lib/vulkan/spirv.hpp	/^    CapabilityAtomicStorage = 21,$/;"	e	enum:spv::Capability
CapabilityClipDistance	lib/vulkan/spirv.hpp	/^    CapabilityClipDistance = 32,$/;"	e	enum:spv::Capability
CapabilityCullDistance	lib/vulkan/spirv.hpp	/^    CapabilityCullDistance = 33,$/;"	e	enum:spv::Capability
CapabilityDerivativeControl	lib/vulkan/spirv.hpp	/^    CapabilityDerivativeControl = 51,$/;"	e	enum:spv::Capability
CapabilityDeviceEnqueue	lib/vulkan/spirv.hpp	/^    CapabilityDeviceEnqueue = 19,$/;"	e	enum:spv::Capability
CapabilityFloat16	lib/vulkan/spirv.hpp	/^    CapabilityFloat16 = 9,$/;"	e	enum:spv::Capability
CapabilityFloat16Buffer	lib/vulkan/spirv.hpp	/^    CapabilityFloat16Buffer = 8,$/;"	e	enum:spv::Capability
CapabilityFloat64	lib/vulkan/spirv.hpp	/^    CapabilityFloat64 = 10,$/;"	e	enum:spv::Capability
CapabilityGenericPointer	lib/vulkan/spirv.hpp	/^    CapabilityGenericPointer = 38,$/;"	e	enum:spv::Capability
CapabilityGeometry	lib/vulkan/spirv.hpp	/^    CapabilityGeometry = 2,$/;"	e	enum:spv::Capability
CapabilityGeometryPointSize	lib/vulkan/spirv.hpp	/^    CapabilityGeometryPointSize = 24,$/;"	e	enum:spv::Capability
CapabilityGeometryStreams	lib/vulkan/spirv.hpp	/^    CapabilityGeometryStreams = 54,$/;"	e	enum:spv::Capability
CapabilityGroups	lib/vulkan/spirv.hpp	/^    CapabilityGroups = 18,$/;"	e	enum:spv::Capability
CapabilityImage1D	lib/vulkan/spirv.hpp	/^    CapabilityImage1D = 44,$/;"	e	enum:spv::Capability
CapabilityImageBasic	lib/vulkan/spirv.hpp	/^    CapabilityImageBasic = 13,$/;"	e	enum:spv::Capability
CapabilityImageBuffer	lib/vulkan/spirv.hpp	/^    CapabilityImageBuffer = 47,$/;"	e	enum:spv::Capability
CapabilityImageCubeArray	lib/vulkan/spirv.hpp	/^    CapabilityImageCubeArray = 34,$/;"	e	enum:spv::Capability
CapabilityImageGatherExtended	lib/vulkan/spirv.hpp	/^    CapabilityImageGatherExtended = 25,$/;"	e	enum:spv::Capability
CapabilityImageMSArray	lib/vulkan/spirv.hpp	/^    CapabilityImageMSArray = 48,$/;"	e	enum:spv::Capability
CapabilityImageMipmap	lib/vulkan/spirv.hpp	/^    CapabilityImageMipmap = 15,$/;"	e	enum:spv::Capability
CapabilityImageQuery	lib/vulkan/spirv.hpp	/^    CapabilityImageQuery = 50,$/;"	e	enum:spv::Capability
CapabilityImageReadWrite	lib/vulkan/spirv.hpp	/^    CapabilityImageReadWrite = 14,$/;"	e	enum:spv::Capability
CapabilityImageRect	lib/vulkan/spirv.hpp	/^    CapabilityImageRect = 36,$/;"	e	enum:spv::Capability
CapabilityInputAttachment	lib/vulkan/spirv.hpp	/^    CapabilityInputAttachment = 40,$/;"	e	enum:spv::Capability
CapabilityInt16	lib/vulkan/spirv.hpp	/^    CapabilityInt16 = 22,$/;"	e	enum:spv::Capability
CapabilityInt64	lib/vulkan/spirv.hpp	/^    CapabilityInt64 = 11,$/;"	e	enum:spv::Capability
CapabilityInt64Atomics	lib/vulkan/spirv.hpp	/^    CapabilityInt64Atomics = 12,$/;"	e	enum:spv::Capability
CapabilityInt8	lib/vulkan/spirv.hpp	/^    CapabilityInt8 = 39,$/;"	e	enum:spv::Capability
CapabilityInterpolationFunction	lib/vulkan/spirv.hpp	/^    CapabilityInterpolationFunction = 52,$/;"	e	enum:spv::Capability
CapabilityKernel	lib/vulkan/spirv.hpp	/^    CapabilityKernel = 6,$/;"	e	enum:spv::Capability
CapabilityLinkage	lib/vulkan/spirv.hpp	/^    CapabilityLinkage = 5,$/;"	e	enum:spv::Capability
CapabilityLiteralSampler	lib/vulkan/spirv.hpp	/^    CapabilityLiteralSampler = 20,$/;"	e	enum:spv::Capability
CapabilityMatrix	lib/vulkan/spirv.hpp	/^    CapabilityMatrix = 0,$/;"	e	enum:spv::Capability
CapabilityMax	lib/vulkan/spirv.hpp	/^    CapabilityMax = 0x7fffffff,$/;"	e	enum:spv::Capability
CapabilityMinLod	lib/vulkan/spirv.hpp	/^    CapabilityMinLod = 42,$/;"	e	enum:spv::Capability
CapabilityMultiViewport	lib/vulkan/spirv.hpp	/^    CapabilityMultiViewport = 57,$/;"	e	enum:spv::Capability
CapabilityNamedBarrier	lib/vulkan/spirv.hpp	/^    CapabilityNamedBarrier = 59,$/;"	e	enum:spv::Capability
CapabilityPipeStorage	lib/vulkan/spirv.hpp	/^    CapabilityPipeStorage = 60,$/;"	e	enum:spv::Capability
CapabilityPipes	lib/vulkan/spirv.hpp	/^    CapabilityPipes = 17,$/;"	e	enum:spv::Capability
CapabilitySampleRateShading	lib/vulkan/spirv.hpp	/^    CapabilitySampleRateShading = 35,$/;"	e	enum:spv::Capability
CapabilitySampled1D	lib/vulkan/spirv.hpp	/^    CapabilitySampled1D = 43,$/;"	e	enum:spv::Capability
CapabilitySampledBuffer	lib/vulkan/spirv.hpp	/^    CapabilitySampledBuffer = 46,$/;"	e	enum:spv::Capability
CapabilitySampledCubeArray	lib/vulkan/spirv.hpp	/^    CapabilitySampledCubeArray = 45,$/;"	e	enum:spv::Capability
CapabilitySampledImageArrayDynamicIndexing	lib/vulkan/spirv.hpp	/^    CapabilitySampledImageArrayDynamicIndexing = 29,$/;"	e	enum:spv::Capability
CapabilitySampledRect	lib/vulkan/spirv.hpp	/^    CapabilitySampledRect = 37,$/;"	e	enum:spv::Capability
CapabilityShader	lib/vulkan/spirv.hpp	/^    CapabilityShader = 1,$/;"	e	enum:spv::Capability
CapabilitySparseResidency	lib/vulkan/spirv.hpp	/^    CapabilitySparseResidency = 41,$/;"	e	enum:spv::Capability
CapabilityStorageBufferArrayDynamicIndexing	lib/vulkan/spirv.hpp	/^    CapabilityStorageBufferArrayDynamicIndexing = 30,$/;"	e	enum:spv::Capability
CapabilityStorageImageArrayDynamicIndexing	lib/vulkan/spirv.hpp	/^    CapabilityStorageImageArrayDynamicIndexing = 31,$/;"	e	enum:spv::Capability
CapabilityStorageImageExtendedFormats	lib/vulkan/spirv.hpp	/^    CapabilityStorageImageExtendedFormats = 49,$/;"	e	enum:spv::Capability
CapabilityStorageImageMultisample	lib/vulkan/spirv.hpp	/^    CapabilityStorageImageMultisample = 27,$/;"	e	enum:spv::Capability
CapabilityStorageImageReadWithoutFormat	lib/vulkan/spirv.hpp	/^    CapabilityStorageImageReadWithoutFormat = 55,$/;"	e	enum:spv::Capability
CapabilityStorageImageWriteWithoutFormat	lib/vulkan/spirv.hpp	/^    CapabilityStorageImageWriteWithoutFormat = 56,$/;"	e	enum:spv::Capability
CapabilitySubgroupDispatch	lib/vulkan/spirv.hpp	/^    CapabilitySubgroupDispatch = 58,$/;"	e	enum:spv::Capability
CapabilityTessellation	lib/vulkan/spirv.hpp	/^    CapabilityTessellation = 3,$/;"	e	enum:spv::Capability
CapabilityTessellationPointSize	lib/vulkan/spirv.hpp	/^    CapabilityTessellationPointSize = 23,$/;"	e	enum:spv::Capability
CapabilityTransformFeedback	lib/vulkan/spirv.hpp	/^    CapabilityTransformFeedback = 53,$/;"	e	enum:spv::Capability
CapabilityUniformBufferArrayDynamicIndexing	lib/vulkan/spirv.hpp	/^    CapabilityUniformBufferArrayDynamicIndexing = 28,$/;"	e	enum:spv::Capability
CapabilityVector16	lib/vulkan/spirv.hpp	/^    CapabilityVector16 = 7,$/;"	e	enum:spv::Capability
CmdBeginQuery	lib/vulkan/vk_layer.h	/^    PFN_vkCmdBeginQuery CmdBeginQuery;$/;"	m	struct:VkLayerDispatchTable_
CmdBeginRenderPass	lib/vulkan/vk_layer.h	/^    PFN_vkCmdBeginRenderPass CmdBeginRenderPass;$/;"	m	struct:VkLayerDispatchTable_
CmdBindDescriptorSets	lib/vulkan/vk_layer.h	/^    PFN_vkCmdBindDescriptorSets CmdBindDescriptorSets;$/;"	m	struct:VkLayerDispatchTable_
CmdBindIndexBuffer	lib/vulkan/vk_layer.h	/^    PFN_vkCmdBindIndexBuffer CmdBindIndexBuffer;$/;"	m	struct:VkLayerDispatchTable_
CmdBindPipeline	lib/vulkan/vk_layer.h	/^    PFN_vkCmdBindPipeline CmdBindPipeline;$/;"	m	struct:VkLayerDispatchTable_
CmdBindVertexBuffers	lib/vulkan/vk_layer.h	/^    PFN_vkCmdBindVertexBuffers CmdBindVertexBuffers;$/;"	m	struct:VkLayerDispatchTable_
CmdBlitImage	lib/vulkan/vk_layer.h	/^    PFN_vkCmdBlitImage CmdBlitImage;$/;"	m	struct:VkLayerDispatchTable_
CmdClearAttachments	lib/vulkan/vk_layer.h	/^    PFN_vkCmdClearAttachments CmdClearAttachments;$/;"	m	struct:VkLayerDispatchTable_
CmdClearColorImage	lib/vulkan/vk_layer.h	/^    PFN_vkCmdClearColorImage CmdClearColorImage;$/;"	m	struct:VkLayerDispatchTable_
CmdClearDepthStencilImage	lib/vulkan/vk_layer.h	/^    PFN_vkCmdClearDepthStencilImage CmdClearDepthStencilImage;$/;"	m	struct:VkLayerDispatchTable_
CmdCopyBuffer	lib/vulkan/vk_layer.h	/^    PFN_vkCmdCopyBuffer CmdCopyBuffer;$/;"	m	struct:VkLayerDispatchTable_
CmdCopyBufferToImage	lib/vulkan/vk_layer.h	/^    PFN_vkCmdCopyBufferToImage CmdCopyBufferToImage;$/;"	m	struct:VkLayerDispatchTable_
CmdCopyImage	lib/vulkan/vk_layer.h	/^    PFN_vkCmdCopyImage CmdCopyImage;$/;"	m	struct:VkLayerDispatchTable_
CmdCopyImageToBuffer	lib/vulkan/vk_layer.h	/^    PFN_vkCmdCopyImageToBuffer CmdCopyImageToBuffer;$/;"	m	struct:VkLayerDispatchTable_
CmdCopyQueryPoolResults	lib/vulkan/vk_layer.h	/^    PFN_vkCmdCopyQueryPoolResults CmdCopyQueryPoolResults;$/;"	m	struct:VkLayerDispatchTable_
CmdDispatch	lib/vulkan/vk_layer.h	/^    PFN_vkCmdDispatch CmdDispatch;$/;"	m	struct:VkLayerDispatchTable_
CmdDispatchIndirect	lib/vulkan/vk_layer.h	/^    PFN_vkCmdDispatchIndirect CmdDispatchIndirect;$/;"	m	struct:VkLayerDispatchTable_
CmdDraw	lib/vulkan/vk_layer.h	/^    PFN_vkCmdDraw CmdDraw;$/;"	m	struct:VkLayerDispatchTable_
CmdDrawIndexed	lib/vulkan/vk_layer.h	/^    PFN_vkCmdDrawIndexed CmdDrawIndexed;$/;"	m	struct:VkLayerDispatchTable_
CmdDrawIndexedIndirect	lib/vulkan/vk_layer.h	/^    PFN_vkCmdDrawIndexedIndirect CmdDrawIndexedIndirect;$/;"	m	struct:VkLayerDispatchTable_
CmdDrawIndirect	lib/vulkan/vk_layer.h	/^    PFN_vkCmdDrawIndirect CmdDrawIndirect;$/;"	m	struct:VkLayerDispatchTable_
CmdEndQuery	lib/vulkan/vk_layer.h	/^    PFN_vkCmdEndQuery CmdEndQuery;$/;"	m	struct:VkLayerDispatchTable_
CmdEndRenderPass	lib/vulkan/vk_layer.h	/^    PFN_vkCmdEndRenderPass CmdEndRenderPass;$/;"	m	struct:VkLayerDispatchTable_
CmdExecuteCommands	lib/vulkan/vk_layer.h	/^    PFN_vkCmdExecuteCommands CmdExecuteCommands;$/;"	m	struct:VkLayerDispatchTable_
CmdFillBuffer	lib/vulkan/vk_layer.h	/^    PFN_vkCmdFillBuffer CmdFillBuffer;$/;"	m	struct:VkLayerDispatchTable_
CmdNextSubpass	lib/vulkan/vk_layer.h	/^    PFN_vkCmdNextSubpass CmdNextSubpass;$/;"	m	struct:VkLayerDispatchTable_
CmdPipelineBarrier	lib/vulkan/vk_layer.h	/^    PFN_vkCmdPipelineBarrier CmdPipelineBarrier;$/;"	m	struct:VkLayerDispatchTable_
CmdPushConstants	lib/vulkan/vk_layer.h	/^    PFN_vkCmdPushConstants CmdPushConstants;$/;"	m	struct:VkLayerDispatchTable_
CmdResetEvent	lib/vulkan/vk_layer.h	/^    PFN_vkCmdResetEvent CmdResetEvent;$/;"	m	struct:VkLayerDispatchTable_
CmdResetQueryPool	lib/vulkan/vk_layer.h	/^    PFN_vkCmdResetQueryPool CmdResetQueryPool;$/;"	m	struct:VkLayerDispatchTable_
CmdResolveImage	lib/vulkan/vk_layer.h	/^    PFN_vkCmdResolveImage CmdResolveImage;$/;"	m	struct:VkLayerDispatchTable_
CmdSetBlendConstants	lib/vulkan/vk_layer.h	/^    PFN_vkCmdSetBlendConstants CmdSetBlendConstants;$/;"	m	struct:VkLayerDispatchTable_
CmdSetDepthBias	lib/vulkan/vk_layer.h	/^    PFN_vkCmdSetDepthBias CmdSetDepthBias;$/;"	m	struct:VkLayerDispatchTable_
CmdSetDepthBounds	lib/vulkan/vk_layer.h	/^    PFN_vkCmdSetDepthBounds CmdSetDepthBounds;$/;"	m	struct:VkLayerDispatchTable_
CmdSetEvent	lib/vulkan/vk_layer.h	/^    PFN_vkCmdSetEvent CmdSetEvent;$/;"	m	struct:VkLayerDispatchTable_
CmdSetLineWidth	lib/vulkan/vk_layer.h	/^    PFN_vkCmdSetLineWidth CmdSetLineWidth;$/;"	m	struct:VkLayerDispatchTable_
CmdSetScissor	lib/vulkan/vk_layer.h	/^    PFN_vkCmdSetScissor CmdSetScissor;$/;"	m	struct:VkLayerDispatchTable_
CmdSetStencilCompareMask	lib/vulkan/vk_layer.h	/^    PFN_vkCmdSetStencilCompareMask CmdSetStencilCompareMask;$/;"	m	struct:VkLayerDispatchTable_
CmdSetStencilReference	lib/vulkan/vk_layer.h	/^    PFN_vkCmdSetStencilReference CmdSetStencilReference;$/;"	m	struct:VkLayerDispatchTable_
CmdSetStencilWriteMask	lib/vulkan/vk_layer.h	/^    PFN_vkCmdSetStencilWriteMask CmdSetStencilWriteMask;$/;"	m	struct:VkLayerDispatchTable_
CmdSetViewport	lib/vulkan/vk_layer.h	/^    PFN_vkCmdSetViewport CmdSetViewport;$/;"	m	struct:VkLayerDispatchTable_
CmdUpdateBuffer	lib/vulkan/vk_layer.h	/^    PFN_vkCmdUpdateBuffer CmdUpdateBuffer;$/;"	m	struct:VkLayerDispatchTable_
CmdWaitEvents	lib/vulkan/vk_layer.h	/^    PFN_vkCmdWaitEvents CmdWaitEvents;$/;"	m	struct:VkLayerDispatchTable_
CmdWriteTimestamp	lib/vulkan/vk_layer.h	/^    PFN_vkCmdWriteTimestamp CmdWriteTimestamp;$/;"	m	struct:VkLayerDispatchTable_
CreateAndroidSurfaceKHR	lib/vulkan/vk_layer.h	/^    PFN_vkCreateAndroidSurfaceKHR CreateAndroidSurfaceKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
CreateBuffer	lib/vulkan/vk_layer.h	/^    PFN_vkCreateBuffer CreateBuffer;$/;"	m	struct:VkLayerDispatchTable_
CreateBufferView	lib/vulkan/vk_layer.h	/^    PFN_vkCreateBufferView CreateBufferView;$/;"	m	struct:VkLayerDispatchTable_
CreateCommandPool	lib/vulkan/vk_layer.h	/^    PFN_vkCreateCommandPool CreateCommandPool;$/;"	m	struct:VkLayerDispatchTable_
CreateComputePipelines	lib/vulkan/vk_layer.h	/^    PFN_vkCreateComputePipelines CreateComputePipelines;$/;"	m	struct:VkLayerDispatchTable_
CreateDebugReportCallbackEXT	lib/vulkan/vk_layer.h	/^    PFN_vkCreateDebugReportCallbackEXT CreateDebugReportCallbackEXT;$/;"	m	struct:VkLayerInstanceDispatchTable_
CreateDescriptorPool	lib/vulkan/vk_layer.h	/^    PFN_vkCreateDescriptorPool CreateDescriptorPool;$/;"	m	struct:VkLayerDispatchTable_
CreateDescriptorSetLayout	lib/vulkan/vk_layer.h	/^    PFN_vkCreateDescriptorSetLayout CreateDescriptorSetLayout;$/;"	m	struct:VkLayerDispatchTable_
CreateDisplayModeKHR	lib/vulkan/vk_layer.h	/^        CreateDisplayModeKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
CreateDisplayPlaneSurfaceKHR	lib/vulkan/vk_layer.h	/^        CreateDisplayPlaneSurfaceKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
CreateEvent	lib/vulkan/vk_layer.h	/^    PFN_vkCreateEvent CreateEvent;$/;"	m	struct:VkLayerDispatchTable_
CreateFence	lib/vulkan/vk_layer.h	/^    PFN_vkCreateFence CreateFence;$/;"	m	struct:VkLayerDispatchTable_
CreateFramebuffer	lib/vulkan/vk_layer.h	/^    PFN_vkCreateFramebuffer CreateFramebuffer;$/;"	m	struct:VkLayerDispatchTable_
CreateGraphicsPipelines	lib/vulkan/vk_layer.h	/^    PFN_vkCreateGraphicsPipelines CreateGraphicsPipelines;$/;"	m	struct:VkLayerDispatchTable_
CreateImage	lib/vulkan/vk_layer.h	/^    PFN_vkCreateImage CreateImage;$/;"	m	struct:VkLayerDispatchTable_
CreateImageView	lib/vulkan/vk_layer.h	/^    PFN_vkCreateImageView CreateImageView;$/;"	m	struct:VkLayerDispatchTable_
CreateMirSurfaceKHR	lib/vulkan/vk_layer.h	/^    PFN_vkCreateMirSurfaceKHR CreateMirSurfaceKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
CreatePipelineCache	lib/vulkan/vk_layer.h	/^    PFN_vkCreatePipelineCache CreatePipelineCache;$/;"	m	struct:VkLayerDispatchTable_
CreatePipelineLayout	lib/vulkan/vk_layer.h	/^    PFN_vkCreatePipelineLayout CreatePipelineLayout;$/;"	m	struct:VkLayerDispatchTable_
CreateQueryPool	lib/vulkan/vk_layer.h	/^    PFN_vkCreateQueryPool CreateQueryPool;$/;"	m	struct:VkLayerDispatchTable_
CreateRenderPass	lib/vulkan/vk_layer.h	/^    PFN_vkCreateRenderPass CreateRenderPass;$/;"	m	struct:VkLayerDispatchTable_
CreateSampler	lib/vulkan/vk_layer.h	/^    PFN_vkCreateSampler CreateSampler;$/;"	m	struct:VkLayerDispatchTable_
CreateSemaphore	lib/vulkan/vk_layer.h	/^    PFN_vkCreateSemaphore CreateSemaphore;$/;"	m	struct:VkLayerDispatchTable_
CreateShaderModule	lib/vulkan/vk_layer.h	/^    PFN_vkCreateShaderModule CreateShaderModule;$/;"	m	struct:VkLayerDispatchTable_
CreateSwapchainKHR	lib/vulkan/vk_layer.h	/^    PFN_vkCreateSwapchainKHR CreateSwapchainKHR;$/;"	m	struct:VkLayerDispatchTable_
CreateWaylandSurfaceKHR	lib/vulkan/vk_layer.h	/^    PFN_vkCreateWaylandSurfaceKHR CreateWaylandSurfaceKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
CreateWin32SurfaceKHR	lib/vulkan/vk_layer.h	/^    PFN_vkCreateWin32SurfaceKHR CreateWin32SurfaceKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
CreateXcbSurfaceKHR	lib/vulkan/vk_layer.h	/^    PFN_vkCreateXcbSurfaceKHR CreateXcbSurfaceKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
CreateXlibSurfaceKHR	lib/vulkan/vk_layer.h	/^    PFN_vkCreateXlibSurfaceKHR CreateXlibSurfaceKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
DEFAULT_WINDOW_HEIGHT	inc/window.h	13;"	d
DEFAULT_WINDOW_WIDTH	inc/window.h	12;"	d
DebugReportMessageEXT	lib/vulkan/vk_layer.h	/^    PFN_vkDebugReportMessageEXT DebugReportMessageEXT;$/;"	m	struct:VkLayerInstanceDispatchTable_
Decoration	lib/vulkan/spirv.hpp	/^enum Decoration {$/;"	g	namespace:spv
DecorationAliased	lib/vulkan/spirv.hpp	/^    DecorationAliased = 20,$/;"	e	enum:spv::Decoration
DecorationAlignment	lib/vulkan/spirv.hpp	/^    DecorationAlignment = 44,$/;"	e	enum:spv::Decoration
DecorationArrayStride	lib/vulkan/spirv.hpp	/^    DecorationArrayStride = 6,$/;"	e	enum:spv::Decoration
DecorationBinding	lib/vulkan/spirv.hpp	/^    DecorationBinding = 33,$/;"	e	enum:spv::Decoration
DecorationBlock	lib/vulkan/spirv.hpp	/^    DecorationBlock = 2,$/;"	e	enum:spv::Decoration
DecorationBufferBlock	lib/vulkan/spirv.hpp	/^    DecorationBufferBlock = 3,$/;"	e	enum:spv::Decoration
DecorationBuiltIn	lib/vulkan/spirv.hpp	/^    DecorationBuiltIn = 11,$/;"	e	enum:spv::Decoration
DecorationCPacked	lib/vulkan/spirv.hpp	/^    DecorationCPacked = 10,$/;"	e	enum:spv::Decoration
DecorationCentroid	lib/vulkan/spirv.hpp	/^    DecorationCentroid = 16,$/;"	e	enum:spv::Decoration
DecorationCoherent	lib/vulkan/spirv.hpp	/^    DecorationCoherent = 23,$/;"	e	enum:spv::Decoration
DecorationColMajor	lib/vulkan/spirv.hpp	/^    DecorationColMajor = 5,$/;"	e	enum:spv::Decoration
DecorationComponent	lib/vulkan/spirv.hpp	/^    DecorationComponent = 31,$/;"	e	enum:spv::Decoration
DecorationConstant	lib/vulkan/spirv.hpp	/^    DecorationConstant = 22,$/;"	e	enum:spv::Decoration
DecorationDescriptorSet	lib/vulkan/spirv.hpp	/^    DecorationDescriptorSet = 34,$/;"	e	enum:spv::Decoration
DecorationFPFastMathMode	lib/vulkan/spirv.hpp	/^    DecorationFPFastMathMode = 40,$/;"	e	enum:spv::Decoration
DecorationFPRoundingMode	lib/vulkan/spirv.hpp	/^    DecorationFPRoundingMode = 39,$/;"	e	enum:spv::Decoration
DecorationFlat	lib/vulkan/spirv.hpp	/^    DecorationFlat = 14,$/;"	e	enum:spv::Decoration
DecorationFuncParamAttr	lib/vulkan/spirv.hpp	/^    DecorationFuncParamAttr = 38,$/;"	e	enum:spv::Decoration
DecorationGLSLPacked	lib/vulkan/spirv.hpp	/^    DecorationGLSLPacked = 9,$/;"	e	enum:spv::Decoration
DecorationGLSLShared	lib/vulkan/spirv.hpp	/^    DecorationGLSLShared = 8,$/;"	e	enum:spv::Decoration
DecorationIndex	lib/vulkan/spirv.hpp	/^    DecorationIndex = 32,$/;"	e	enum:spv::Decoration
DecorationInputAttachmentIndex	lib/vulkan/spirv.hpp	/^    DecorationInputAttachmentIndex = 43,$/;"	e	enum:spv::Decoration
DecorationInvariant	lib/vulkan/spirv.hpp	/^    DecorationInvariant = 18,$/;"	e	enum:spv::Decoration
DecorationLinkageAttributes	lib/vulkan/spirv.hpp	/^    DecorationLinkageAttributes = 41,$/;"	e	enum:spv::Decoration
DecorationLocation	lib/vulkan/spirv.hpp	/^    DecorationLocation = 30,$/;"	e	enum:spv::Decoration
DecorationMatrixStride	lib/vulkan/spirv.hpp	/^    DecorationMatrixStride = 7,$/;"	e	enum:spv::Decoration
DecorationMax	lib/vulkan/spirv.hpp	/^    DecorationMax = 0x7fffffff,$/;"	e	enum:spv::Decoration
DecorationMaxByteOffset	lib/vulkan/spirv.hpp	/^    DecorationMaxByteOffset = 45,$/;"	e	enum:spv::Decoration
DecorationNoContraction	lib/vulkan/spirv.hpp	/^    DecorationNoContraction = 42,$/;"	e	enum:spv::Decoration
DecorationNoPerspective	lib/vulkan/spirv.hpp	/^    DecorationNoPerspective = 13,$/;"	e	enum:spv::Decoration
DecorationNonReadable	lib/vulkan/spirv.hpp	/^    DecorationNonReadable = 25,$/;"	e	enum:spv::Decoration
DecorationNonWritable	lib/vulkan/spirv.hpp	/^    DecorationNonWritable = 24,$/;"	e	enum:spv::Decoration
DecorationOffset	lib/vulkan/spirv.hpp	/^    DecorationOffset = 35,$/;"	e	enum:spv::Decoration
DecorationPatch	lib/vulkan/spirv.hpp	/^    DecorationPatch = 15,$/;"	e	enum:spv::Decoration
DecorationRelaxedPrecision	lib/vulkan/spirv.hpp	/^    DecorationRelaxedPrecision = 0,$/;"	e	enum:spv::Decoration
DecorationRestrict	lib/vulkan/spirv.hpp	/^    DecorationRestrict = 19,$/;"	e	enum:spv::Decoration
DecorationRowMajor	lib/vulkan/spirv.hpp	/^    DecorationRowMajor = 4,$/;"	e	enum:spv::Decoration
DecorationSample	lib/vulkan/spirv.hpp	/^    DecorationSample = 17,$/;"	e	enum:spv::Decoration
DecorationSaturatedConversion	lib/vulkan/spirv.hpp	/^    DecorationSaturatedConversion = 28,$/;"	e	enum:spv::Decoration
DecorationSpecId	lib/vulkan/spirv.hpp	/^    DecorationSpecId = 1,$/;"	e	enum:spv::Decoration
DecorationStream	lib/vulkan/spirv.hpp	/^    DecorationStream = 29,$/;"	e	enum:spv::Decoration
DecorationUniform	lib/vulkan/spirv.hpp	/^    DecorationUniform = 26,$/;"	e	enum:spv::Decoration
DecorationVolatile	lib/vulkan/spirv.hpp	/^    DecorationVolatile = 21,$/;"	e	enum:spv::Decoration
DecorationXfbBuffer	lib/vulkan/spirv.hpp	/^    DecorationXfbBuffer = 36,$/;"	e	enum:spv::Decoration
DecorationXfbStride	lib/vulkan/spirv.hpp	/^    DecorationXfbStride = 37,$/;"	e	enum:spv::Decoration
DestroyBuffer	lib/vulkan/vk_layer.h	/^    PFN_vkDestroyBuffer DestroyBuffer;$/;"	m	struct:VkLayerDispatchTable_
DestroyBufferView	lib/vulkan/vk_layer.h	/^    PFN_vkDestroyBufferView DestroyBufferView;$/;"	m	struct:VkLayerDispatchTable_
DestroyCommandPool	lib/vulkan/vk_layer.h	/^    PFN_vkDestroyCommandPool DestroyCommandPool;$/;"	m	struct:VkLayerDispatchTable_
DestroyDebugReportCallbackEXT	lib/vulkan/vk_layer.h	/^    PFN_vkDestroyDebugReportCallbackEXT DestroyDebugReportCallbackEXT;$/;"	m	struct:VkLayerInstanceDispatchTable_
DestroyDescriptorPool	lib/vulkan/vk_layer.h	/^    PFN_vkDestroyDescriptorPool DestroyDescriptorPool;$/;"	m	struct:VkLayerDispatchTable_
DestroyDescriptorSetLayout	lib/vulkan/vk_layer.h	/^    PFN_vkDestroyDescriptorSetLayout DestroyDescriptorSetLayout;$/;"	m	struct:VkLayerDispatchTable_
DestroyDevice	lib/vulkan/vk_layer.h	/^    PFN_vkDestroyDevice DestroyDevice;$/;"	m	struct:VkLayerDispatchTable_
DestroyEvent	lib/vulkan/vk_layer.h	/^    PFN_vkDestroyEvent DestroyEvent;$/;"	m	struct:VkLayerDispatchTable_
DestroyFence	lib/vulkan/vk_layer.h	/^    PFN_vkDestroyFence DestroyFence;$/;"	m	struct:VkLayerDispatchTable_
DestroyFramebuffer	lib/vulkan/vk_layer.h	/^    PFN_vkDestroyFramebuffer DestroyFramebuffer;$/;"	m	struct:VkLayerDispatchTable_
DestroyImage	lib/vulkan/vk_layer.h	/^    PFN_vkDestroyImage DestroyImage;$/;"	m	struct:VkLayerDispatchTable_
DestroyImageView	lib/vulkan/vk_layer.h	/^    PFN_vkDestroyImageView DestroyImageView;$/;"	m	struct:VkLayerDispatchTable_
DestroyInstance	lib/vulkan/vk_layer.h	/^    PFN_vkDestroyInstance DestroyInstance;$/;"	m	struct:VkLayerInstanceDispatchTable_
DestroyPipeline	lib/vulkan/vk_layer.h	/^    PFN_vkDestroyPipeline DestroyPipeline;$/;"	m	struct:VkLayerDispatchTable_
DestroyPipelineCache	lib/vulkan/vk_layer.h	/^    PFN_vkDestroyPipelineCache DestroyPipelineCache;$/;"	m	struct:VkLayerDispatchTable_
DestroyPipelineLayout	lib/vulkan/vk_layer.h	/^    PFN_vkDestroyPipelineLayout DestroyPipelineLayout;$/;"	m	struct:VkLayerDispatchTable_
DestroyQueryPool	lib/vulkan/vk_layer.h	/^    PFN_vkDestroyQueryPool DestroyQueryPool;$/;"	m	struct:VkLayerDispatchTable_
DestroyRenderPass	lib/vulkan/vk_layer.h	/^    PFN_vkDestroyRenderPass DestroyRenderPass;$/;"	m	struct:VkLayerDispatchTable_
DestroySampler	lib/vulkan/vk_layer.h	/^    PFN_vkDestroySampler DestroySampler;$/;"	m	struct:VkLayerDispatchTable_
DestroySemaphore	lib/vulkan/vk_layer.h	/^    PFN_vkDestroySemaphore DestroySemaphore;$/;"	m	struct:VkLayerDispatchTable_
DestroyShaderModule	lib/vulkan/vk_layer.h	/^    PFN_vkDestroyShaderModule DestroyShaderModule;$/;"	m	struct:VkLayerDispatchTable_
DestroySurfaceKHR	lib/vulkan/vk_layer.h	/^    PFN_vkDestroySurfaceKHR DestroySurfaceKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
DestroySwapchainKHR	lib/vulkan/vk_layer.h	/^    PFN_vkDestroySwapchainKHR DestroySwapchainKHR;$/;"	m	struct:VkLayerDispatchTable_
DeviceQueueIndicies	inc/device_queue_indices.h	/^class DeviceQueueIndicies {$/;"	c
DeviceQueueIndicies	src/device_queue_indices.cpp	/^DeviceQueueIndicies::DeviceQueueIndicies(): $/;"	f	class:DeviceQueueIndicies
DeviceWaitIdle	lib/vulkan/vk_layer.h	/^    PFN_vkDeviceWaitIdle DeviceWaitIdle;$/;"	m	struct:VkLayerDispatchTable_
Dim	lib/vulkan/spirv.hpp	/^enum Dim {$/;"	g	namespace:spv
Dim1D	lib/vulkan/spirv.hpp	/^    Dim1D = 0,$/;"	e	enum:spv::Dim
Dim2D	lib/vulkan/spirv.hpp	/^    Dim2D = 1,$/;"	e	enum:spv::Dim
Dim3D	lib/vulkan/spirv.hpp	/^    Dim3D = 2,$/;"	e	enum:spv::Dim
DimBuffer	lib/vulkan/spirv.hpp	/^    DimBuffer = 5,$/;"	e	enum:spv::Dim
DimCube	lib/vulkan/spirv.hpp	/^    DimCube = 3,$/;"	e	enum:spv::Dim
DimMax	lib/vulkan/spirv.hpp	/^    DimMax = 0x7fffffff,$/;"	e	enum:spv::Dim
DimRect	lib/vulkan/spirv.hpp	/^    DimRect = 4,$/;"	e	enum:spv::Dim
DimSubpassData	lib/vulkan/spirv.hpp	/^    DimSubpassData = 6,$/;"	e	enum:spv::Dim
DirectoryOfThisScript	.ycm_extra_conf.py	/^def DirectoryOfThisScript():$/;"	f
ENGINE_RELATIVE_ROOT	inc/file_manager.h	/^	static constexpr const char* ENGINE_RELATIVE_ROOT = "\/..\/";$/;"	m	class:FileManager
EndCommandBuffer	lib/vulkan/vk_layer.h	/^    PFN_vkEndCommandBuffer EndCommandBuffer;$/;"	m	struct:VkLayerDispatchTable_
Engine	inc/engine.h	/^class Engine {$/;"	c
Engine	src/engine.cpp	/^Engine::Engine():$/;"	f	class:Engine
EnumerateDeviceExtensionProperties	lib/vulkan/vk_layer.h	/^    PFN_vkEnumerateDeviceExtensionProperties EnumerateDeviceExtensionProperties;$/;"	m	struct:VkLayerInstanceDispatchTable_
EnumerateDeviceLayerProperties	lib/vulkan/vk_layer.h	/^    PFN_vkEnumerateDeviceLayerProperties EnumerateDeviceLayerProperties;$/;"	m	struct:VkLayerInstanceDispatchTable_
EnumeratePhysicalDevices	lib/vulkan/vk_layer.h	/^    PFN_vkEnumeratePhysicalDevices EnumeratePhysicalDevices;$/;"	m	struct:VkLayerInstanceDispatchTable_
ExecutionMode	lib/vulkan/spirv.hpp	/^enum ExecutionMode {$/;"	g	namespace:spv
ExecutionModeContractionOff	lib/vulkan/spirv.hpp	/^    ExecutionModeContractionOff = 31,$/;"	e	enum:spv::ExecutionMode
ExecutionModeDepthGreater	lib/vulkan/spirv.hpp	/^    ExecutionModeDepthGreater = 14,$/;"	e	enum:spv::ExecutionMode
ExecutionModeDepthLess	lib/vulkan/spirv.hpp	/^    ExecutionModeDepthLess = 15,$/;"	e	enum:spv::ExecutionMode
ExecutionModeDepthReplacing	lib/vulkan/spirv.hpp	/^    ExecutionModeDepthReplacing = 12,$/;"	e	enum:spv::ExecutionMode
ExecutionModeDepthUnchanged	lib/vulkan/spirv.hpp	/^    ExecutionModeDepthUnchanged = 16,$/;"	e	enum:spv::ExecutionMode
ExecutionModeEarlyFragmentTests	lib/vulkan/spirv.hpp	/^    ExecutionModeEarlyFragmentTests = 9,$/;"	e	enum:spv::ExecutionMode
ExecutionModeFinalizer	lib/vulkan/spirv.hpp	/^    ExecutionModeFinalizer = 34,$/;"	e	enum:spv::ExecutionMode
ExecutionModeInitializer	lib/vulkan/spirv.hpp	/^    ExecutionModeInitializer = 33,$/;"	e	enum:spv::ExecutionMode
ExecutionModeInputLines	lib/vulkan/spirv.hpp	/^    ExecutionModeInputLines = 20,$/;"	e	enum:spv::ExecutionMode
ExecutionModeInputLinesAdjacency	lib/vulkan/spirv.hpp	/^    ExecutionModeInputLinesAdjacency = 21,$/;"	e	enum:spv::ExecutionMode
ExecutionModeInputPoints	lib/vulkan/spirv.hpp	/^    ExecutionModeInputPoints = 19,$/;"	e	enum:spv::ExecutionMode
ExecutionModeInputTrianglesAdjacency	lib/vulkan/spirv.hpp	/^    ExecutionModeInputTrianglesAdjacency = 23,$/;"	e	enum:spv::ExecutionMode
ExecutionModeInvocations	lib/vulkan/spirv.hpp	/^    ExecutionModeInvocations = 0,$/;"	e	enum:spv::ExecutionMode
ExecutionModeIsolines	lib/vulkan/spirv.hpp	/^    ExecutionModeIsolines = 25,$/;"	e	enum:spv::ExecutionMode
ExecutionModeLocalSize	lib/vulkan/spirv.hpp	/^    ExecutionModeLocalSize = 17,$/;"	e	enum:spv::ExecutionMode
ExecutionModeLocalSizeHint	lib/vulkan/spirv.hpp	/^    ExecutionModeLocalSizeHint = 18,$/;"	e	enum:spv::ExecutionMode
ExecutionModeMax	lib/vulkan/spirv.hpp	/^    ExecutionModeMax = 0x7fffffff,$/;"	e	enum:spv::ExecutionMode
ExecutionModeOriginLowerLeft	lib/vulkan/spirv.hpp	/^    ExecutionModeOriginLowerLeft = 8,$/;"	e	enum:spv::ExecutionMode
ExecutionModeOriginUpperLeft	lib/vulkan/spirv.hpp	/^    ExecutionModeOriginUpperLeft = 7,$/;"	e	enum:spv::ExecutionMode
ExecutionModeOutputLineStrip	lib/vulkan/spirv.hpp	/^    ExecutionModeOutputLineStrip = 28,$/;"	e	enum:spv::ExecutionMode
ExecutionModeOutputPoints	lib/vulkan/spirv.hpp	/^    ExecutionModeOutputPoints = 27,$/;"	e	enum:spv::ExecutionMode
ExecutionModeOutputTriangleStrip	lib/vulkan/spirv.hpp	/^    ExecutionModeOutputTriangleStrip = 29,$/;"	e	enum:spv::ExecutionMode
ExecutionModeOutputVertices	lib/vulkan/spirv.hpp	/^    ExecutionModeOutputVertices = 26,$/;"	e	enum:spv::ExecutionMode
ExecutionModePixelCenterInteger	lib/vulkan/spirv.hpp	/^    ExecutionModePixelCenterInteger = 6,$/;"	e	enum:spv::ExecutionMode
ExecutionModePointMode	lib/vulkan/spirv.hpp	/^    ExecutionModePointMode = 10,$/;"	e	enum:spv::ExecutionMode
ExecutionModeQuads	lib/vulkan/spirv.hpp	/^    ExecutionModeQuads = 24,$/;"	e	enum:spv::ExecutionMode
ExecutionModeSpacingEqual	lib/vulkan/spirv.hpp	/^    ExecutionModeSpacingEqual = 1,$/;"	e	enum:spv::ExecutionMode
ExecutionModeSpacingFractionalEven	lib/vulkan/spirv.hpp	/^    ExecutionModeSpacingFractionalEven = 2,$/;"	e	enum:spv::ExecutionMode
ExecutionModeSpacingFractionalOdd	lib/vulkan/spirv.hpp	/^    ExecutionModeSpacingFractionalOdd = 3,$/;"	e	enum:spv::ExecutionMode
ExecutionModeSubgroupSize	lib/vulkan/spirv.hpp	/^    ExecutionModeSubgroupSize = 35,$/;"	e	enum:spv::ExecutionMode
ExecutionModeSubgroupsPerWorkgroup	lib/vulkan/spirv.hpp	/^    ExecutionModeSubgroupsPerWorkgroup = 36,$/;"	e	enum:spv::ExecutionMode
ExecutionModeTriangles	lib/vulkan/spirv.hpp	/^    ExecutionModeTriangles = 22,$/;"	e	enum:spv::ExecutionMode
ExecutionModeVecTypeHint	lib/vulkan/spirv.hpp	/^    ExecutionModeVecTypeHint = 30,$/;"	e	enum:spv::ExecutionMode
ExecutionModeVertexOrderCcw	lib/vulkan/spirv.hpp	/^    ExecutionModeVertexOrderCcw = 5,$/;"	e	enum:spv::ExecutionMode
ExecutionModeVertexOrderCw	lib/vulkan/spirv.hpp	/^    ExecutionModeVertexOrderCw = 4,$/;"	e	enum:spv::ExecutionMode
ExecutionModeXfb	lib/vulkan/spirv.hpp	/^    ExecutionModeXfb = 11,$/;"	e	enum:spv::ExecutionMode
ExecutionModel	lib/vulkan/spirv.hpp	/^enum ExecutionModel {$/;"	g	namespace:spv
ExecutionModelFragment	lib/vulkan/spirv.hpp	/^    ExecutionModelFragment = 4,$/;"	e	enum:spv::ExecutionModel
ExecutionModelGLCompute	lib/vulkan/spirv.hpp	/^    ExecutionModelGLCompute = 5,$/;"	e	enum:spv::ExecutionModel
ExecutionModelGeometry	lib/vulkan/spirv.hpp	/^    ExecutionModelGeometry = 3,$/;"	e	enum:spv::ExecutionModel
ExecutionModelKernel	lib/vulkan/spirv.hpp	/^    ExecutionModelKernel = 6,$/;"	e	enum:spv::ExecutionModel
ExecutionModelMax	lib/vulkan/spirv.hpp	/^    ExecutionModelMax = 0x7fffffff,$/;"	e	enum:spv::ExecutionModel
ExecutionModelTessellationControl	lib/vulkan/spirv.hpp	/^    ExecutionModelTessellationControl = 1,$/;"	e	enum:spv::ExecutionModel
ExecutionModelTessellationEvaluation	lib/vulkan/spirv.hpp	/^    ExecutionModelTessellationEvaluation = 2,$/;"	e	enum:spv::ExecutionModel
ExecutionModelVertex	lib/vulkan/spirv.hpp	/^    ExecutionModelVertex = 0,$/;"	e	enum:spv::ExecutionModel
FAST_BITS	lib/stb/stb_image.h	1456;"	d
FIRST_CONCRETE	lib/vulkan/libspirv.h	/^  FIRST_CONCRETE(SPV_OPERAND_TYPE_ID),$/;"	e	enum:spv_operand_type_t
FIRST_CONCRETE	lib/vulkan/libspirv.h	161;"	d
FIRST_CONCRETE	lib/vulkan/libspirv.h	94;"	d
FIRST_CONCRETE_MASK	lib/vulkan/libspirv.h	/^  FIRST_CONCRETE_MASK(SPV_OPERAND_TYPE_IMAGE),    \/\/ SPIR-V Sec 3.14$/;"	e	enum:spv_operand_type_t
FIRST_CONCRETE_MASK	lib/vulkan/libspirv.h	150;"	d
FIRST_CONCRETE_MASK	lib/vulkan/libspirv.h	160;"	d
FIRST_OPTIONAL	lib/vulkan/libspirv.h	/^  FIRST_OPTIONAL(SPV_OPERAND_TYPE_OPTIONAL_ID),$/;"	e	enum:spv_operand_type_t
FIRST_OPTIONAL	lib/vulkan/libspirv.h	172;"	d
FIRST_VARIABLE	lib/vulkan/libspirv.h	/^  FIRST_VARIABLE(SPV_OPERAND_TYPE_VARIABLE_ID),$/;"	e	enum:spv_operand_type_t
FIRST_VARIABLE	lib/vulkan/libspirv.h	173;"	d
FPFastMathModeAllowRecipMask	lib/vulkan/spirv.hpp	/^    FPFastMathModeAllowRecipMask = 0x00000008,$/;"	e	enum:spv::FPFastMathModeMask
FPFastMathModeAllowRecipShift	lib/vulkan/spirv.hpp	/^    FPFastMathModeAllowRecipShift = 3,$/;"	e	enum:spv::FPFastMathModeShift
FPFastMathModeFastMask	lib/vulkan/spirv.hpp	/^    FPFastMathModeFastMask = 0x00000010,$/;"	e	enum:spv::FPFastMathModeMask
FPFastMathModeFastShift	lib/vulkan/spirv.hpp	/^    FPFastMathModeFastShift = 4,$/;"	e	enum:spv::FPFastMathModeShift
FPFastMathModeMask	lib/vulkan/spirv.hpp	/^enum FPFastMathModeMask {$/;"	g	namespace:spv
FPFastMathModeMaskNone	lib/vulkan/spirv.hpp	/^    FPFastMathModeMaskNone = 0,$/;"	e	enum:spv::FPFastMathModeMask
FPFastMathModeMax	lib/vulkan/spirv.hpp	/^    FPFastMathModeMax = 0x7fffffff,$/;"	e	enum:spv::FPFastMathModeShift
FPFastMathModeNSZMask	lib/vulkan/spirv.hpp	/^    FPFastMathModeNSZMask = 0x00000004,$/;"	e	enum:spv::FPFastMathModeMask
FPFastMathModeNSZShift	lib/vulkan/spirv.hpp	/^    FPFastMathModeNSZShift = 2,$/;"	e	enum:spv::FPFastMathModeShift
FPFastMathModeNotInfMask	lib/vulkan/spirv.hpp	/^    FPFastMathModeNotInfMask = 0x00000002,$/;"	e	enum:spv::FPFastMathModeMask
FPFastMathModeNotInfShift	lib/vulkan/spirv.hpp	/^    FPFastMathModeNotInfShift = 1,$/;"	e	enum:spv::FPFastMathModeShift
FPFastMathModeNotNaNMask	lib/vulkan/spirv.hpp	/^    FPFastMathModeNotNaNMask = 0x00000001,$/;"	e	enum:spv::FPFastMathModeMask
FPFastMathModeNotNaNShift	lib/vulkan/spirv.hpp	/^    FPFastMathModeNotNaNShift = 0,$/;"	e	enum:spv::FPFastMathModeShift
FPFastMathModeShift	lib/vulkan/spirv.hpp	/^enum FPFastMathModeShift {$/;"	g	namespace:spv
FPRoundingMode	lib/vulkan/spirv.hpp	/^enum FPRoundingMode {$/;"	g	namespace:spv
FPRoundingModeMax	lib/vulkan/spirv.hpp	/^    FPRoundingModeMax = 0x7fffffff,$/;"	e	enum:spv::FPRoundingMode
FPRoundingModeRTE	lib/vulkan/spirv.hpp	/^    FPRoundingModeRTE = 0,$/;"	e	enum:spv::FPRoundingMode
FPRoundingModeRTN	lib/vulkan/spirv.hpp	/^    FPRoundingModeRTN = 3,$/;"	e	enum:spv::FPRoundingMode
FPRoundingModeRTP	lib/vulkan/spirv.hpp	/^    FPRoundingModeRTP = 2,$/;"	e	enum:spv::FPRoundingMode
FPRoundingModeRTZ	lib/vulkan/spirv.hpp	/^    FPRoundingModeRTZ = 1,$/;"	e	enum:spv::FPRoundingMode
FileManager	inc/file_manager.h	/^class FileManager {$/;"	c
FileManager	src/file_manager.cpp	/^FileManager::FileManager() $/;"	f	class:FileManager
FlagsForFile	.ycm_extra_conf.py	/^def FlagsForFile( filename, **kwargs ):$/;"	f
FlushMappedMemoryRanges	lib/vulkan/vk_layer.h	/^    PFN_vkFlushMappedMemoryRanges FlushMappedMemoryRanges;$/;"	m	struct:VkLayerDispatchTable_
FreeCommandBuffers	lib/vulkan/vk_layer.h	/^    PFN_vkFreeCommandBuffers FreeCommandBuffers;$/;"	m	struct:VkLayerDispatchTable_
FreeDescriptorSets	lib/vulkan/vk_layer.h	/^    PFN_vkFreeDescriptorSets FreeDescriptorSets;$/;"	m	struct:VkLayerDispatchTable_
FreeMemory	lib/vulkan/vk_layer.h	/^    PFN_vkFreeMemory FreeMemory;$/;"	m	struct:VkLayerDispatchTable_
FunctionControlConstMask	lib/vulkan/spirv.hpp	/^    FunctionControlConstMask = 0x00000008,$/;"	e	enum:spv::FunctionControlMask
FunctionControlConstShift	lib/vulkan/spirv.hpp	/^    FunctionControlConstShift = 3,$/;"	e	enum:spv::FunctionControlShift
FunctionControlDontInlineMask	lib/vulkan/spirv.hpp	/^    FunctionControlDontInlineMask = 0x00000002,$/;"	e	enum:spv::FunctionControlMask
FunctionControlDontInlineShift	lib/vulkan/spirv.hpp	/^    FunctionControlDontInlineShift = 1,$/;"	e	enum:spv::FunctionControlShift
FunctionControlInlineMask	lib/vulkan/spirv.hpp	/^    FunctionControlInlineMask = 0x00000001,$/;"	e	enum:spv::FunctionControlMask
FunctionControlInlineShift	lib/vulkan/spirv.hpp	/^    FunctionControlInlineShift = 0,$/;"	e	enum:spv::FunctionControlShift
FunctionControlMask	lib/vulkan/spirv.hpp	/^enum FunctionControlMask {$/;"	g	namespace:spv
FunctionControlMaskNone	lib/vulkan/spirv.hpp	/^    FunctionControlMaskNone = 0,$/;"	e	enum:spv::FunctionControlMask
FunctionControlMax	lib/vulkan/spirv.hpp	/^    FunctionControlMax = 0x7fffffff,$/;"	e	enum:spv::FunctionControlShift
FunctionControlPureMask	lib/vulkan/spirv.hpp	/^    FunctionControlPureMask = 0x00000004,$/;"	e	enum:spv::FunctionControlMask
FunctionControlPureShift	lib/vulkan/spirv.hpp	/^    FunctionControlPureShift = 2,$/;"	e	enum:spv::FunctionControlShift
FunctionControlShift	lib/vulkan/spirv.hpp	/^enum FunctionControlShift {$/;"	g	namespace:spv
FunctionParameterAttribute	lib/vulkan/spirv.hpp	/^enum FunctionParameterAttribute {$/;"	g	namespace:spv
FunctionParameterAttributeByVal	lib/vulkan/spirv.hpp	/^    FunctionParameterAttributeByVal = 2,$/;"	e	enum:spv::FunctionParameterAttribute
FunctionParameterAttributeMax	lib/vulkan/spirv.hpp	/^    FunctionParameterAttributeMax = 0x7fffffff,$/;"	e	enum:spv::FunctionParameterAttribute
FunctionParameterAttributeNoAlias	lib/vulkan/spirv.hpp	/^    FunctionParameterAttributeNoAlias = 4,$/;"	e	enum:spv::FunctionParameterAttribute
FunctionParameterAttributeNoCapture	lib/vulkan/spirv.hpp	/^    FunctionParameterAttributeNoCapture = 5,$/;"	e	enum:spv::FunctionParameterAttribute
FunctionParameterAttributeNoReadWrite	lib/vulkan/spirv.hpp	/^    FunctionParameterAttributeNoReadWrite = 7,$/;"	e	enum:spv::FunctionParameterAttribute
FunctionParameterAttributeNoWrite	lib/vulkan/spirv.hpp	/^    FunctionParameterAttributeNoWrite = 6,$/;"	e	enum:spv::FunctionParameterAttribute
FunctionParameterAttributeSext	lib/vulkan/spirv.hpp	/^    FunctionParameterAttributeSext = 1,$/;"	e	enum:spv::FunctionParameterAttribute
FunctionParameterAttributeSret	lib/vulkan/spirv.hpp	/^    FunctionParameterAttributeSret = 3,$/;"	e	enum:spv::FunctionParameterAttribute
FunctionParameterAttributeZext	lib/vulkan/spirv.hpp	/^    FunctionParameterAttributeZext = 0,$/;"	e	enum:spv::FunctionParameterAttribute
GLFW_INCLUDE_VULKAN	inc/window.h	4;"	d
GLM_ALIGN	lib/glm/detail/setup.hpp	576;"	d
GLM_ALIGN	lib/glm/detail/setup.hpp	588;"	d
GLM_ALIGN	lib/glm/detail/setup.hpp	604;"	d
GLM_ALIGN	lib/glm/detail/setup.hpp	612;"	d
GLM_ALIGNED_STRUCT	lib/glm/detail/setup.hpp	577;"	d
GLM_ALIGNED_STRUCT	lib/glm/detail/setup.hpp	589;"	d
GLM_ALIGNED_STRUCT	lib/glm/detail/setup.hpp	605;"	d
GLM_ALIGNED_STRUCT	lib/glm/detail/setup.hpp	613;"	d
GLM_ALIGNED_TYPEDEF	lib/glm/detail/setup.hpp	578;"	d
GLM_ALIGNED_TYPEDEF	lib/glm/detail/setup.hpp	590;"	d
GLM_ALIGNED_TYPEDEF	lib/glm/detail/setup.hpp	606;"	d
GLM_ALIGNED_TYPEDEF	lib/glm/detail/setup.hpp	614;"	d
GLM_ARCH	lib/glm/simd/platform.h	323;"	d
GLM_ARCH	lib/glm/simd/platform.h	325;"	d
GLM_ARCH	lib/glm/simd/platform.h	327;"	d
GLM_ARCH	lib/glm/simd/platform.h	329;"	d
GLM_ARCH	lib/glm/simd/platform.h	331;"	d
GLM_ARCH	lib/glm/simd/platform.h	333;"	d
GLM_ARCH	lib/glm/simd/platform.h	335;"	d
GLM_ARCH	lib/glm/simd/platform.h	337;"	d
GLM_ARCH	lib/glm/simd/platform.h	339;"	d
GLM_ARCH	lib/glm/simd/platform.h	341;"	d
GLM_ARCH	lib/glm/simd/platform.h	343;"	d
GLM_ARCH	lib/glm/simd/platform.h	345;"	d
GLM_ARCH	lib/glm/simd/platform.h	349;"	d
GLM_ARCH	lib/glm/simd/platform.h	351;"	d
GLM_ARCH	lib/glm/simd/platform.h	353;"	d
GLM_ARCH	lib/glm/simd/platform.h	355;"	d
GLM_ARCH	lib/glm/simd/platform.h	357;"	d
GLM_ARCH	lib/glm/simd/platform.h	359;"	d
GLM_ARCH	lib/glm/simd/platform.h	361;"	d
GLM_ARCH	lib/glm/simd/platform.h	363;"	d
GLM_ARCH	lib/glm/simd/platform.h	365;"	d
GLM_ARCH	lib/glm/simd/platform.h	367;"	d
GLM_ARCH	lib/glm/simd/platform.h	369;"	d
GLM_ARCH	lib/glm/simd/platform.h	371;"	d
GLM_ARCH	lib/glm/simd/platform.h	373;"	d
GLM_ARCH	lib/glm/simd/platform.h	375;"	d
GLM_ARCH	lib/glm/simd/platform.h	379;"	d
GLM_ARCH	lib/glm/simd/platform.h	381;"	d
GLM_ARCH	lib/glm/simd/platform.h	383;"	d
GLM_ARCH	lib/glm/simd/platform.h	385;"	d
GLM_ARCH	lib/glm/simd/platform.h	388;"	d
GLM_ARCH	lib/glm/simd/platform.h	390;"	d
GLM_ARCH	lib/glm/simd/platform.h	393;"	d
GLM_ARCH	lib/glm/simd/platform.h	395;"	d
GLM_ARCH	lib/glm/simd/platform.h	398;"	d
GLM_ARCH_ARM	lib/glm/simd/platform.h	317;"	d
GLM_ARCH_ARM_BIT	lib/glm/simd/platform.h	302;"	d
GLM_ARCH_AVX	lib/glm/simd/platform.h	314;"	d
GLM_ARCH_AVX2	lib/glm/simd/platform.h	315;"	d
GLM_ARCH_AVX2_BIT	lib/glm/simd/platform.h	300;"	d
GLM_ARCH_AVX512	lib/glm/simd/platform.h	316;"	d
GLM_ARCH_AVX512_BIT	lib/glm/simd/platform.h	301;"	d
GLM_ARCH_AVX_BIT	lib/glm/simd/platform.h	299;"	d
GLM_ARCH_MIPS	lib/glm/simd/platform.h	319;"	d
GLM_ARCH_MIPS_BIT	lib/glm/simd/platform.h	304;"	d
GLM_ARCH_NEON	lib/glm/simd/platform.h	318;"	d
GLM_ARCH_NEON_BIT	lib/glm/simd/platform.h	303;"	d
GLM_ARCH_PPC	lib/glm/simd/platform.h	320;"	d
GLM_ARCH_PPC_BIT	lib/glm/simd/platform.h	305;"	d
GLM_ARCH_PURE	lib/glm/simd/platform.h	307;"	d
GLM_ARCH_SSE2	lib/glm/simd/platform.h	309;"	d
GLM_ARCH_SSE2_BIT	lib/glm/simd/platform.h	294;"	d
GLM_ARCH_SSE3	lib/glm/simd/platform.h	310;"	d
GLM_ARCH_SSE3_BIT	lib/glm/simd/platform.h	295;"	d
GLM_ARCH_SSE41	lib/glm/simd/platform.h	312;"	d
GLM_ARCH_SSE41_BIT	lib/glm/simd/platform.h	297;"	d
GLM_ARCH_SSE42	lib/glm/simd/platform.h	313;"	d
GLM_ARCH_SSE42_BIT	lib/glm/simd/platform.h	298;"	d
GLM_ARCH_SSSE3	lib/glm/simd/platform.h	311;"	d
GLM_ARCH_SSSE3_BIT	lib/glm/simd/platform.h	296;"	d
GLM_ARCH_X86	lib/glm/simd/platform.h	308;"	d
GLM_ARCH_X86_BIT	lib/glm/simd/platform.h	293;"	d
GLM_COMPILER	lib/glm/simd/platform.h	144;"	d
GLM_COMPILER	lib/glm/simd/platform.h	148;"	d
GLM_COMPILER	lib/glm/simd/platform.h	150;"	d
GLM_COMPILER	lib/glm/simd/platform.h	152;"	d
GLM_COMPILER	lib/glm/simd/platform.h	154;"	d
GLM_COMPILER	lib/glm/simd/platform.h	156;"	d
GLM_COMPILER	lib/glm/simd/platform.h	158;"	d
GLM_COMPILER	lib/glm/simd/platform.h	160;"	d
GLM_COMPILER	lib/glm/simd/platform.h	171;"	d
GLM_COMPILER	lib/glm/simd/platform.h	178;"	d
GLM_COMPILER	lib/glm/simd/platform.h	180;"	d
GLM_COMPILER	lib/glm/simd/platform.h	182;"	d
GLM_COMPILER	lib/glm/simd/platform.h	184;"	d
GLM_COMPILER	lib/glm/simd/platform.h	186;"	d
GLM_COMPILER	lib/glm/simd/platform.h	188;"	d
GLM_COMPILER	lib/glm/simd/platform.h	192;"	d
GLM_COMPILER	lib/glm/simd/platform.h	194;"	d
GLM_COMPILER	lib/glm/simd/platform.h	196;"	d
GLM_COMPILER	lib/glm/simd/platform.h	198;"	d
GLM_COMPILER	lib/glm/simd/platform.h	200;"	d
GLM_COMPILER	lib/glm/simd/platform.h	202;"	d
GLM_COMPILER	lib/glm/simd/platform.h	204;"	d
GLM_COMPILER	lib/glm/simd/platform.h	206;"	d
GLM_COMPILER	lib/glm/simd/platform.h	208;"	d
GLM_COMPILER	lib/glm/simd/platform.h	210;"	d
GLM_COMPILER	lib/glm/simd/platform.h	212;"	d
GLM_COMPILER	lib/glm/simd/platform.h	214;"	d
GLM_COMPILER	lib/glm/simd/platform.h	223;"	d
GLM_COMPILER	lib/glm/simd/platform.h	225;"	d
GLM_COMPILER	lib/glm/simd/platform.h	227;"	d
GLM_COMPILER	lib/glm/simd/platform.h	229;"	d
GLM_COMPILER	lib/glm/simd/platform.h	231;"	d
GLM_COMPILER	lib/glm/simd/platform.h	237;"	d
GLM_COMPILER	lib/glm/simd/platform.h	239;"	d
GLM_COMPILER	lib/glm/simd/platform.h	241;"	d
GLM_COMPILER	lib/glm/simd/platform.h	243;"	d
GLM_COMPILER	lib/glm/simd/platform.h	245;"	d
GLM_COMPILER	lib/glm/simd/platform.h	247;"	d
GLM_COMPILER	lib/glm/simd/platform.h	249;"	d
GLM_COMPILER	lib/glm/simd/platform.h	251;"	d
GLM_COMPILER	lib/glm/simd/platform.h	253;"	d
GLM_COMPILER	lib/glm/simd/platform.h	255;"	d
GLM_COMPILER	lib/glm/simd/platform.h	257;"	d
GLM_COMPILER	lib/glm/simd/platform.h	259;"	d
GLM_COMPILER	lib/glm/simd/platform.h	261;"	d
GLM_COMPILER	lib/glm/simd/platform.h	263;"	d
GLM_COMPILER	lib/glm/simd/platform.h	265;"	d
GLM_COMPILER	lib/glm/simd/platform.h	267;"	d
GLM_COMPILER	lib/glm/simd/platform.h	269;"	d
GLM_COMPILER	lib/glm/simd/platform.h	271;"	d
GLM_COMPILER	lib/glm/simd/platform.h	273;"	d
GLM_COMPILER	lib/glm/simd/platform.h	275;"	d
GLM_COMPILER	lib/glm/simd/platform.h	277;"	d
GLM_COMPILER	lib/glm/simd/platform.h	281;"	d
GLM_COMPILER_CLANG	lib/glm/simd/platform.h	128;"	d
GLM_COMPILER_CLANG32	lib/glm/simd/platform.h	129;"	d
GLM_COMPILER_CLANG33	lib/glm/simd/platform.h	130;"	d
GLM_COMPILER_CLANG34	lib/glm/simd/platform.h	131;"	d
GLM_COMPILER_CLANG35	lib/glm/simd/platform.h	132;"	d
GLM_COMPILER_CLANG36	lib/glm/simd/platform.h	133;"	d
GLM_COMPILER_CLANG37	lib/glm/simd/platform.h	134;"	d
GLM_COMPILER_CLANG38	lib/glm/simd/platform.h	135;"	d
GLM_COMPILER_CLANG39	lib/glm/simd/platform.h	136;"	d
GLM_COMPILER_CUDA	lib/glm/simd/platform.h	116;"	d
GLM_COMPILER_CUDA40	lib/glm/simd/platform.h	117;"	d
GLM_COMPILER_CUDA41	lib/glm/simd/platform.h	118;"	d
GLM_COMPILER_CUDA42	lib/glm/simd/platform.h	119;"	d
GLM_COMPILER_CUDA50	lib/glm/simd/platform.h	120;"	d
GLM_COMPILER_CUDA60	lib/glm/simd/platform.h	121;"	d
GLM_COMPILER_CUDA65	lib/glm/simd/platform.h	122;"	d
GLM_COMPILER_CUDA70	lib/glm/simd/platform.h	123;"	d
GLM_COMPILER_CUDA75	lib/glm/simd/platform.h	124;"	d
GLM_COMPILER_CUDA80	lib/glm/simd/platform.h	125;"	d
GLM_COMPILER_GCC	lib/glm/simd/platform.h	95;"	d
GLM_COMPILER_GCC44	lib/glm/simd/platform.h	96;"	d
GLM_COMPILER_GCC45	lib/glm/simd/platform.h	97;"	d
GLM_COMPILER_GCC46	lib/glm/simd/platform.h	98;"	d
GLM_COMPILER_GCC47	lib/glm/simd/platform.h	99;"	d
GLM_COMPILER_GCC48	lib/glm/simd/platform.h	100;"	d
GLM_COMPILER_GCC49	lib/glm/simd/platform.h	101;"	d
GLM_COMPILER_GCC50	lib/glm/simd/platform.h	102;"	d
GLM_COMPILER_GCC51	lib/glm/simd/platform.h	103;"	d
GLM_COMPILER_GCC52	lib/glm/simd/platform.h	104;"	d
GLM_COMPILER_GCC53	lib/glm/simd/platform.h	105;"	d
GLM_COMPILER_GCC54	lib/glm/simd/platform.h	106;"	d
GLM_COMPILER_GCC60	lib/glm/simd/platform.h	107;"	d
GLM_COMPILER_GCC61	lib/glm/simd/platform.h	108;"	d
GLM_COMPILER_GCC62	lib/glm/simd/platform.h	109;"	d
GLM_COMPILER_GCC70	lib/glm/simd/platform.h	110;"	d
GLM_COMPILER_GCC71	lib/glm/simd/platform.h	111;"	d
GLM_COMPILER_GCC72	lib/glm/simd/platform.h	112;"	d
GLM_COMPILER_GCC80	lib/glm/simd/platform.h	113;"	d
GLM_COMPILER_INTEL	lib/glm/simd/platform.h	79;"	d
GLM_COMPILER_INTEL12	lib/glm/simd/platform.h	80;"	d
GLM_COMPILER_INTEL12_1	lib/glm/simd/platform.h	81;"	d
GLM_COMPILER_INTEL13	lib/glm/simd/platform.h	82;"	d
GLM_COMPILER_INTEL14	lib/glm/simd/platform.h	83;"	d
GLM_COMPILER_INTEL15	lib/glm/simd/platform.h	84;"	d
GLM_COMPILER_INTEL16	lib/glm/simd/platform.h	85;"	d
GLM_COMPILER_UNKNOWN	lib/glm/simd/platform.h	76;"	d
GLM_COMPILER_VC	lib/glm/simd/platform.h	88;"	d
GLM_COMPILER_VC2010	lib/glm/simd/platform.h	89;"	d
GLM_COMPILER_VC2012	lib/glm/simd/platform.h	90;"	d
GLM_COMPILER_VC2013	lib/glm/simd/platform.h	91;"	d
GLM_COMPILER_VC2015	lib/glm/simd/platform.h	92;"	d
GLM_CONSTEXPR	lib/glm/detail/setup.hpp	633;"	d
GLM_CONSTEXPR	lib/glm/detail/setup.hpp	637;"	d
GLM_CONSTEXPR	lib/glm/detail/setup.hpp	641;"	d
GLM_CONSTEXPR_CTOR	lib/glm/detail/setup.hpp	634;"	d
GLM_CONSTEXPR_CTOR	lib/glm/detail/setup.hpp	638;"	d
GLM_CONSTEXPR_CTOR	lib/glm/detail/setup.hpp	642;"	d
GLM_CONSTEXPR_SIMD	lib/glm/detail/setup.hpp	647;"	d
GLM_CONSTEXPR_SIMD	lib/glm/detail/setup.hpp	649;"	d
GLM_COORDINATE_SYSTEM	lib/glm/detail/setup.hpp	566;"	d
GLM_COORDINATE_SYSTEM	lib/glm/detail/setup.hpp	568;"	d
GLM_COUNTOF	lib/glm/detail/setup.hpp	702;"	d
GLM_CUDA_FUNC_DECL	lib/glm/detail/setup.hpp	490;"	d
GLM_CUDA_FUNC_DECL	lib/glm/detail/setup.hpp	493;"	d
GLM_CUDA_FUNC_DEF	lib/glm/detail/setup.hpp	489;"	d
GLM_CUDA_FUNC_DEF	lib/glm/detail/setup.hpp	492;"	d
GLM_CXX11_ACCESS_CONTROL_SFINAE	lib/glm/detail/_features.hpp	268;"	d
GLM_CXX11_ALIAS_TEMPLATE	lib/glm/detail/_features.hpp	272;"	d
GLM_CXX11_ALIGNAS	lib/glm/detail/_features.hpp	276;"	d
GLM_CXX11_ATTRIBUTES	lib/glm/detail/_features.hpp	280;"	d
GLM_CXX11_AUTO_TYPE	lib/glm/detail/_features.hpp	372;"	d
GLM_CXX11_CONSTEXPR	lib/glm/detail/_features.hpp	284;"	d
GLM_CXX11_DECLTYPE	lib/glm/detail/_features.hpp	288;"	d
GLM_CXX11_DEFAULTED_FUNCTIONS	lib/glm/detail/_features.hpp	296;"	d
GLM_CXX11_DEFAULT_FUNCTION_TEMPLATE_ARGS	lib/glm/detail/_features.hpp	292;"	d
GLM_CXX11_DELEGATING_CONSTRUCTORS	lib/glm/detail/_features.hpp	300;"	d
GLM_CXX11_DELETED_FUNCTIONS	lib/glm/detail/_features.hpp	304;"	d
GLM_CXX11_EXPLICIT_CONVERSIONS	lib/glm/detail/_features.hpp	308;"	d
GLM_CXX11_GENERALIZED_INITIALIZERS	lib/glm/detail/_features.hpp	312;"	d
GLM_CXX11_IMPLICIT_MOVES	lib/glm/detail/_features.hpp	316;"	d
GLM_CXX11_INHERITING_CONSTRUCTORS	lib/glm/detail/_features.hpp	320;"	d
GLM_CXX11_INLINE_NAMESPACES	lib/glm/detail/_features.hpp	324;"	d
GLM_CXX11_LAMBDAS	lib/glm/detail/_features.hpp	328;"	d
GLM_CXX11_LOCAL_TYPE_TEMPLATE_ARGS	lib/glm/detail/_features.hpp	332;"	d
GLM_CXX11_NOEXCEPT	lib/glm/detail/_features.hpp	336;"	d
GLM_CXX11_NONSTATIC_MEMBER_INIT	lib/glm/detail/_features.hpp	340;"	d
GLM_CXX11_NULLPTR	lib/glm/detail/_features.hpp	344;"	d
GLM_CXX11_OVERRIDE_CONTROL	lib/glm/detail/_features.hpp	348;"	d
GLM_CXX11_RANGE_FOR	lib/glm/detail/_features.hpp	356;"	d
GLM_CXX11_RAW_STRING_LITERALS	lib/glm/detail/_features.hpp	360;"	d
GLM_CXX11_REFERENCE_QUALIFIED_FUNCTIONS	lib/glm/detail/_features.hpp	352;"	d
GLM_CXX11_RVALUE_REFERENCES	lib/glm/detail/_features.hpp	364;"	d
GLM_CXX11_STATIC_ASSERT	lib/glm/detail/_features.hpp	255;"	d
GLM_CXX11_STATIC_ASSERT	lib/glm/detail/_features.hpp	368;"	d
GLM_CXX11_STRONG_ENUMS	lib/glm/detail/_features.hpp	376;"	d
GLM_CXX11_TRAILING_RETURN	lib/glm/detail/_features.hpp	380;"	d
GLM_CXX11_UNICODE_LITERALS	lib/glm/detail/_features.hpp	384;"	d
GLM_CXX11_UNRESTRICTED_UNIONS	lib/glm/detail/_features.hpp	388;"	d
GLM_CXX11_USER_LITERALS	lib/glm/detail/_features.hpp	392;"	d
GLM_CXX11_VARIADIC_TEMPLATES	lib/glm/detail/_features.hpp	396;"	d
GLM_CXX98_EXCEPTIONS	lib/glm/detail/_features.hpp	260;"	d
GLM_CXX98_RTTI	lib/glm/detail/_features.hpp	264;"	d
GLM_DEFAULT	lib/glm/detail/setup.hpp	621;"	d
GLM_DEFAULT	lib/glm/detail/setup.hpp	628;"	d
GLM_DEFAULT	lib/glm/detail/type_mat2x2.hpp	/^		GLM_FUNC_DECL tmat2x2(tmat2x2<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat2x2
GLM_DEFAULT	lib/glm/detail/type_mat2x2.hpp	/^		GLM_FUNC_DECL tmat2x2<T, P> & operator=(tmat2x2<T, P> const & v) GLM_DEFAULT;$/;"	m	struct:glm::tmat2x2
GLM_DEFAULT	lib/glm/detail/type_mat2x3.hpp	/^		GLM_FUNC_DECL tmat2x3(tmat2x3<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat2x3
GLM_DEFAULT	lib/glm/detail/type_mat2x3.hpp	/^		GLM_FUNC_DECL tmat2x3<T, P> & operator=(tmat2x3<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat2x3
GLM_DEFAULT	lib/glm/detail/type_mat2x4.hpp	/^		GLM_FUNC_DECL tmat2x4(tmat2x4<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat2x4
GLM_DEFAULT	lib/glm/detail/type_mat2x4.hpp	/^		GLM_FUNC_DECL tmat2x4<T, P> & operator=(tmat2x4<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat2x4
GLM_DEFAULT	lib/glm/detail/type_mat3x2.hpp	/^		GLM_FUNC_DECL tmat3x2(tmat3x2<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat3x2
GLM_DEFAULT	lib/glm/detail/type_mat3x2.hpp	/^		GLM_FUNC_DECL tmat3x2<T, P> & operator=(tmat3x2<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat3x2
GLM_DEFAULT	lib/glm/detail/type_mat3x3.hpp	/^		GLM_FUNC_DECL tmat3x3(tmat3x3<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat3x3
GLM_DEFAULT	lib/glm/detail/type_mat3x3.hpp	/^		GLM_FUNC_DECL tmat3x3<T, P> & operator=(tmat3x3<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat3x3
GLM_DEFAULT	lib/glm/detail/type_mat3x4.hpp	/^		GLM_FUNC_DECL tmat3x4(tmat3x4<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat3x4
GLM_DEFAULT	lib/glm/detail/type_mat3x4.hpp	/^		GLM_FUNC_DECL tmat3x4<T, P> & operator=(tmat3x4<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat3x4
GLM_DEFAULT	lib/glm/detail/type_mat4x2.hpp	/^		GLM_FUNC_DECL tmat4x2(tmat4x2<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat4x2
GLM_DEFAULT	lib/glm/detail/type_mat4x2.hpp	/^		GLM_FUNC_DECL tmat4x2<T, P> & operator=(tmat4x2<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat4x2
GLM_DEFAULT	lib/glm/detail/type_mat4x3.hpp	/^		GLM_FUNC_DECL tmat4x3(tmat4x3<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat4x3
GLM_DEFAULT	lib/glm/detail/type_mat4x3.hpp	/^		GLM_FUNC_DECL tmat4x3<T, P> & operator=(tmat4x3<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat4x3
GLM_DEFAULT	lib/glm/detail/type_mat4x4.hpp	/^		GLM_FUNC_DECL tmat4x4(tmat4x4<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat4x4
GLM_DEFAULT	lib/glm/detail/type_mat4x4.hpp	/^		GLM_FUNC_DECL tmat4x4<T, P> & operator=(tmat4x4<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat4x4
GLM_DEFAULT	lib/glm/detail/type_vec1.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR tvec1(tvec1<T, P> const & v) GLM_DEFAULT;$/;"	m	struct:glm::tvec1
GLM_DEFAULT	lib/glm/detail/type_vec1.hpp	/^		GLM_FUNC_DECL tvec1<T, P> & operator=(tvec1<T, P> const & v) GLM_DEFAULT;$/;"	m	struct:glm::tvec1
GLM_DEFAULT	lib/glm/detail/type_vec2.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR tvec2(tvec2<T, P> const& v) GLM_DEFAULT;$/;"	m	struct:glm::tvec2
GLM_DEFAULT	lib/glm/detail/type_vec2.hpp	/^		GLM_FUNC_DECL tvec2<T, P>& operator=(tvec2<T, P> const & v) GLM_DEFAULT;$/;"	m	struct:glm::tvec2
GLM_DEFAULT	lib/glm/detail/type_vec3.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR tvec3(tvec3<T, P> const & v) GLM_DEFAULT;$/;"	m	struct:glm::tvec3
GLM_DEFAULT	lib/glm/detail/type_vec3.hpp	/^		GLM_FUNC_DECL tvec3<T, P> & operator=(tvec3<T, P> const & v) GLM_DEFAULT;$/;"	m	struct:glm::tvec3
GLM_DEFAULT	lib/glm/detail/type_vec4.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR tvec4(tvec4<T, P> const& v) GLM_DEFAULT;$/;"	m	struct:glm::tvec4
GLM_DEFAULT	lib/glm/detail/type_vec4.hpp	/^		GLM_FUNC_DECL tvec4<T, P> & operator=(tvec4<T, P> const & v) GLM_DEFAULT;$/;"	m	struct:glm::tvec4
GLM_DEFAULT	lib/glm/gtc/quaternion.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR tquat(tquat<T, P> const & q) GLM_DEFAULT;$/;"	m	struct:glm::tquat
GLM_DEFAULT	lib/glm/gtc/quaternion.hpp	/^		GLM_FUNC_DECL tquat<T, P> & operator=(tquat<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tquat
GLM_DEFAULT	lib/glm/gtx/dual_quaternion.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR tdualquat(tdualquat<T, P> const & d) GLM_DEFAULT;$/;"	m	struct:glm::tdualquat
GLM_DEFAULT	lib/glm/gtx/dual_quaternion.hpp	/^		GLM_FUNC_DECL tdualquat<T, P> & operator=(tdualquat<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tdualquat
GLM_DEFAULT_CTOR	lib/glm/detail/setup.hpp	623;"	d
GLM_DEFAULT_CTOR	lib/glm/detail/setup.hpp	625;"	d
GLM_DEFAULT_CTOR	lib/glm/detail/setup.hpp	629;"	d
GLM_DEFAULT_CTOR	lib/glm/detail/type_mat2x2.hpp	/^		GLM_FUNC_DECL tmat2x2() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tmat2x2
GLM_DEFAULT_CTOR	lib/glm/detail/type_mat2x3.hpp	/^		GLM_FUNC_DECL tmat2x3() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tmat2x3
GLM_DEFAULT_CTOR	lib/glm/detail/type_mat2x4.hpp	/^		GLM_FUNC_DECL tmat2x4() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tmat2x4
GLM_DEFAULT_CTOR	lib/glm/detail/type_mat3x2.hpp	/^		GLM_FUNC_DECL tmat3x2() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tmat3x2
GLM_DEFAULT_CTOR	lib/glm/detail/type_mat3x3.hpp	/^		GLM_FUNC_DECL tmat3x3() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tmat3x3
GLM_DEFAULT_CTOR	lib/glm/detail/type_mat3x4.hpp	/^		GLM_FUNC_DECL tmat3x4() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tmat3x4
GLM_DEFAULT_CTOR	lib/glm/detail/type_mat4x2.hpp	/^		GLM_FUNC_DECL tmat4x2() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tmat4x2
GLM_DEFAULT_CTOR	lib/glm/detail/type_mat4x3.hpp	/^		GLM_FUNC_DECL tmat4x3() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tmat4x3
GLM_DEFAULT_CTOR	lib/glm/detail/type_mat4x4.hpp	/^		GLM_FUNC_DECL tmat4x4() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tmat4x4
GLM_DEFAULT_CTOR	lib/glm/detail/type_vec1.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR tvec1() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tvec1
GLM_DEFAULT_CTOR	lib/glm/detail/type_vec2.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR tvec2() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tvec2
GLM_DEFAULT_CTOR	lib/glm/detail/type_vec3.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR tvec3() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tvec3
GLM_DEFAULT_CTOR	lib/glm/detail/type_vec4.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR tvec4() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tvec4
GLM_DEFAULT_CTOR	lib/glm/gtc/quaternion.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR tquat() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tquat
GLM_DEFAULT_CTOR	lib/glm/gtx/dual_quaternion.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR tdualquat() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tdualquat
GLM_DEPRECATED	lib/glm/detail/setup.hpp	575;"	d
GLM_DEPRECATED	lib/glm/detail/setup.hpp	587;"	d
GLM_DEPRECATED	lib/glm/detail/setup.hpp	603;"	d
GLM_DEPRECATED	lib/glm/detail/setup.hpp	611;"	d
GLM_DEPTH_CLIP_SPACE	lib/glm/detail/setup.hpp	549;"	d
GLM_DEPTH_CLIP_SPACE	lib/glm/detail/setup.hpp	551;"	d
GLM_DEPTH_NEGATIVE_ONE_TO_ONE	lib/glm/detail/setup.hpp	546;"	d
GLM_DEPTH_ZERO_TO_ONE	lib/glm/detail/setup.hpp	545;"	d
GLM_EXPLICIT	lib/glm/detail/setup.hpp	653;"	d
GLM_EXPLICIT	lib/glm/detail/setup.hpp	655;"	d
GLM_FORCE_CXX03	lib/glm/detail/setup.hpp	124;"	d
GLM_FORCE_CXX03	lib/glm/detail/setup.hpp	128;"	d
GLM_FORCE_CXX11	lib/glm/detail/setup.hpp	123;"	d
GLM_FORCE_CXX98	lib/glm/detail/setup.hpp	125;"	d
GLM_FORCE_CXX98	lib/glm/detail/setup.hpp	129;"	d
GLM_FORCE_CXX98	lib/glm/detail/setup.hpp	132;"	d
GLM_FORCE_PURE	lib/glm/detail/setup.hpp	228;"	d
GLM_FORCE_RADIANS	inc/vulkan_manager.h	4;"	d
GLM_FORCE_ZERO_TO_ONE	inc/vulkan_manager.h	5;"	d
GLM_FUNC_DECL	lib/glm/detail/setup.hpp	521;"	d
GLM_FUNC_QUALIFIER	lib/glm/detail/setup.hpp	522;"	d
GLM_HAS_ALIGNED_TYPE	lib/glm/detail/setup.hpp	660;"	d
GLM_HAS_ASSIGNABLE	lib/glm/detail/setup.hpp	405;"	d
GLM_HAS_ASSIGNABLE	lib/glm/detail/setup.hpp	407;"	d
GLM_HAS_BITSCAN_WINDOWS	lib/glm/detail/setup.hpp	424;"	d
GLM_HAS_BITSCAN_WINDOWS	lib/glm/detail/setup.hpp	426;"	d
GLM_HAS_CONSTEXPR	lib/glm/detail/setup.hpp	304;"	d
GLM_HAS_CONSTEXPR	lib/glm/detail/setup.hpp	307;"	d
GLM_HAS_CONSTEXPR	lib/glm/detail/setup.hpp	310;"	d
GLM_HAS_CONSTEXPR_PARTIAL	lib/glm/detail/setup.hpp	305;"	d
GLM_HAS_CONSTEXPR_PARTIAL	lib/glm/detail/setup.hpp	308;"	d
GLM_HAS_CONSTEXPR_PARTIAL	lib/glm/detail/setup.hpp	312;"	d
GLM_HAS_CXX11_STL	lib/glm/detail/setup.hpp	268;"	d
GLM_HAS_CXX11_STL	lib/glm/detail/setup.hpp	270;"	d
GLM_HAS_CXX11_STL	lib/glm/detail/setup.hpp	273;"	d
GLM_HAS_DEFAULTED_FUNCTIONS	lib/glm/detail/setup.hpp	341;"	d
GLM_HAS_DEFAULTED_FUNCTIONS	lib/glm/detail/setup.hpp	343;"	d
GLM_HAS_DEFAULTED_FUNCTIONS	lib/glm/detail/setup.hpp	345;"	d
GLM_HAS_EXPLICIT_CONVERSION_OPERATORS	lib/glm/detail/setup.hpp	366;"	d
GLM_HAS_EXPLICIT_CONVERSION_OPERATORS	lib/glm/detail/setup.hpp	368;"	d
GLM_HAS_EXPLICIT_CONVERSION_OPERATORS	lib/glm/detail/setup.hpp	370;"	d
GLM_HAS_EXTENDED_INTEGER_TYPE	lib/glm/detail/setup.hpp	293;"	d
GLM_HAS_EXTENDED_INTEGER_TYPE	lib/glm/detail/setup.hpp	295;"	d
GLM_HAS_INITIALIZER_LISTS	lib/glm/detail/setup.hpp	317;"	d
GLM_HAS_INITIALIZER_LISTS	lib/glm/detail/setup.hpp	319;"	d
GLM_HAS_INITIALIZER_LISTS	lib/glm/detail/setup.hpp	321;"	d
GLM_HAS_MAKE_SIGNED	lib/glm/detail/setup.hpp	416;"	d
GLM_HAS_MAKE_SIGNED	lib/glm/detail/setup.hpp	418;"	d
GLM_HAS_OPENMP	lib/glm/detail/setup.hpp	434;"	d
GLM_HAS_OPENMP	lib/glm/detail/setup.hpp	436;"	d
GLM_HAS_OPENMP	lib/glm/detail/setup.hpp	438;"	d
GLM_HAS_OPENMP	lib/glm/detail/setup.hpp	440;"	d
GLM_HAS_OPENMP	lib/glm/detail/setup.hpp	442;"	d
GLM_HAS_OPENMP	lib/glm/detail/setup.hpp	444;"	d
GLM_HAS_OPENMP	lib/glm/detail/setup.hpp	448;"	d
GLM_HAS_OPENMP	lib/glm/detail/setup.hpp	450;"	d
GLM_HAS_OPENMP	lib/glm/detail/setup.hpp	454;"	d
GLM_HAS_OPENMP	lib/glm/detail/setup.hpp	456;"	d
GLM_HAS_OPENMP	lib/glm/detail/setup.hpp	460;"	d
GLM_HAS_OPENMP	lib/glm/detail/setup.hpp	462;"	d
GLM_HAS_OPENMP	lib/glm/detail/setup.hpp	464;"	d
GLM_HAS_OPENMP	lib/glm/detail/setup.hpp	467;"	d
GLM_HAS_RANGE_FOR	lib/glm/detail/setup.hpp	392;"	d
GLM_HAS_RANGE_FOR	lib/glm/detail/setup.hpp	394;"	d
GLM_HAS_RANGE_FOR	lib/glm/detail/setup.hpp	396;"	d
GLM_HAS_RVALUE_REFERENCES	lib/glm/detail/setup.hpp	354;"	d
GLM_HAS_RVALUE_REFERENCES	lib/glm/detail/setup.hpp	356;"	d
GLM_HAS_RVALUE_REFERENCES	lib/glm/detail/setup.hpp	358;"	d
GLM_HAS_STATIC_ASSERT	lib/glm/detail/setup.hpp	281;"	d
GLM_HAS_STATIC_ASSERT	lib/glm/detail/setup.hpp	283;"	d
GLM_HAS_STATIC_ASSERT	lib/glm/detail/setup.hpp	285;"	d
GLM_HAS_TEMPLATE_ALIASES	lib/glm/detail/setup.hpp	379;"	d
GLM_HAS_TEMPLATE_ALIASES	lib/glm/detail/setup.hpp	381;"	d
GLM_HAS_TEMPLATE_ALIASES	lib/glm/detail/setup.hpp	383;"	d
GLM_HAS_TRIVIAL_QUERIES	lib/glm/detail/setup.hpp	412;"	d
GLM_HAS_UNRESTRICTED_UNIONS	lib/glm/detail/setup.hpp	329;"	d
GLM_HAS_UNRESTRICTED_UNIONS	lib/glm/detail/setup.hpp	331;"	d
GLM_HAS_UNRESTRICTED_UNIONS	lib/glm/detail/setup.hpp	333;"	d
GLM_IMPLEMENT_SCAL_MULT	lib/glm/gtx/scalar_multiplication.hpp	35;"	d
GLM_IMPLEMENT_SCAL_MULT	lib/glm/gtx/scalar_multiplication.hpp	68;"	d
GLM_INLINE	lib/glm/detail/setup.hpp	504;"	d
GLM_INLINE	lib/glm/detail/setup.hpp	507;"	d
GLM_INLINE	lib/glm/detail/setup.hpp	510;"	d
GLM_INLINE	lib/glm/detail/setup.hpp	513;"	d
GLM_INLINE	lib/glm/detail/setup.hpp	517;"	d
GLM_LANG	lib/glm/detail/setup.hpp	126;"	d
GLM_LANG	lib/glm/detail/setup.hpp	130;"	d
GLM_LANG	lib/glm/detail/setup.hpp	133;"	d
GLM_LANG	lib/glm/detail/setup.hpp	135;"	d
GLM_LANG	lib/glm/detail/setup.hpp	139;"	d
GLM_LANG	lib/glm/detail/setup.hpp	141;"	d
GLM_LANG	lib/glm/detail/setup.hpp	143;"	d
GLM_LANG	lib/glm/detail/setup.hpp	145;"	d
GLM_LANG	lib/glm/detail/setup.hpp	147;"	d
GLM_LANG	lib/glm/detail/setup.hpp	149;"	d
GLM_LANG	lib/glm/detail/setup.hpp	153;"	d
GLM_LANG	lib/glm/detail/setup.hpp	155;"	d
GLM_LANG	lib/glm/detail/setup.hpp	157;"	d
GLM_LANG	lib/glm/detail/setup.hpp	159;"	d
GLM_LANG	lib/glm/detail/setup.hpp	164;"	d
GLM_LANG	lib/glm/detail/setup.hpp	168;"	d
GLM_LANG	lib/glm/detail/setup.hpp	170;"	d
GLM_LANG	lib/glm/detail/setup.hpp	172;"	d
GLM_LANG	lib/glm/detail/setup.hpp	174;"	d
GLM_LANG	lib/glm/detail/setup.hpp	178;"	d
GLM_LANG	lib/glm/detail/setup.hpp	180;"	d
GLM_LANG	lib/glm/detail/setup.hpp	182;"	d
GLM_LANG	lib/glm/detail/setup.hpp	184;"	d
GLM_LANG	lib/glm/detail/setup.hpp	186;"	d
GLM_LANG	lib/glm/detail/setup.hpp	196;"	d
GLM_LANG	lib/glm/detail/setup.hpp	198;"	d
GLM_LANG	lib/glm/detail/setup.hpp	200;"	d
GLM_LANG	lib/glm/detail/setup.hpp	202;"	d
GLM_LANG	lib/glm/detail/setup.hpp	204;"	d
GLM_LANG	lib/glm/detail/setup.hpp	213;"	d
GLM_LANG	lib/glm/detail/setup.hpp	215;"	d
GLM_LANG	lib/glm/detail/setup.hpp	219;"	d
GLM_LANG	lib/glm/detail/setup.hpp	221;"	d
GLM_LANG	lib/glm/detail/setup.hpp	223;"	d
GLM_LANG	lib/glm/detail/setup.hpp	225;"	d
GLM_LANG_CXX03	lib/glm/detail/setup.hpp	113;"	d
GLM_LANG_CXX03_FLAG	lib/glm/detail/setup.hpp	103;"	d
GLM_LANG_CXX0X	lib/glm/detail/setup.hpp	114;"	d
GLM_LANG_CXX0X_FLAG	lib/glm/detail/setup.hpp	104;"	d
GLM_LANG_CXX11	lib/glm/detail/setup.hpp	115;"	d
GLM_LANG_CXX11_FLAG	lib/glm/detail/setup.hpp	105;"	d
GLM_LANG_CXX14	lib/glm/detail/setup.hpp	117;"	d
GLM_LANG_CXX14_FLAG	lib/glm/detail/setup.hpp	107;"	d
GLM_LANG_CXX1Y	lib/glm/detail/setup.hpp	116;"	d
GLM_LANG_CXX1Y_FLAG	lib/glm/detail/setup.hpp	106;"	d
GLM_LANG_CXX1Z	lib/glm/detail/setup.hpp	118;"	d
GLM_LANG_CXX1Z_FLAG	lib/glm/detail/setup.hpp	108;"	d
GLM_LANG_CXX98	lib/glm/detail/setup.hpp	112;"	d
GLM_LANG_CXX98_FLAG	lib/glm/detail/setup.hpp	102;"	d
GLM_LANG_CXXGNU	lib/glm/detail/setup.hpp	120;"	d
GLM_LANG_CXXGNU_FLAG	lib/glm/detail/setup.hpp	110;"	d
GLM_LANG_CXXMS	lib/glm/detail/setup.hpp	119;"	d
GLM_LANG_CXXMS_FLAG	lib/glm/detail/setup.hpp	109;"	d
GLM_LEFT_HANDED	lib/glm/detail/setup.hpp	562;"	d
GLM_MESSAGE_ARCH_DISPLAYED	lib/glm/detail/setup.hpp	67;"	d
GLM_MESSAGE_COMPILER_DISPLAYED	lib/glm/detail/setup.hpp	26;"	d
GLM_MESSAGE_CORE_INCLUDED_DISPLAYED	lib/glm/glm.hpp	64;"	d
GLM_MESSAGE_EXT_INCLUDED_DISPLAYED	lib/glm/ext.hpp	31;"	d
GLM_MESSAGE_FORCE_SIZE_T_LENGTH	lib/glm/detail/setup.hpp	678;"	d
GLM_MESSAGE_LANG_DISPLAYED	lib/glm/detail/setup.hpp	234;"	d
GLM_MESSAGE_MODEL_DISPLAYED	lib/glm/detail/setup.hpp	58;"	d
GLM_MESSAGE_PLATFORM_DISPLAYED	lib/glm/simd/platform.h	47;"	d
GLM_MESSAGE_SWIZZLE_DISPLAYED	lib/glm/detail/setup.hpp	530;"	d
GLM_MESSAGE_VERSION_DISPLAYED	lib/glm/detail/setup.hpp	20;"	d
GLM_MODEL	lib/glm/detail/setup.hpp	46;"	d
GLM_MODEL	lib/glm/detail/setup.hpp	48;"	d
GLM_MODEL	lib/glm/detail/setup.hpp	50;"	d
GLM_MODEL_32	lib/glm/simd/platform.h	139;"	d
GLM_MODEL_64	lib/glm/simd/platform.h	140;"	d
GLM_MSC_EXT	lib/glm/detail/setup.hpp	191;"	d
GLM_MSC_EXT	lib/glm/detail/setup.hpp	193;"	d
GLM_MSC_EXT	lib/glm/detail/setup.hpp	208;"	d
GLM_MSC_EXT	lib/glm/detail/setup.hpp	210;"	d
GLM_MUTABLE	lib/glm/detail/_swizzle_func.hpp	45;"	d
GLM_NEVER_INLINE	lib/glm/detail/setup.hpp	505;"	d
GLM_NEVER_INLINE	lib/glm/detail/setup.hpp	508;"	d
GLM_NEVER_INLINE	lib/glm/detail/setup.hpp	511;"	d
GLM_NEVER_INLINE	lib/glm/detail/setup.hpp	514;"	d
GLM_NEVER_INLINE	lib/glm/detail/setup.hpp	518;"	d
GLM_PLATFORM	lib/glm/simd/platform.h	22;"	d
GLM_PLATFORM	lib/glm/simd/platform.h	24;"	d
GLM_PLATFORM	lib/glm/simd/platform.h	26;"	d
GLM_PLATFORM	lib/glm/simd/platform.h	28;"	d
GLM_PLATFORM	lib/glm/simd/platform.h	30;"	d
GLM_PLATFORM	lib/glm/simd/platform.h	32;"	d
GLM_PLATFORM	lib/glm/simd/platform.h	34;"	d
GLM_PLATFORM	lib/glm/simd/platform.h	36;"	d
GLM_PLATFORM	lib/glm/simd/platform.h	38;"	d
GLM_PLATFORM	lib/glm/simd/platform.h	40;"	d
GLM_PLATFORM	lib/glm/simd/platform.h	42;"	d
GLM_PLATFORM_ANDROID	lib/glm/simd/platform.h	14;"	d
GLM_PLATFORM_APPLE	lib/glm/simd/platform.h	12;"	d
GLM_PLATFORM_CHROME_NACL	lib/glm/simd/platform.h	15;"	d
GLM_PLATFORM_CYGWIN	lib/glm/simd/platform.h	19;"	d
GLM_PLATFORM_LINUX	lib/glm/simd/platform.h	11;"	d
GLM_PLATFORM_QNXNTO	lib/glm/simd/platform.h	17;"	d
GLM_PLATFORM_UNIX	lib/glm/simd/platform.h	16;"	d
GLM_PLATFORM_UNKNOWN	lib/glm/simd/platform.h	9;"	d
GLM_PLATFORM_WINCE	lib/glm/simd/platform.h	18;"	d
GLM_PLATFORM_WINDOWS	lib/glm/simd/platform.h	10;"	d
GLM_RELAXED_CONSTEXPR	lib/glm/detail/setup.hpp	635;"	d
GLM_RELAXED_CONSTEXPR	lib/glm/detail/setup.hpp	639;"	d
GLM_RELAXED_CONSTEXPR	lib/glm/detail/setup.hpp	643;"	d
GLM_RESTRICT	lib/glm/detail/setup.hpp	580;"	d
GLM_RESTRICT	lib/glm/detail/setup.hpp	592;"	d
GLM_RESTRICT	lib/glm/detail/setup.hpp	608;"	d
GLM_RESTRICT	lib/glm/detail/setup.hpp	616;"	d
GLM_RESTRICT_FUNC	lib/glm/detail/setup.hpp	579;"	d
GLM_RESTRICT_FUNC	lib/glm/detail/setup.hpp	591;"	d
GLM_RESTRICT_FUNC	lib/glm/detail/setup.hpp	607;"	d
GLM_RESTRICT_FUNC	lib/glm/detail/setup.hpp	615;"	d
GLM_RIGHT_HANDED	lib/glm/detail/setup.hpp	563;"	d
GLM_STATIC_ASSERT	lib/glm/detail/setup.hpp	475;"	d
GLM_STATIC_ASSERT	lib/glm/detail/setup.hpp	477;"	d
GLM_STATIC_ASSERT	lib/glm/detail/setup.hpp	479;"	d
GLM_STATIC_ASSERT	lib/glm/detail/setup.hpp	481;"	d
GLM_STATIC_ASSERT_NULL	lib/glm/detail/setup.hpp	482;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC2_SWIZZLE	lib/glm/detail/_swizzle_func.hpp	47;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC3_SWIZZLE	lib/glm/detail/_swizzle_func.hpp	58;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC4_SWIZZLE	lib/glm/detail/_swizzle_func.hpp	85;"	d
GLM_SWIZZLE_GEN_REF3_FROM_VEC3_SWIZZLE	lib/glm/detail/_swizzle_func.hpp	66;"	d
GLM_SWIZZLE_GEN_REF3_FROM_VEC4_SWIZZLE	lib/glm/detail/_swizzle_func.hpp	99;"	d
GLM_SWIZZLE_GEN_REF4_FROM_VEC4_SWIZZLE	lib/glm/detail/_swizzle_func.hpp	125;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC2	lib/glm/detail/_swizzle_func.hpp	51;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC3	lib/glm/detail/_swizzle_func.hpp	78;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC3_COMP	lib/glm/detail/_swizzle_func.hpp	74;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC4	lib/glm/detail/_swizzle_func.hpp	156;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC4_COMP	lib/glm/detail/_swizzle_func.hpp	151;"	d
GLM_SWIZZLE_GEN_VEC2_ENTRY	lib/glm/detail/_swizzle_func.hpp	6;"	d
GLM_SWIZZLE_GEN_VEC2_ENTRY_DEF	lib/glm/detail/_swizzle_func.hpp	24;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC2_SWIZZLE	lib/glm/detail/_swizzle_func.hpp	163;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC3_SWIZZLE	lib/glm/detail/_swizzle_func.hpp	209;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC4_SWIZZLE	lib/glm/detail/_swizzle_func.hpp	344;"	d
GLM_SWIZZLE_GEN_VEC3_ENTRY	lib/glm/detail/_swizzle_func.hpp	12;"	d
GLM_SWIZZLE_GEN_VEC3_ENTRY_DEF	lib/glm/detail/_swizzle_func.hpp	31;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC2_SWIZZLE	lib/glm/detail/_swizzle_func.hpp	169;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC3_SWIZZLE	lib/glm/detail/_swizzle_func.hpp	220;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC4_SWIZZLE	lib/glm/detail/_swizzle_func.hpp	362;"	d
GLM_SWIZZLE_GEN_VEC4_ENTRY	lib/glm/detail/_swizzle_func.hpp	18;"	d
GLM_SWIZZLE_GEN_VEC4_ENTRY_DEF	lib/glm/detail/_swizzle_func.hpp	38;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC2_SWIZZLE	lib/glm/detail/_swizzle_func.hpp	179;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC3_SWIZZLE	lib/glm/detail/_swizzle_func.hpp	249;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC4_SWIZZLE	lib/glm/detail/_swizzle_func.hpp	428;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC2	lib/glm/detail/_swizzle_func.hpp	202;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC2_COMP	lib/glm/detail/_swizzle_func.hpp	197;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC3	lib/glm/detail/_swizzle_func.hpp	337;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC3_COMP	lib/glm/detail/_swizzle_func.hpp	332;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC4	lib/glm/detail/_swizzle_func.hpp	691;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC4_COMP	lib/glm/detail/_swizzle_func.hpp	686;"	d
GLM_VAR_USED	lib/glm/detail/setup.hpp	497;"	d
GLM_VAR_USED	lib/glm/detail/setup.hpp	499;"	d
GLM_VECTOR_CALL	lib/glm/detail/setup.hpp	582;"	d
GLM_VECTOR_CALL	lib/glm/detail/setup.hpp	584;"	d
GLM_VECTOR_CALL	lib/glm/detail/setup.hpp	595;"	d
GLM_VECTOR_CALL	lib/glm/detail/setup.hpp	597;"	d
GLM_VECTOR_CALL	lib/glm/detail/setup.hpp	600;"	d
GLM_VECTOR_CALL	lib/glm/detail/setup.hpp	609;"	d
GLM_VECTOR_CALL	lib/glm/detail/setup.hpp	617;"	d
GLM_VERSION	lib/glm/detail/setup.hpp	13;"	d
GLM_VERSION_MAJOR	lib/glm/detail/setup.hpp	14;"	d
GLM_VERSION_MINOR	lib/glm/detail/setup.hpp	15;"	d
GLM_VERSION_PATCH	lib/glm/detail/setup.hpp	16;"	d
GLM_VERSION_REVISION	lib/glm/detail/setup.hpp	17;"	d
GLSLstd450	lib/vulkan/GLSL.std.450.h	/^enum GLSLstd450 {$/;"	g
GLSLstd450Acos	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Acos = 17,$/;"	e	enum:GLSLstd450
GLSLstd450Acosh	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Acosh = 23,$/;"	e	enum:GLSLstd450
GLSLstd450Asin	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Asin = 16,$/;"	e	enum:GLSLstd450
GLSLstd450Asinh	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Asinh = 22,$/;"	e	enum:GLSLstd450
GLSLstd450Atan	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Atan = 18,$/;"	e	enum:GLSLstd450
GLSLstd450Atan2	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Atan2 = 25,$/;"	e	enum:GLSLstd450
GLSLstd450Atanh	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Atanh = 24,$/;"	e	enum:GLSLstd450
GLSLstd450Bad	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Bad = 0,              \/\/ Don't use$/;"	e	enum:GLSLstd450
GLSLstd450Ceil	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Ceil = 9,$/;"	e	enum:GLSLstd450
GLSLstd450Cos	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Cos = 14,$/;"	e	enum:GLSLstd450
GLSLstd450Cosh	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Cosh = 20,$/;"	e	enum:GLSLstd450
GLSLstd450Count	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Count$/;"	e	enum:GLSLstd450
GLSLstd450Cross	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Cross = 68,$/;"	e	enum:GLSLstd450
GLSLstd450Degrees	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Degrees = 12,$/;"	e	enum:GLSLstd450
GLSLstd450Determinant	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Determinant = 33,$/;"	e	enum:GLSLstd450
GLSLstd450Distance	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Distance = 67,$/;"	e	enum:GLSLstd450
GLSLstd450Exp	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Exp = 27,$/;"	e	enum:GLSLstd450
GLSLstd450Exp2	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Exp2 = 29,$/;"	e	enum:GLSLstd450
GLSLstd450FAbs	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450FAbs = 4,$/;"	e	enum:GLSLstd450
GLSLstd450FClamp	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450FClamp = 43,$/;"	e	enum:GLSLstd450
GLSLstd450FMax	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450FMax = 40,$/;"	e	enum:GLSLstd450
GLSLstd450FMin	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450FMin = 37,$/;"	e	enum:GLSLstd450
GLSLstd450FMix	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450FMix = 46,$/;"	e	enum:GLSLstd450
GLSLstd450FSign	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450FSign = 6,$/;"	e	enum:GLSLstd450
GLSLstd450FaceForward	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450FaceForward = 70,$/;"	e	enum:GLSLstd450
GLSLstd450FindILsb	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450FindILsb = 73,$/;"	e	enum:GLSLstd450
GLSLstd450FindSMsb	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450FindSMsb = 74,$/;"	e	enum:GLSLstd450
GLSLstd450FindUMsb	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450FindUMsb = 75,$/;"	e	enum:GLSLstd450
GLSLstd450Floor	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Floor = 8,$/;"	e	enum:GLSLstd450
GLSLstd450Fma	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Fma = 50,$/;"	e	enum:GLSLstd450
GLSLstd450Fract	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Fract = 10,$/;"	e	enum:GLSLstd450
GLSLstd450Frexp	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Frexp = 51,            \/\/ second operand needs an OpVariable to write to$/;"	e	enum:GLSLstd450
GLSLstd450FrexpStruct	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450FrexpStruct = 52,      \/\/ no OpVariable operand$/;"	e	enum:GLSLstd450
GLSLstd450IMix	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450IMix = 47,            \/\/ Reserved$/;"	e	enum:GLSLstd450
GLSLstd450InterpolateAtCentroid	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450InterpolateAtCentroid = 76,$/;"	e	enum:GLSLstd450
GLSLstd450InterpolateAtOffset	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450InterpolateAtOffset = 78,$/;"	e	enum:GLSLstd450
GLSLstd450InterpolateAtSample	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450InterpolateAtSample = 77,$/;"	e	enum:GLSLstd450
GLSLstd450InverseSqrt	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450InverseSqrt = 32,$/;"	e	enum:GLSLstd450
GLSLstd450Ldexp	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Ldexp = 53,$/;"	e	enum:GLSLstd450
GLSLstd450Length	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Length = 66,$/;"	e	enum:GLSLstd450
GLSLstd450Log	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Log = 28,$/;"	e	enum:GLSLstd450
GLSLstd450Log2	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Log2 = 30,$/;"	e	enum:GLSLstd450
GLSLstd450MatrixInverse	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450MatrixInverse = 34,$/;"	e	enum:GLSLstd450
GLSLstd450Modf	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Modf = 35,            \/\/ second operand needs an OpVariable to write to$/;"	e	enum:GLSLstd450
GLSLstd450ModfStruct	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450ModfStruct = 36,      \/\/ no OpVariable operand$/;"	e	enum:GLSLstd450
GLSLstd450NClamp	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450NClamp = 81,$/;"	e	enum:GLSLstd450
GLSLstd450NMax	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450NMax = 80,$/;"	e	enum:GLSLstd450
GLSLstd450NMin	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450NMin = 79,$/;"	e	enum:GLSLstd450
GLSLstd450Normalize	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Normalize = 69,$/;"	e	enum:GLSLstd450
GLSLstd450PackDouble2x32	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450PackDouble2x32 = 59,$/;"	e	enum:GLSLstd450
GLSLstd450PackHalf2x16	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450PackHalf2x16 = 58,$/;"	e	enum:GLSLstd450
GLSLstd450PackSnorm2x16	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450PackSnorm2x16 = 56,$/;"	e	enum:GLSLstd450
GLSLstd450PackSnorm4x8	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450PackSnorm4x8 = 54,$/;"	e	enum:GLSLstd450
GLSLstd450PackUnorm2x16	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450PackUnorm2x16 = 57,$/;"	e	enum:GLSLstd450
GLSLstd450PackUnorm4x8	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450PackUnorm4x8 = 55,$/;"	e	enum:GLSLstd450
GLSLstd450Pow	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Pow = 26,$/;"	e	enum:GLSLstd450
GLSLstd450Radians	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Radians = 11,$/;"	e	enum:GLSLstd450
GLSLstd450Reflect	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Reflect = 71,$/;"	e	enum:GLSLstd450
GLSLstd450Refract	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Refract = 72,$/;"	e	enum:GLSLstd450
GLSLstd450Revision	lib/vulkan/GLSL.std.450.h	/^static const int GLSLstd450Revision = 3;$/;"	v
GLSLstd450Round	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Round = 1,$/;"	e	enum:GLSLstd450
GLSLstd450RoundEven	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450RoundEven = 2,$/;"	e	enum:GLSLstd450
GLSLstd450SAbs	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450SAbs = 5,$/;"	e	enum:GLSLstd450
GLSLstd450SClamp	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450SClamp = 45,$/;"	e	enum:GLSLstd450
GLSLstd450SMax	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450SMax = 42,$/;"	e	enum:GLSLstd450
GLSLstd450SMin	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450SMin = 39,$/;"	e	enum:GLSLstd450
GLSLstd450SSign	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450SSign = 7,$/;"	e	enum:GLSLstd450
GLSLstd450Sin	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Sin = 13,$/;"	e	enum:GLSLstd450
GLSLstd450Sinh	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Sinh = 19,$/;"	e	enum:GLSLstd450
GLSLstd450SmoothStep	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450SmoothStep = 49,$/;"	e	enum:GLSLstd450
GLSLstd450Sqrt	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Sqrt = 31,$/;"	e	enum:GLSLstd450
GLSLstd450Step	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Step = 48,$/;"	e	enum:GLSLstd450
GLSLstd450Tan	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Tan = 15,$/;"	e	enum:GLSLstd450
GLSLstd450Tanh	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Tanh = 21,$/;"	e	enum:GLSLstd450
GLSLstd450Trunc	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450Trunc = 3,$/;"	e	enum:GLSLstd450
GLSLstd450UClamp	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450UClamp = 44,$/;"	e	enum:GLSLstd450
GLSLstd450UMax	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450UMax = 41,$/;"	e	enum:GLSLstd450
GLSLstd450UMin	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450UMin = 38,$/;"	e	enum:GLSLstd450
GLSLstd450UnpackDouble2x32	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450UnpackDouble2x32 = 65,$/;"	e	enum:GLSLstd450
GLSLstd450UnpackHalf2x16	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450UnpackHalf2x16 = 62,$/;"	e	enum:GLSLstd450
GLSLstd450UnpackSnorm2x16	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450UnpackSnorm2x16 = 60,$/;"	e	enum:GLSLstd450
GLSLstd450UnpackSnorm4x8	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450UnpackSnorm4x8 = 63,$/;"	e	enum:GLSLstd450
GLSLstd450UnpackUnorm2x16	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450UnpackUnorm2x16 = 61,$/;"	e	enum:GLSLstd450
GLSLstd450UnpackUnorm4x8	lib/vulkan/GLSL.std.450.h	/^    GLSLstd450UnpackUnorm4x8 = 64,$/;"	e	enum:GLSLstd450
GLSLstd450Version	lib/vulkan/GLSL.std.450.h	/^static const int GLSLstd450Version = 100;$/;"	v
GLSLstd450_H	lib/vulkan/GLSL.std.450.h	28;"	d
GetBufferMemoryRequirements	lib/vulkan/vk_layer.h	/^    PFN_vkGetBufferMemoryRequirements GetBufferMemoryRequirements;$/;"	m	struct:VkLayerDispatchTable_
GetCompilationInfoForFile	.ycm_extra_conf.py	/^def GetCompilationInfoForFile( filename ):$/;"	f
GetDeviceMemoryCommitment	lib/vulkan/vk_layer.h	/^    PFN_vkGetDeviceMemoryCommitment GetDeviceMemoryCommitment;$/;"	m	struct:VkLayerDispatchTable_
GetDeviceProcAddr	lib/vulkan/vk_layer.h	/^    PFN_vkGetDeviceProcAddr GetDeviceProcAddr;$/;"	m	struct:VkLayerDispatchTable_
GetDeviceQueue	lib/vulkan/vk_layer.h	/^    PFN_vkGetDeviceQueue GetDeviceQueue;$/;"	m	struct:VkLayerDispatchTable_
GetDisplayModePropertiesKHR	lib/vulkan/vk_layer.h	/^        GetDisplayModePropertiesKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetDisplayPlaneCapabilitiesKHR	lib/vulkan/vk_layer.h	/^        GetDisplayPlaneCapabilitiesKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetDisplayPlaneSupportedDisplaysKHR	lib/vulkan/vk_layer.h	/^        GetDisplayPlaneSupportedDisplaysKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetEventStatus	lib/vulkan/vk_layer.h	/^    PFN_vkGetEventStatus GetEventStatus;$/;"	m	struct:VkLayerDispatchTable_
GetFenceStatus	lib/vulkan/vk_layer.h	/^    PFN_vkGetFenceStatus GetFenceStatus;$/;"	m	struct:VkLayerDispatchTable_
GetImageMemoryRequirements	lib/vulkan/vk_layer.h	/^    PFN_vkGetImageMemoryRequirements GetImageMemoryRequirements;$/;"	m	struct:VkLayerDispatchTable_
GetImageSparseMemoryRequirements	lib/vulkan/vk_layer.h	/^    PFN_vkGetImageSparseMemoryRequirements GetImageSparseMemoryRequirements;$/;"	m	struct:VkLayerDispatchTable_
GetImageSubresourceLayout	lib/vulkan/vk_layer.h	/^    PFN_vkGetImageSubresourceLayout GetImageSubresourceLayout;$/;"	m	struct:VkLayerDispatchTable_
GetInstanceProcAddr	lib/vulkan/vk_layer.h	/^    PFN_vkGetInstanceProcAddr GetInstanceProcAddr;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetPhysicalDeviceDisplayPlanePropertiesKHR	lib/vulkan/vk_layer.h	/^        GetPhysicalDeviceDisplayPlanePropertiesKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetPhysicalDeviceDisplayPropertiesKHR	lib/vulkan/vk_layer.h	/^        GetPhysicalDeviceDisplayPropertiesKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetPhysicalDeviceFeatures	lib/vulkan/vk_layer.h	/^    PFN_vkGetPhysicalDeviceFeatures GetPhysicalDeviceFeatures;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetPhysicalDeviceFormatProperties	lib/vulkan/vk_layer.h	/^    PFN_vkGetPhysicalDeviceFormatProperties GetPhysicalDeviceFormatProperties;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetPhysicalDeviceImageFormatProperties	lib/vulkan/vk_layer.h	/^        GetPhysicalDeviceImageFormatProperties;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetPhysicalDeviceMemoryProperties	lib/vulkan/vk_layer.h	/^    PFN_vkGetPhysicalDeviceMemoryProperties GetPhysicalDeviceMemoryProperties;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetPhysicalDeviceMirPresentationSupportKHR	lib/vulkan/vk_layer.h	/^        GetPhysicalDeviceMirPresentationSupportKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetPhysicalDeviceProperties	lib/vulkan/vk_layer.h	/^    PFN_vkGetPhysicalDeviceProperties GetPhysicalDeviceProperties;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetPhysicalDeviceQueueFamilyProperties	lib/vulkan/vk_layer.h	/^        GetPhysicalDeviceQueueFamilyProperties;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetPhysicalDeviceSparseImageFormatProperties	lib/vulkan/vk_layer.h	/^        GetPhysicalDeviceSparseImageFormatProperties;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetPhysicalDeviceSurfaceCapabilitiesKHR	lib/vulkan/vk_layer.h	/^        GetPhysicalDeviceSurfaceCapabilitiesKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetPhysicalDeviceSurfaceFormatsKHR	lib/vulkan/vk_layer.h	/^    PFN_vkGetPhysicalDeviceSurfaceFormatsKHR GetPhysicalDeviceSurfaceFormatsKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetPhysicalDeviceSurfacePresentModesKHR	lib/vulkan/vk_layer.h	/^        GetPhysicalDeviceSurfacePresentModesKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetPhysicalDeviceSurfaceSupportKHR	lib/vulkan/vk_layer.h	/^    PFN_vkGetPhysicalDeviceSurfaceSupportKHR GetPhysicalDeviceSurfaceSupportKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetPhysicalDeviceWaylandPresentationSupportKHR	lib/vulkan/vk_layer.h	/^        GetPhysicalDeviceWaylandPresentationSupportKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetPhysicalDeviceWin32PresentationSupportKHR	lib/vulkan/vk_layer.h	/^        GetPhysicalDeviceWin32PresentationSupportKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetPhysicalDeviceXcbPresentationSupportKHR	lib/vulkan/vk_layer.h	/^        GetPhysicalDeviceXcbPresentationSupportKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetPhysicalDeviceXlibPresentationSupportKHR	lib/vulkan/vk_layer.h	/^        GetPhysicalDeviceXlibPresentationSupportKHR;$/;"	m	struct:VkLayerInstanceDispatchTable_
GetPipelineCacheData	lib/vulkan/vk_layer.h	/^    PFN_vkGetPipelineCacheData GetPipelineCacheData;$/;"	m	struct:VkLayerDispatchTable_
GetQueryPoolResults	lib/vulkan/vk_layer.h	/^    PFN_vkGetQueryPoolResults GetQueryPoolResults;$/;"	m	struct:VkLayerDispatchTable_
GetRenderAreaGranularity	lib/vulkan/vk_layer.h	/^    PFN_vkGetRenderAreaGranularity GetRenderAreaGranularity;$/;"	m	struct:VkLayerDispatchTable_
GetSwapchainImagesKHR	lib/vulkan/vk_layer.h	/^    PFN_vkGetSwapchainImagesKHR GetSwapchainImagesKHR;$/;"	m	struct:VkLayerDispatchTable_
GroupOperation	lib/vulkan/spirv.hpp	/^enum GroupOperation {$/;"	g	namespace:spv
GroupOperationExclusiveScan	lib/vulkan/spirv.hpp	/^    GroupOperationExclusiveScan = 2,$/;"	e	enum:spv::GroupOperation
GroupOperationInclusiveScan	lib/vulkan/spirv.hpp	/^    GroupOperationInclusiveScan = 1,$/;"	e	enum:spv::GroupOperation
GroupOperationMax	lib/vulkan/spirv.hpp	/^    GroupOperationMax = 0x7fffffff,$/;"	e	enum:spv::GroupOperation
GroupOperationReduce	lib/vulkan/spirv.hpp	/^    GroupOperationReduce = 0,$/;"	e	enum:spv::GroupOperation
ICD_LOADER_MAGIC	lib/vulkan/vk_icd.h	40;"	d
INC_DIR	Makefile	/^INC_DIR := inc$/;"	m
INDEX_COMPUTE	inc/device_queue_indices.h	/^		INDEX_COMPUTE = 2,$/;"	m	class:DeviceQueueIndicies
INDEX_GRAPHICS	inc/device_queue_indices.h	/^		INDEX_GRAPHICS = 0,$/;"	m	class:DeviceQueueIndicies
INDEX_SUPPORTED	inc/device_queue_indices.h	/^		INDEX_SUPPORTED = 1,$/;"	m	class:DeviceQueueIndicies
INDEX_TRANSFER	inc/device_queue_indices.h	/^		INDEX_TRANSFER = 3,$/;"	m	class:DeviceQueueIndicies
INDEX_UNSET	inc/device_queue_indices.h	/^		INDEX_UNSET = -1;$/;"	m	class:DeviceQueueIndicies
Id	lib/vulkan/spirv.hpp	/^typedef unsigned int Id;$/;"	t	namespace:spv
ImageChannelDataType	lib/vulkan/spirv.hpp	/^enum ImageChannelDataType {$/;"	g	namespace:spv
ImageChannelDataTypeFloat	lib/vulkan/spirv.hpp	/^    ImageChannelDataTypeFloat = 14,$/;"	e	enum:spv::ImageChannelDataType
ImageChannelDataTypeHalfFloat	lib/vulkan/spirv.hpp	/^    ImageChannelDataTypeHalfFloat = 13,$/;"	e	enum:spv::ImageChannelDataType
ImageChannelDataTypeMax	lib/vulkan/spirv.hpp	/^    ImageChannelDataTypeMax = 0x7fffffff,$/;"	e	enum:spv::ImageChannelDataType
ImageChannelDataTypeSignedInt16	lib/vulkan/spirv.hpp	/^    ImageChannelDataTypeSignedInt16 = 8,$/;"	e	enum:spv::ImageChannelDataType
ImageChannelDataTypeSignedInt32	lib/vulkan/spirv.hpp	/^    ImageChannelDataTypeSignedInt32 = 9,$/;"	e	enum:spv::ImageChannelDataType
ImageChannelDataTypeSignedInt8	lib/vulkan/spirv.hpp	/^    ImageChannelDataTypeSignedInt8 = 7,$/;"	e	enum:spv::ImageChannelDataType
ImageChannelDataTypeSnormInt16	lib/vulkan/spirv.hpp	/^    ImageChannelDataTypeSnormInt16 = 1,$/;"	e	enum:spv::ImageChannelDataType
ImageChannelDataTypeSnormInt8	lib/vulkan/spirv.hpp	/^    ImageChannelDataTypeSnormInt8 = 0,$/;"	e	enum:spv::ImageChannelDataType
ImageChannelDataTypeUnormInt101010	lib/vulkan/spirv.hpp	/^    ImageChannelDataTypeUnormInt101010 = 6,$/;"	e	enum:spv::ImageChannelDataType
ImageChannelDataTypeUnormInt101010_2	lib/vulkan/spirv.hpp	/^    ImageChannelDataTypeUnormInt101010_2 = 16,$/;"	e	enum:spv::ImageChannelDataType
ImageChannelDataTypeUnormInt16	lib/vulkan/spirv.hpp	/^    ImageChannelDataTypeUnormInt16 = 3,$/;"	e	enum:spv::ImageChannelDataType
ImageChannelDataTypeUnormInt24	lib/vulkan/spirv.hpp	/^    ImageChannelDataTypeUnormInt24 = 15,$/;"	e	enum:spv::ImageChannelDataType
ImageChannelDataTypeUnormInt8	lib/vulkan/spirv.hpp	/^    ImageChannelDataTypeUnormInt8 = 2,$/;"	e	enum:spv::ImageChannelDataType
ImageChannelDataTypeUnormShort555	lib/vulkan/spirv.hpp	/^    ImageChannelDataTypeUnormShort555 = 5,$/;"	e	enum:spv::ImageChannelDataType
ImageChannelDataTypeUnormShort565	lib/vulkan/spirv.hpp	/^    ImageChannelDataTypeUnormShort565 = 4,$/;"	e	enum:spv::ImageChannelDataType
ImageChannelDataTypeUnsignedInt16	lib/vulkan/spirv.hpp	/^    ImageChannelDataTypeUnsignedInt16 = 11,$/;"	e	enum:spv::ImageChannelDataType
ImageChannelDataTypeUnsignedInt32	lib/vulkan/spirv.hpp	/^    ImageChannelDataTypeUnsignedInt32 = 12,$/;"	e	enum:spv::ImageChannelDataType
ImageChannelDataTypeUnsignedInt8	lib/vulkan/spirv.hpp	/^    ImageChannelDataTypeUnsignedInt8 = 10,$/;"	e	enum:spv::ImageChannelDataType
ImageChannelOrder	lib/vulkan/spirv.hpp	/^enum ImageChannelOrder {$/;"	g	namespace:spv
ImageChannelOrderA	lib/vulkan/spirv.hpp	/^    ImageChannelOrderA = 1,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrderABGR	lib/vulkan/spirv.hpp	/^    ImageChannelOrderABGR = 19,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrderARGB	lib/vulkan/spirv.hpp	/^    ImageChannelOrderARGB = 7,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrderBGRA	lib/vulkan/spirv.hpp	/^    ImageChannelOrderBGRA = 6,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrderDepth	lib/vulkan/spirv.hpp	/^    ImageChannelOrderDepth = 13,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrderDepthStencil	lib/vulkan/spirv.hpp	/^    ImageChannelOrderDepthStencil = 14,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrderIntensity	lib/vulkan/spirv.hpp	/^    ImageChannelOrderIntensity = 8,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrderLuminance	lib/vulkan/spirv.hpp	/^    ImageChannelOrderLuminance = 9,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrderMax	lib/vulkan/spirv.hpp	/^    ImageChannelOrderMax = 0x7fffffff,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrderR	lib/vulkan/spirv.hpp	/^    ImageChannelOrderR = 0,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrderRA	lib/vulkan/spirv.hpp	/^    ImageChannelOrderRA = 3,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrderRG	lib/vulkan/spirv.hpp	/^    ImageChannelOrderRG = 2,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrderRGB	lib/vulkan/spirv.hpp	/^    ImageChannelOrderRGB = 4,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrderRGBA	lib/vulkan/spirv.hpp	/^    ImageChannelOrderRGBA = 5,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrderRGBx	lib/vulkan/spirv.hpp	/^    ImageChannelOrderRGBx = 12,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrderRGx	lib/vulkan/spirv.hpp	/^    ImageChannelOrderRGx = 11,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrderRx	lib/vulkan/spirv.hpp	/^    ImageChannelOrderRx = 10,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrdersBGRA	lib/vulkan/spirv.hpp	/^    ImageChannelOrdersBGRA = 18,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrdersRGB	lib/vulkan/spirv.hpp	/^    ImageChannelOrdersRGB = 15,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrdersRGBA	lib/vulkan/spirv.hpp	/^    ImageChannelOrdersRGBA = 17,$/;"	e	enum:spv::ImageChannelOrder
ImageChannelOrdersRGBx	lib/vulkan/spirv.hpp	/^    ImageChannelOrdersRGBx = 16,$/;"	e	enum:spv::ImageChannelOrder
ImageFormat	lib/vulkan/spirv.hpp	/^enum ImageFormat {$/;"	g	namespace:spv
ImageFormatMax	lib/vulkan/spirv.hpp	/^    ImageFormatMax = 0x7fffffff,$/;"	e	enum:spv::ImageFormat
ImageFormatR11fG11fB10f	lib/vulkan/spirv.hpp	/^    ImageFormatR11fG11fB10f = 8,$/;"	e	enum:spv::ImageFormat
ImageFormatR16	lib/vulkan/spirv.hpp	/^    ImageFormatR16 = 14,$/;"	e	enum:spv::ImageFormat
ImageFormatR16Snorm	lib/vulkan/spirv.hpp	/^    ImageFormatR16Snorm = 19,$/;"	e	enum:spv::ImageFormat
ImageFormatR16f	lib/vulkan/spirv.hpp	/^    ImageFormatR16f = 9,$/;"	e	enum:spv::ImageFormat
ImageFormatR16i	lib/vulkan/spirv.hpp	/^    ImageFormatR16i = 28,$/;"	e	enum:spv::ImageFormat
ImageFormatR16ui	lib/vulkan/spirv.hpp	/^    ImageFormatR16ui = 38,$/;"	e	enum:spv::ImageFormat
ImageFormatR32f	lib/vulkan/spirv.hpp	/^    ImageFormatR32f = 3,$/;"	e	enum:spv::ImageFormat
ImageFormatR32i	lib/vulkan/spirv.hpp	/^    ImageFormatR32i = 24,$/;"	e	enum:spv::ImageFormat
ImageFormatR32ui	lib/vulkan/spirv.hpp	/^    ImageFormatR32ui = 33,$/;"	e	enum:spv::ImageFormat
ImageFormatR8	lib/vulkan/spirv.hpp	/^    ImageFormatR8 = 15,$/;"	e	enum:spv::ImageFormat
ImageFormatR8Snorm	lib/vulkan/spirv.hpp	/^    ImageFormatR8Snorm = 20,$/;"	e	enum:spv::ImageFormat
ImageFormatR8i	lib/vulkan/spirv.hpp	/^    ImageFormatR8i = 29,$/;"	e	enum:spv::ImageFormat
ImageFormatR8ui	lib/vulkan/spirv.hpp	/^    ImageFormatR8ui = 39,$/;"	e	enum:spv::ImageFormat
ImageFormatRg16	lib/vulkan/spirv.hpp	/^    ImageFormatRg16 = 12,$/;"	e	enum:spv::ImageFormat
ImageFormatRg16Snorm	lib/vulkan/spirv.hpp	/^    ImageFormatRg16Snorm = 17,$/;"	e	enum:spv::ImageFormat
ImageFormatRg16f	lib/vulkan/spirv.hpp	/^    ImageFormatRg16f = 7,$/;"	e	enum:spv::ImageFormat
ImageFormatRg16i	lib/vulkan/spirv.hpp	/^    ImageFormatRg16i = 26,$/;"	e	enum:spv::ImageFormat
ImageFormatRg16ui	lib/vulkan/spirv.hpp	/^    ImageFormatRg16ui = 36,$/;"	e	enum:spv::ImageFormat
ImageFormatRg32f	lib/vulkan/spirv.hpp	/^    ImageFormatRg32f = 6,$/;"	e	enum:spv::ImageFormat
ImageFormatRg32i	lib/vulkan/spirv.hpp	/^    ImageFormatRg32i = 25,$/;"	e	enum:spv::ImageFormat
ImageFormatRg32ui	lib/vulkan/spirv.hpp	/^    ImageFormatRg32ui = 35,$/;"	e	enum:spv::ImageFormat
ImageFormatRg8	lib/vulkan/spirv.hpp	/^    ImageFormatRg8 = 13,$/;"	e	enum:spv::ImageFormat
ImageFormatRg8Snorm	lib/vulkan/spirv.hpp	/^    ImageFormatRg8Snorm = 18,$/;"	e	enum:spv::ImageFormat
ImageFormatRg8i	lib/vulkan/spirv.hpp	/^    ImageFormatRg8i = 27,$/;"	e	enum:spv::ImageFormat
ImageFormatRg8ui	lib/vulkan/spirv.hpp	/^    ImageFormatRg8ui = 37,$/;"	e	enum:spv::ImageFormat
ImageFormatRgb10A2	lib/vulkan/spirv.hpp	/^    ImageFormatRgb10A2 = 11,$/;"	e	enum:spv::ImageFormat
ImageFormatRgb10a2ui	lib/vulkan/spirv.hpp	/^    ImageFormatRgb10a2ui = 34,$/;"	e	enum:spv::ImageFormat
ImageFormatRgba16	lib/vulkan/spirv.hpp	/^    ImageFormatRgba16 = 10,$/;"	e	enum:spv::ImageFormat
ImageFormatRgba16Snorm	lib/vulkan/spirv.hpp	/^    ImageFormatRgba16Snorm = 16,$/;"	e	enum:spv::ImageFormat
ImageFormatRgba16f	lib/vulkan/spirv.hpp	/^    ImageFormatRgba16f = 2,$/;"	e	enum:spv::ImageFormat
ImageFormatRgba16i	lib/vulkan/spirv.hpp	/^    ImageFormatRgba16i = 22,$/;"	e	enum:spv::ImageFormat
ImageFormatRgba16ui	lib/vulkan/spirv.hpp	/^    ImageFormatRgba16ui = 31,$/;"	e	enum:spv::ImageFormat
ImageFormatRgba32f	lib/vulkan/spirv.hpp	/^    ImageFormatRgba32f = 1,$/;"	e	enum:spv::ImageFormat
ImageFormatRgba32i	lib/vulkan/spirv.hpp	/^    ImageFormatRgba32i = 21,$/;"	e	enum:spv::ImageFormat
ImageFormatRgba32ui	lib/vulkan/spirv.hpp	/^    ImageFormatRgba32ui = 30,$/;"	e	enum:spv::ImageFormat
ImageFormatRgba8	lib/vulkan/spirv.hpp	/^    ImageFormatRgba8 = 4,$/;"	e	enum:spv::ImageFormat
ImageFormatRgba8Snorm	lib/vulkan/spirv.hpp	/^    ImageFormatRgba8Snorm = 5,$/;"	e	enum:spv::ImageFormat
ImageFormatRgba8i	lib/vulkan/spirv.hpp	/^    ImageFormatRgba8i = 23,$/;"	e	enum:spv::ImageFormat
ImageFormatRgba8ui	lib/vulkan/spirv.hpp	/^    ImageFormatRgba8ui = 32,$/;"	e	enum:spv::ImageFormat
ImageFormatUnknown	lib/vulkan/spirv.hpp	/^    ImageFormatUnknown = 0,$/;"	e	enum:spv::ImageFormat
ImageOperandsBiasMask	lib/vulkan/spirv.hpp	/^    ImageOperandsBiasMask = 0x00000001,$/;"	e	enum:spv::ImageOperandsMask
ImageOperandsBiasShift	lib/vulkan/spirv.hpp	/^    ImageOperandsBiasShift = 0,$/;"	e	enum:spv::ImageOperandsShift
ImageOperandsConstOffsetMask	lib/vulkan/spirv.hpp	/^    ImageOperandsConstOffsetMask = 0x00000008,$/;"	e	enum:spv::ImageOperandsMask
ImageOperandsConstOffsetShift	lib/vulkan/spirv.hpp	/^    ImageOperandsConstOffsetShift = 3,$/;"	e	enum:spv::ImageOperandsShift
ImageOperandsConstOffsetsMask	lib/vulkan/spirv.hpp	/^    ImageOperandsConstOffsetsMask = 0x00000020,$/;"	e	enum:spv::ImageOperandsMask
ImageOperandsConstOffsetsShift	lib/vulkan/spirv.hpp	/^    ImageOperandsConstOffsetsShift = 5,$/;"	e	enum:spv::ImageOperandsShift
ImageOperandsGradMask	lib/vulkan/spirv.hpp	/^    ImageOperandsGradMask = 0x00000004,$/;"	e	enum:spv::ImageOperandsMask
ImageOperandsGradShift	lib/vulkan/spirv.hpp	/^    ImageOperandsGradShift = 2,$/;"	e	enum:spv::ImageOperandsShift
ImageOperandsLodMask	lib/vulkan/spirv.hpp	/^    ImageOperandsLodMask = 0x00000002,$/;"	e	enum:spv::ImageOperandsMask
ImageOperandsLodShift	lib/vulkan/spirv.hpp	/^    ImageOperandsLodShift = 1,$/;"	e	enum:spv::ImageOperandsShift
ImageOperandsMask	lib/vulkan/spirv.hpp	/^enum ImageOperandsMask {$/;"	g	namespace:spv
ImageOperandsMaskNone	lib/vulkan/spirv.hpp	/^    ImageOperandsMaskNone = 0,$/;"	e	enum:spv::ImageOperandsMask
ImageOperandsMax	lib/vulkan/spirv.hpp	/^    ImageOperandsMax = 0x7fffffff,$/;"	e	enum:spv::ImageOperandsShift
ImageOperandsMinLodMask	lib/vulkan/spirv.hpp	/^    ImageOperandsMinLodMask = 0x00000080,$/;"	e	enum:spv::ImageOperandsMask
ImageOperandsMinLodShift	lib/vulkan/spirv.hpp	/^    ImageOperandsMinLodShift = 7,$/;"	e	enum:spv::ImageOperandsShift
ImageOperandsOffsetMask	lib/vulkan/spirv.hpp	/^    ImageOperandsOffsetMask = 0x00000010,$/;"	e	enum:spv::ImageOperandsMask
ImageOperandsOffsetShift	lib/vulkan/spirv.hpp	/^    ImageOperandsOffsetShift = 4,$/;"	e	enum:spv::ImageOperandsShift
ImageOperandsSampleMask	lib/vulkan/spirv.hpp	/^    ImageOperandsSampleMask = 0x00000040,$/;"	e	enum:spv::ImageOperandsMask
ImageOperandsSampleShift	lib/vulkan/spirv.hpp	/^    ImageOperandsSampleShift = 6,$/;"	e	enum:spv::ImageOperandsShift
ImageOperandsShift	lib/vulkan/spirv.hpp	/^enum ImageOperandsShift {$/;"	g	namespace:spv
InputManager	inc/input_manager.h	/^class InputManager {$/;"	c
InputManager	src/input_manager.cpp	/^InputManager::InputManager():$/;"	f	class:InputManager
InputManager	src/input_manager.cpp	/^InputManager::InputManager(GLFWwindow& glfwWindow): $/;"	f	class:InputManager
InvalidateMappedMemoryRanges	lib/vulkan/vk_layer.h	/^    PFN_vkInvalidateMappedMemoryRanges InvalidateMappedMemoryRanges;$/;"	m	struct:VkLayerDispatchTable_
IsHeaderFile	.ycm_extra_conf.py	/^def IsHeaderFile( filename ):$/;"	f
KernelEnqueueFlags	lib/vulkan/spirv.hpp	/^enum KernelEnqueueFlags {$/;"	g	namespace:spv
KernelEnqueueFlagsMax	lib/vulkan/spirv.hpp	/^    KernelEnqueueFlagsMax = 0x7fffffff,$/;"	e	enum:spv::KernelEnqueueFlags
KernelEnqueueFlagsNoWait	lib/vulkan/spirv.hpp	/^    KernelEnqueueFlagsNoWait = 0,$/;"	e	enum:spv::KernelEnqueueFlags
KernelEnqueueFlagsWaitKernel	lib/vulkan/spirv.hpp	/^    KernelEnqueueFlagsWaitKernel = 1,$/;"	e	enum:spv::KernelEnqueueFlags
KernelEnqueueFlagsWaitWorkGroup	lib/vulkan/spirv.hpp	/^    KernelEnqueueFlagsWaitWorkGroup = 2,$/;"	e	enum:spv::KernelEnqueueFlags
KernelProfilingInfoCmdExecTimeMask	lib/vulkan/spirv.hpp	/^    KernelProfilingInfoCmdExecTimeMask = 0x00000001,$/;"	e	enum:spv::KernelProfilingInfoMask
KernelProfilingInfoCmdExecTimeShift	lib/vulkan/spirv.hpp	/^    KernelProfilingInfoCmdExecTimeShift = 0,$/;"	e	enum:spv::KernelProfilingInfoShift
KernelProfilingInfoMask	lib/vulkan/spirv.hpp	/^enum KernelProfilingInfoMask {$/;"	g	namespace:spv
KernelProfilingInfoMaskNone	lib/vulkan/spirv.hpp	/^    KernelProfilingInfoMaskNone = 0,$/;"	e	enum:spv::KernelProfilingInfoMask
KernelProfilingInfoMax	lib/vulkan/spirv.hpp	/^    KernelProfilingInfoMax = 0x7fffffff,$/;"	e	enum:spv::KernelProfilingInfoShift
KernelProfilingInfoShift	lib/vulkan/spirv.hpp	/^enum KernelProfilingInfoShift {$/;"	g	namespace:spv
LAST_CONCRETE	lib/vulkan/libspirv.h	/^  LAST_CONCRETE(SPV_OPERAND_TYPE_MEMORY_ACCESS),  \/\/ SPIR-V Sec 3.26$/;"	e	enum:spv_operand_type_t
LAST_CONCRETE	lib/vulkan/libspirv.h	162;"	d
LAST_CONCRETE	lib/vulkan/libspirv.h	95;"	d
LAST_VARIABLE	lib/vulkan/libspirv.h	/^  LAST_VARIABLE(SPV_OPERAND_TYPE_VARIABLE_ID_LITERAL_INTEGER),$/;"	e	enum:spv_operand_type_t
LAST_VARIABLE	lib/vulkan/libspirv.h	174;"	d
LDLIBS	Makefile	/^LDLIBS=$(shell pkg-config --static --libs glfw3) -L$(VULKAN_LIB_PATH) -lvulkan$/;"	m
LOG	inc/macro.h	13;"	d
LinkageType	lib/vulkan/spirv.hpp	/^enum LinkageType {$/;"	g	namespace:spv
LinkageTypeExport	lib/vulkan/spirv.hpp	/^    LinkageTypeExport = 0,$/;"	e	enum:spv::LinkageType
LinkageTypeImport	lib/vulkan/spirv.hpp	/^    LinkageTypeImport = 1,$/;"	e	enum:spv::LinkageType
LinkageTypeMax	lib/vulkan/spirv.hpp	/^    LinkageTypeMax = 0x7fffffff,$/;"	e	enum:spv::LinkageType
LoopControlDependencyInfiniteMask	lib/vulkan/spirv.hpp	/^    LoopControlDependencyInfiniteMask = 0x00000004,$/;"	e	enum:spv::LoopControlMask
LoopControlDependencyInfiniteShift	lib/vulkan/spirv.hpp	/^    LoopControlDependencyInfiniteShift = 2,$/;"	e	enum:spv::LoopControlShift
LoopControlDependencyLengthMask	lib/vulkan/spirv.hpp	/^    LoopControlDependencyLengthMask = 0x00000008,$/;"	e	enum:spv::LoopControlMask
LoopControlDependencyLengthShift	lib/vulkan/spirv.hpp	/^    LoopControlDependencyLengthShift = 3,$/;"	e	enum:spv::LoopControlShift
LoopControlDontUnrollMask	lib/vulkan/spirv.hpp	/^    LoopControlDontUnrollMask = 0x00000002,$/;"	e	enum:spv::LoopControlMask
LoopControlDontUnrollShift	lib/vulkan/spirv.hpp	/^    LoopControlDontUnrollShift = 1,$/;"	e	enum:spv::LoopControlShift
LoopControlMask	lib/vulkan/spirv.hpp	/^enum LoopControlMask {$/;"	g	namespace:spv
LoopControlMaskNone	lib/vulkan/spirv.hpp	/^    LoopControlMaskNone = 0,$/;"	e	enum:spv::LoopControlMask
LoopControlMax	lib/vulkan/spirv.hpp	/^    LoopControlMax = 0x7fffffff,$/;"	e	enum:spv::LoopControlShift
LoopControlShift	lib/vulkan/spirv.hpp	/^enum LoopControlShift {$/;"	g	namespace:spv
LoopControlUnrollMask	lib/vulkan/spirv.hpp	/^    LoopControlUnrollMask = 0x00000001,$/;"	e	enum:spv::LoopControlMask
LoopControlUnrollShift	lib/vulkan/spirv.hpp	/^    LoopControlUnrollShift = 0,$/;"	e	enum:spv::LoopControlShift
MIN_SUPPORTED_LOADER_ICD_INTERFACE_VERSION	lib/vulkan/vk_icd.h	32;"	d
MagicNumber	lib/vulkan/spirv.hpp	/^static const unsigned int MagicNumber = 0x07230203;$/;"	m	namespace:spv
MakeRelativePathsInFlagsAbsolute	.ycm_extra_conf.py	/^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$/;"	f
MapMemory	lib/vulkan/vk_layer.h	/^    PFN_vkMapMemory MapMemory;$/;"	m	struct:VkLayerDispatchTable_
MemoryAccessAlignedMask	lib/vulkan/spirv.hpp	/^    MemoryAccessAlignedMask = 0x00000002,$/;"	e	enum:spv::MemoryAccessMask
MemoryAccessAlignedShift	lib/vulkan/spirv.hpp	/^    MemoryAccessAlignedShift = 1,$/;"	e	enum:spv::MemoryAccessShift
MemoryAccessMask	lib/vulkan/spirv.hpp	/^enum MemoryAccessMask {$/;"	g	namespace:spv
MemoryAccessMaskNone	lib/vulkan/spirv.hpp	/^    MemoryAccessMaskNone = 0,$/;"	e	enum:spv::MemoryAccessMask
MemoryAccessMax	lib/vulkan/spirv.hpp	/^    MemoryAccessMax = 0x7fffffff,$/;"	e	enum:spv::MemoryAccessShift
MemoryAccessNontemporalMask	lib/vulkan/spirv.hpp	/^    MemoryAccessNontemporalMask = 0x00000004,$/;"	e	enum:spv::MemoryAccessMask
MemoryAccessNontemporalShift	lib/vulkan/spirv.hpp	/^    MemoryAccessNontemporalShift = 2,$/;"	e	enum:spv::MemoryAccessShift
MemoryAccessShift	lib/vulkan/spirv.hpp	/^enum MemoryAccessShift {$/;"	g	namespace:spv
MemoryAccessVolatileMask	lib/vulkan/spirv.hpp	/^    MemoryAccessVolatileMask = 0x00000001,$/;"	e	enum:spv::MemoryAccessMask
MemoryAccessVolatileShift	lib/vulkan/spirv.hpp	/^    MemoryAccessVolatileShift = 0,$/;"	e	enum:spv::MemoryAccessShift
MemoryModel	lib/vulkan/spirv.hpp	/^enum MemoryModel {$/;"	g	namespace:spv
MemoryModelGLSL450	lib/vulkan/spirv.hpp	/^    MemoryModelGLSL450 = 1,$/;"	e	enum:spv::MemoryModel
MemoryModelMax	lib/vulkan/spirv.hpp	/^    MemoryModelMax = 0x7fffffff,$/;"	e	enum:spv::MemoryModel
MemoryModelOpenCL	lib/vulkan/spirv.hpp	/^    MemoryModelOpenCL = 2,$/;"	e	enum:spv::MemoryModel
MemoryModelSimple	lib/vulkan/spirv.hpp	/^    MemoryModelSimple = 0,$/;"	e	enum:spv::MemoryModel
MemorySemanticsAcquireMask	lib/vulkan/spirv.hpp	/^    MemorySemanticsAcquireMask = 0x00000002,$/;"	e	enum:spv::MemorySemanticsMask
MemorySemanticsAcquireReleaseMask	lib/vulkan/spirv.hpp	/^    MemorySemanticsAcquireReleaseMask = 0x00000008,$/;"	e	enum:spv::MemorySemanticsMask
MemorySemanticsAcquireReleaseShift	lib/vulkan/spirv.hpp	/^    MemorySemanticsAcquireReleaseShift = 3,$/;"	e	enum:spv::MemorySemanticsShift
MemorySemanticsAcquireShift	lib/vulkan/spirv.hpp	/^    MemorySemanticsAcquireShift = 1,$/;"	e	enum:spv::MemorySemanticsShift
MemorySemanticsAtomicCounterMemoryMask	lib/vulkan/spirv.hpp	/^    MemorySemanticsAtomicCounterMemoryMask = 0x00000400,$/;"	e	enum:spv::MemorySemanticsMask
MemorySemanticsAtomicCounterMemoryShift	lib/vulkan/spirv.hpp	/^    MemorySemanticsAtomicCounterMemoryShift = 10,$/;"	e	enum:spv::MemorySemanticsShift
MemorySemanticsCrossWorkgroupMemoryMask	lib/vulkan/spirv.hpp	/^    MemorySemanticsCrossWorkgroupMemoryMask = 0x00000200,$/;"	e	enum:spv::MemorySemanticsMask
MemorySemanticsCrossWorkgroupMemoryShift	lib/vulkan/spirv.hpp	/^    MemorySemanticsCrossWorkgroupMemoryShift = 9,$/;"	e	enum:spv::MemorySemanticsShift
MemorySemanticsImageMemoryMask	lib/vulkan/spirv.hpp	/^    MemorySemanticsImageMemoryMask = 0x00000800,$/;"	e	enum:spv::MemorySemanticsMask
MemorySemanticsImageMemoryShift	lib/vulkan/spirv.hpp	/^    MemorySemanticsImageMemoryShift = 11,$/;"	e	enum:spv::MemorySemanticsShift
MemorySemanticsMask	lib/vulkan/spirv.hpp	/^enum MemorySemanticsMask {$/;"	g	namespace:spv
MemorySemanticsMaskNone	lib/vulkan/spirv.hpp	/^    MemorySemanticsMaskNone = 0,$/;"	e	enum:spv::MemorySemanticsMask
MemorySemanticsMax	lib/vulkan/spirv.hpp	/^    MemorySemanticsMax = 0x7fffffff,$/;"	e	enum:spv::MemorySemanticsShift
MemorySemanticsReleaseMask	lib/vulkan/spirv.hpp	/^    MemorySemanticsReleaseMask = 0x00000004,$/;"	e	enum:spv::MemorySemanticsMask
MemorySemanticsReleaseShift	lib/vulkan/spirv.hpp	/^    MemorySemanticsReleaseShift = 2,$/;"	e	enum:spv::MemorySemanticsShift
MemorySemanticsSequentiallyConsistentMask	lib/vulkan/spirv.hpp	/^    MemorySemanticsSequentiallyConsistentMask = 0x00000010,$/;"	e	enum:spv::MemorySemanticsMask
MemorySemanticsSequentiallyConsistentShift	lib/vulkan/spirv.hpp	/^    MemorySemanticsSequentiallyConsistentShift = 4,$/;"	e	enum:spv::MemorySemanticsShift
MemorySemanticsShift	lib/vulkan/spirv.hpp	/^enum MemorySemanticsShift {$/;"	g	namespace:spv
MemorySemanticsSubgroupMemoryMask	lib/vulkan/spirv.hpp	/^    MemorySemanticsSubgroupMemoryMask = 0x00000080,$/;"	e	enum:spv::MemorySemanticsMask
MemorySemanticsSubgroupMemoryShift	lib/vulkan/spirv.hpp	/^    MemorySemanticsSubgroupMemoryShift = 7,$/;"	e	enum:spv::MemorySemanticsShift
MemorySemanticsUniformMemoryMask	lib/vulkan/spirv.hpp	/^    MemorySemanticsUniformMemoryMask = 0x00000040,$/;"	e	enum:spv::MemorySemanticsMask
MemorySemanticsUniformMemoryShift	lib/vulkan/spirv.hpp	/^    MemorySemanticsUniformMemoryShift = 6,$/;"	e	enum:spv::MemorySemanticsShift
MemorySemanticsWorkgroupMemoryMask	lib/vulkan/spirv.hpp	/^    MemorySemanticsWorkgroupMemoryMask = 0x00000100,$/;"	e	enum:spv::MemorySemanticsMask
MemorySemanticsWorkgroupMemoryShift	lib/vulkan/spirv.hpp	/^    MemorySemanticsWorkgroupMemoryShift = 8,$/;"	e	enum:spv::MemorySemanticsShift
MergePipelineCaches	lib/vulkan/vk_layer.h	/^    PFN_vkMergePipelineCaches MergePipelineCaches;$/;"	m	struct:VkLayerDispatchTable_
MessageTask	inc/task_manager.h	/^	MessageTask(int id): mId(id) {}$/;"	f	class:MessageTask
MessageTask	inc/task_manager.h	/^class MessageTask : public Task {$/;"	c
NOMINMAX	lib/vulkan/vk_sdk_platform.h	26;"	d
NS	inc/macro.h	12;"	d
NUM_DEVICE_QUEUE_INDICES	inc/device_queue_indices.h	6;"	d
OBJS	Makefile	/^OBJS=$(patsubst %.cpp,$(OBJ_DIR)\/%.o, $(SRCS))$/;"	m
OBJ_DIR	Makefile	/^OBJ_DIR := obj$/;"	m
Op	lib/vulkan/spirv.hpp	/^enum Op {$/;"	g	namespace:spv
OpAccessChain	lib/vulkan/spirv.hpp	/^    OpAccessChain = 65,$/;"	e	enum:spv::Op
OpAll	lib/vulkan/spirv.hpp	/^    OpAll = 155,$/;"	e	enum:spv::Op
OpAny	lib/vulkan/spirv.hpp	/^    OpAny = 154,$/;"	e	enum:spv::Op
OpArrayLength	lib/vulkan/spirv.hpp	/^    OpArrayLength = 68,$/;"	e	enum:spv::Op
OpAtomicAnd	lib/vulkan/spirv.hpp	/^    OpAtomicAnd = 240,$/;"	e	enum:spv::Op
OpAtomicCompareExchange	lib/vulkan/spirv.hpp	/^    OpAtomicCompareExchange = 230,$/;"	e	enum:spv::Op
OpAtomicCompareExchangeWeak	lib/vulkan/spirv.hpp	/^    OpAtomicCompareExchangeWeak = 231,$/;"	e	enum:spv::Op
OpAtomicExchange	lib/vulkan/spirv.hpp	/^    OpAtomicExchange = 229,$/;"	e	enum:spv::Op
OpAtomicFlagClear	lib/vulkan/spirv.hpp	/^    OpAtomicFlagClear = 319,$/;"	e	enum:spv::Op
OpAtomicFlagTestAndSet	lib/vulkan/spirv.hpp	/^    OpAtomicFlagTestAndSet = 318,$/;"	e	enum:spv::Op
OpAtomicIAdd	lib/vulkan/spirv.hpp	/^    OpAtomicIAdd = 234,$/;"	e	enum:spv::Op
OpAtomicIDecrement	lib/vulkan/spirv.hpp	/^    OpAtomicIDecrement = 233,$/;"	e	enum:spv::Op
OpAtomicIIncrement	lib/vulkan/spirv.hpp	/^    OpAtomicIIncrement = 232,$/;"	e	enum:spv::Op
OpAtomicISub	lib/vulkan/spirv.hpp	/^    OpAtomicISub = 235,$/;"	e	enum:spv::Op
OpAtomicLoad	lib/vulkan/spirv.hpp	/^    OpAtomicLoad = 227,$/;"	e	enum:spv::Op
OpAtomicOr	lib/vulkan/spirv.hpp	/^    OpAtomicOr = 241,$/;"	e	enum:spv::Op
OpAtomicSMax	lib/vulkan/spirv.hpp	/^    OpAtomicSMax = 238,$/;"	e	enum:spv::Op
OpAtomicSMin	lib/vulkan/spirv.hpp	/^    OpAtomicSMin = 236,$/;"	e	enum:spv::Op
OpAtomicStore	lib/vulkan/spirv.hpp	/^    OpAtomicStore = 228,$/;"	e	enum:spv::Op
OpAtomicUMax	lib/vulkan/spirv.hpp	/^    OpAtomicUMax = 239,$/;"	e	enum:spv::Op
OpAtomicUMin	lib/vulkan/spirv.hpp	/^    OpAtomicUMin = 237,$/;"	e	enum:spv::Op
OpAtomicXor	lib/vulkan/spirv.hpp	/^    OpAtomicXor = 242,$/;"	e	enum:spv::Op
OpBitCount	lib/vulkan/spirv.hpp	/^    OpBitCount = 205,$/;"	e	enum:spv::Op
OpBitFieldInsert	lib/vulkan/spirv.hpp	/^    OpBitFieldInsert = 201,$/;"	e	enum:spv::Op
OpBitFieldSExtract	lib/vulkan/spirv.hpp	/^    OpBitFieldSExtract = 202,$/;"	e	enum:spv::Op
OpBitFieldUExtract	lib/vulkan/spirv.hpp	/^    OpBitFieldUExtract = 203,$/;"	e	enum:spv::Op
OpBitReverse	lib/vulkan/spirv.hpp	/^    OpBitReverse = 204,$/;"	e	enum:spv::Op
OpBitcast	lib/vulkan/spirv.hpp	/^    OpBitcast = 124,$/;"	e	enum:spv::Op
OpBitwiseAnd	lib/vulkan/spirv.hpp	/^    OpBitwiseAnd = 199,$/;"	e	enum:spv::Op
OpBitwiseOr	lib/vulkan/spirv.hpp	/^    OpBitwiseOr = 197,$/;"	e	enum:spv::Op
OpBitwiseXor	lib/vulkan/spirv.hpp	/^    OpBitwiseXor = 198,$/;"	e	enum:spv::Op
OpBranch	lib/vulkan/spirv.hpp	/^    OpBranch = 249,$/;"	e	enum:spv::Op
OpBranchConditional	lib/vulkan/spirv.hpp	/^    OpBranchConditional = 250,$/;"	e	enum:spv::Op
OpBuildNDRange	lib/vulkan/spirv.hpp	/^    OpBuildNDRange = 304,$/;"	e	enum:spv::Op
OpCapability	lib/vulkan/spirv.hpp	/^    OpCapability = 17,$/;"	e	enum:spv::Op
OpCaptureEventProfilingInfo	lib/vulkan/spirv.hpp	/^    OpCaptureEventProfilingInfo = 302,$/;"	e	enum:spv::Op
OpCodeMask	lib/vulkan/spirv.hpp	/^static const unsigned int OpCodeMask = 0xffff;$/;"	m	namespace:spv
OpCommitReadPipe	lib/vulkan/spirv.hpp	/^    OpCommitReadPipe = 280,$/;"	e	enum:spv::Op
OpCommitWritePipe	lib/vulkan/spirv.hpp	/^    OpCommitWritePipe = 281,$/;"	e	enum:spv::Op
OpCompositeConstruct	lib/vulkan/spirv.hpp	/^    OpCompositeConstruct = 80,$/;"	e	enum:spv::Op
OpCompositeExtract	lib/vulkan/spirv.hpp	/^    OpCompositeExtract = 81,$/;"	e	enum:spv::Op
OpCompositeInsert	lib/vulkan/spirv.hpp	/^    OpCompositeInsert = 82,$/;"	e	enum:spv::Op
OpConstant	lib/vulkan/spirv.hpp	/^    OpConstant = 43,$/;"	e	enum:spv::Op
OpConstantComposite	lib/vulkan/spirv.hpp	/^    OpConstantComposite = 44,$/;"	e	enum:spv::Op
OpConstantFalse	lib/vulkan/spirv.hpp	/^    OpConstantFalse = 42,$/;"	e	enum:spv::Op
OpConstantNull	lib/vulkan/spirv.hpp	/^    OpConstantNull = 46,$/;"	e	enum:spv::Op
OpConstantPipeStorage	lib/vulkan/spirv.hpp	/^    OpConstantPipeStorage = 323,$/;"	e	enum:spv::Op
OpConstantSampler	lib/vulkan/spirv.hpp	/^    OpConstantSampler = 45,$/;"	e	enum:spv::Op
OpConstantTrue	lib/vulkan/spirv.hpp	/^    OpConstantTrue = 41,$/;"	e	enum:spv::Op
OpControlBarrier	lib/vulkan/spirv.hpp	/^    OpControlBarrier = 224,$/;"	e	enum:spv::Op
OpConvertFToS	lib/vulkan/spirv.hpp	/^    OpConvertFToS = 110,$/;"	e	enum:spv::Op
OpConvertFToU	lib/vulkan/spirv.hpp	/^    OpConvertFToU = 109,$/;"	e	enum:spv::Op
OpConvertPtrToU	lib/vulkan/spirv.hpp	/^    OpConvertPtrToU = 117,$/;"	e	enum:spv::Op
OpConvertSToF	lib/vulkan/spirv.hpp	/^    OpConvertSToF = 111,$/;"	e	enum:spv::Op
OpConvertUToF	lib/vulkan/spirv.hpp	/^    OpConvertUToF = 112,$/;"	e	enum:spv::Op
OpConvertUToPtr	lib/vulkan/spirv.hpp	/^    OpConvertUToPtr = 120,$/;"	e	enum:spv::Op
OpCopyMemory	lib/vulkan/spirv.hpp	/^    OpCopyMemory = 63,$/;"	e	enum:spv::Op
OpCopyMemorySized	lib/vulkan/spirv.hpp	/^    OpCopyMemorySized = 64,$/;"	e	enum:spv::Op
OpCopyObject	lib/vulkan/spirv.hpp	/^    OpCopyObject = 83,$/;"	e	enum:spv::Op
OpCreatePipeFromPipeStorage	lib/vulkan/spirv.hpp	/^    OpCreatePipeFromPipeStorage = 324,$/;"	e	enum:spv::Op
OpCreateUserEvent	lib/vulkan/spirv.hpp	/^    OpCreateUserEvent = 299,$/;"	e	enum:spv::Op
OpDPdx	lib/vulkan/spirv.hpp	/^    OpDPdx = 207,$/;"	e	enum:spv::Op
OpDPdxCoarse	lib/vulkan/spirv.hpp	/^    OpDPdxCoarse = 213,$/;"	e	enum:spv::Op
OpDPdxFine	lib/vulkan/spirv.hpp	/^    OpDPdxFine = 210,$/;"	e	enum:spv::Op
OpDPdy	lib/vulkan/spirv.hpp	/^    OpDPdy = 208,$/;"	e	enum:spv::Op
OpDPdyCoarse	lib/vulkan/spirv.hpp	/^    OpDPdyCoarse = 214,$/;"	e	enum:spv::Op
OpDPdyFine	lib/vulkan/spirv.hpp	/^    OpDPdyFine = 211,$/;"	e	enum:spv::Op
OpDecorate	lib/vulkan/spirv.hpp	/^    OpDecorate = 71,$/;"	e	enum:spv::Op
OpDecorationGroup	lib/vulkan/spirv.hpp	/^    OpDecorationGroup = 73,$/;"	e	enum:spv::Op
OpDot	lib/vulkan/spirv.hpp	/^    OpDot = 148,$/;"	e	enum:spv::Op
OpEmitStreamVertex	lib/vulkan/spirv.hpp	/^    OpEmitStreamVertex = 220,$/;"	e	enum:spv::Op
OpEmitVertex	lib/vulkan/spirv.hpp	/^    OpEmitVertex = 218,$/;"	e	enum:spv::Op
OpEndPrimitive	lib/vulkan/spirv.hpp	/^    OpEndPrimitive = 219,$/;"	e	enum:spv::Op
OpEndStreamPrimitive	lib/vulkan/spirv.hpp	/^    OpEndStreamPrimitive = 221,$/;"	e	enum:spv::Op
OpEnqueueKernel	lib/vulkan/spirv.hpp	/^    OpEnqueueKernel = 292,$/;"	e	enum:spv::Op
OpEnqueueMarker	lib/vulkan/spirv.hpp	/^    OpEnqueueMarker = 291,$/;"	e	enum:spv::Op
OpEntryPoint	lib/vulkan/spirv.hpp	/^    OpEntryPoint = 15,$/;"	e	enum:spv::Op
OpExecutionMode	lib/vulkan/spirv.hpp	/^    OpExecutionMode = 16,$/;"	e	enum:spv::Op
OpExtInst	lib/vulkan/spirv.hpp	/^    OpExtInst = 12,$/;"	e	enum:spv::Op
OpExtInstImport	lib/vulkan/spirv.hpp	/^    OpExtInstImport = 11,$/;"	e	enum:spv::Op
OpExtension	lib/vulkan/spirv.hpp	/^    OpExtension = 10,$/;"	e	enum:spv::Op
OpFAdd	lib/vulkan/spirv.hpp	/^    OpFAdd = 129,$/;"	e	enum:spv::Op
OpFConvert	lib/vulkan/spirv.hpp	/^    OpFConvert = 115,$/;"	e	enum:spv::Op
OpFDiv	lib/vulkan/spirv.hpp	/^    OpFDiv = 136,$/;"	e	enum:spv::Op
OpFMod	lib/vulkan/spirv.hpp	/^    OpFMod = 141,$/;"	e	enum:spv::Op
OpFMul	lib/vulkan/spirv.hpp	/^    OpFMul = 133,$/;"	e	enum:spv::Op
OpFNegate	lib/vulkan/spirv.hpp	/^    OpFNegate = 127,$/;"	e	enum:spv::Op
OpFOrdEqual	lib/vulkan/spirv.hpp	/^    OpFOrdEqual = 180,$/;"	e	enum:spv::Op
OpFOrdGreaterThan	lib/vulkan/spirv.hpp	/^    OpFOrdGreaterThan = 186,$/;"	e	enum:spv::Op
OpFOrdGreaterThanEqual	lib/vulkan/spirv.hpp	/^    OpFOrdGreaterThanEqual = 190,$/;"	e	enum:spv::Op
OpFOrdLessThan	lib/vulkan/spirv.hpp	/^    OpFOrdLessThan = 184,$/;"	e	enum:spv::Op
OpFOrdLessThanEqual	lib/vulkan/spirv.hpp	/^    OpFOrdLessThanEqual = 188,$/;"	e	enum:spv::Op
OpFOrdNotEqual	lib/vulkan/spirv.hpp	/^    OpFOrdNotEqual = 182,$/;"	e	enum:spv::Op
OpFRem	lib/vulkan/spirv.hpp	/^    OpFRem = 140,$/;"	e	enum:spv::Op
OpFSub	lib/vulkan/spirv.hpp	/^    OpFSub = 131,$/;"	e	enum:spv::Op
OpFUnordEqual	lib/vulkan/spirv.hpp	/^    OpFUnordEqual = 181,$/;"	e	enum:spv::Op
OpFUnordGreaterThan	lib/vulkan/spirv.hpp	/^    OpFUnordGreaterThan = 187,$/;"	e	enum:spv::Op
OpFUnordGreaterThanEqual	lib/vulkan/spirv.hpp	/^    OpFUnordGreaterThanEqual = 191,$/;"	e	enum:spv::Op
OpFUnordLessThan	lib/vulkan/spirv.hpp	/^    OpFUnordLessThan = 185,$/;"	e	enum:spv::Op
OpFUnordLessThanEqual	lib/vulkan/spirv.hpp	/^    OpFUnordLessThanEqual = 189,$/;"	e	enum:spv::Op
OpFUnordNotEqual	lib/vulkan/spirv.hpp	/^    OpFUnordNotEqual = 183,$/;"	e	enum:spv::Op
OpFunction	lib/vulkan/spirv.hpp	/^    OpFunction = 54,$/;"	e	enum:spv::Op
OpFunctionCall	lib/vulkan/spirv.hpp	/^    OpFunctionCall = 57,$/;"	e	enum:spv::Op
OpFunctionEnd	lib/vulkan/spirv.hpp	/^    OpFunctionEnd = 56,$/;"	e	enum:spv::Op
OpFunctionParameter	lib/vulkan/spirv.hpp	/^    OpFunctionParameter = 55,$/;"	e	enum:spv::Op
OpFwidth	lib/vulkan/spirv.hpp	/^    OpFwidth = 209,$/;"	e	enum:spv::Op
OpFwidthCoarse	lib/vulkan/spirv.hpp	/^    OpFwidthCoarse = 215,$/;"	e	enum:spv::Op
OpFwidthFine	lib/vulkan/spirv.hpp	/^    OpFwidthFine = 212,$/;"	e	enum:spv::Op
OpGenericCastToPtr	lib/vulkan/spirv.hpp	/^    OpGenericCastToPtr = 122,$/;"	e	enum:spv::Op
OpGenericCastToPtrExplicit	lib/vulkan/spirv.hpp	/^    OpGenericCastToPtrExplicit = 123,$/;"	e	enum:spv::Op
OpGenericPtrMemSemantics	lib/vulkan/spirv.hpp	/^    OpGenericPtrMemSemantics = 69,$/;"	e	enum:spv::Op
OpGetDefaultQueue	lib/vulkan/spirv.hpp	/^    OpGetDefaultQueue = 303,$/;"	e	enum:spv::Op
OpGetKernelLocalSizeForSubgroupCount	lib/vulkan/spirv.hpp	/^    OpGetKernelLocalSizeForSubgroupCount = 325,$/;"	e	enum:spv::Op
OpGetKernelMaxNumSubgroups	lib/vulkan/spirv.hpp	/^    OpGetKernelMaxNumSubgroups = 326,$/;"	e	enum:spv::Op
OpGetKernelNDrangeMaxSubGroupSize	lib/vulkan/spirv.hpp	/^    OpGetKernelNDrangeMaxSubGroupSize = 294,$/;"	e	enum:spv::Op
OpGetKernelNDrangeSubGroupCount	lib/vulkan/spirv.hpp	/^    OpGetKernelNDrangeSubGroupCount = 293,$/;"	e	enum:spv::Op
OpGetKernelPreferredWorkGroupSizeMultiple	lib/vulkan/spirv.hpp	/^    OpGetKernelPreferredWorkGroupSizeMultiple = 296,$/;"	e	enum:spv::Op
OpGetKernelWorkGroupSize	lib/vulkan/spirv.hpp	/^    OpGetKernelWorkGroupSize = 295,$/;"	e	enum:spv::Op
OpGetMaxPipePackets	lib/vulkan/spirv.hpp	/^    OpGetMaxPipePackets = 284,$/;"	e	enum:spv::Op
OpGetNumPipePackets	lib/vulkan/spirv.hpp	/^    OpGetNumPipePackets = 283,$/;"	e	enum:spv::Op
OpGroupAll	lib/vulkan/spirv.hpp	/^    OpGroupAll = 261,$/;"	e	enum:spv::Op
OpGroupAny	lib/vulkan/spirv.hpp	/^    OpGroupAny = 262,$/;"	e	enum:spv::Op
OpGroupAsyncCopy	lib/vulkan/spirv.hpp	/^    OpGroupAsyncCopy = 259,$/;"	e	enum:spv::Op
OpGroupBroadcast	lib/vulkan/spirv.hpp	/^    OpGroupBroadcast = 263,$/;"	e	enum:spv::Op
OpGroupCommitReadPipe	lib/vulkan/spirv.hpp	/^    OpGroupCommitReadPipe = 287,$/;"	e	enum:spv::Op
OpGroupCommitWritePipe	lib/vulkan/spirv.hpp	/^    OpGroupCommitWritePipe = 288,$/;"	e	enum:spv::Op
OpGroupDecorate	lib/vulkan/spirv.hpp	/^    OpGroupDecorate = 74,$/;"	e	enum:spv::Op
OpGroupFAdd	lib/vulkan/spirv.hpp	/^    OpGroupFAdd = 265,$/;"	e	enum:spv::Op
OpGroupFMax	lib/vulkan/spirv.hpp	/^    OpGroupFMax = 269,$/;"	e	enum:spv::Op
OpGroupFMin	lib/vulkan/spirv.hpp	/^    OpGroupFMin = 266,$/;"	e	enum:spv::Op
OpGroupIAdd	lib/vulkan/spirv.hpp	/^    OpGroupIAdd = 264,$/;"	e	enum:spv::Op
OpGroupMemberDecorate	lib/vulkan/spirv.hpp	/^    OpGroupMemberDecorate = 75,$/;"	e	enum:spv::Op
OpGroupReserveReadPipePackets	lib/vulkan/spirv.hpp	/^    OpGroupReserveReadPipePackets = 285,$/;"	e	enum:spv::Op
OpGroupReserveWritePipePackets	lib/vulkan/spirv.hpp	/^    OpGroupReserveWritePipePackets = 286,$/;"	e	enum:spv::Op
OpGroupSMax	lib/vulkan/spirv.hpp	/^    OpGroupSMax = 271,$/;"	e	enum:spv::Op
OpGroupSMin	lib/vulkan/spirv.hpp	/^    OpGroupSMin = 268,$/;"	e	enum:spv::Op
OpGroupUMax	lib/vulkan/spirv.hpp	/^    OpGroupUMax = 270,$/;"	e	enum:spv::Op
OpGroupUMin	lib/vulkan/spirv.hpp	/^    OpGroupUMin = 267,$/;"	e	enum:spv::Op
OpGroupWaitEvents	lib/vulkan/spirv.hpp	/^    OpGroupWaitEvents = 260,$/;"	e	enum:spv::Op
OpIAdd	lib/vulkan/spirv.hpp	/^    OpIAdd = 128,$/;"	e	enum:spv::Op
OpIAddCarry	lib/vulkan/spirv.hpp	/^    OpIAddCarry = 149,$/;"	e	enum:spv::Op
OpIEqual	lib/vulkan/spirv.hpp	/^    OpIEqual = 170,$/;"	e	enum:spv::Op
OpIMul	lib/vulkan/spirv.hpp	/^    OpIMul = 132,$/;"	e	enum:spv::Op
OpINotEqual	lib/vulkan/spirv.hpp	/^    OpINotEqual = 171,$/;"	e	enum:spv::Op
OpISub	lib/vulkan/spirv.hpp	/^    OpISub = 130,$/;"	e	enum:spv::Op
OpISubBorrow	lib/vulkan/spirv.hpp	/^    OpISubBorrow = 150,$/;"	e	enum:spv::Op
OpImage	lib/vulkan/spirv.hpp	/^    OpImage = 100,$/;"	e	enum:spv::Op
OpImageDrefGather	lib/vulkan/spirv.hpp	/^    OpImageDrefGather = 97,$/;"	e	enum:spv::Op
OpImageFetch	lib/vulkan/spirv.hpp	/^    OpImageFetch = 95,$/;"	e	enum:spv::Op
OpImageGather	lib/vulkan/spirv.hpp	/^    OpImageGather = 96,$/;"	e	enum:spv::Op
OpImageQueryFormat	lib/vulkan/spirv.hpp	/^    OpImageQueryFormat = 101,$/;"	e	enum:spv::Op
OpImageQueryLevels	lib/vulkan/spirv.hpp	/^    OpImageQueryLevels = 106,$/;"	e	enum:spv::Op
OpImageQueryLod	lib/vulkan/spirv.hpp	/^    OpImageQueryLod = 105,$/;"	e	enum:spv::Op
OpImageQueryOrder	lib/vulkan/spirv.hpp	/^    OpImageQueryOrder = 102,$/;"	e	enum:spv::Op
OpImageQuerySamples	lib/vulkan/spirv.hpp	/^    OpImageQuerySamples = 107,$/;"	e	enum:spv::Op
OpImageQuerySize	lib/vulkan/spirv.hpp	/^    OpImageQuerySize = 104,$/;"	e	enum:spv::Op
OpImageQuerySizeLod	lib/vulkan/spirv.hpp	/^    OpImageQuerySizeLod = 103,$/;"	e	enum:spv::Op
OpImageRead	lib/vulkan/spirv.hpp	/^    OpImageRead = 98,$/;"	e	enum:spv::Op
OpImageSampleDrefExplicitLod	lib/vulkan/spirv.hpp	/^    OpImageSampleDrefExplicitLod = 90,$/;"	e	enum:spv::Op
OpImageSampleDrefImplicitLod	lib/vulkan/spirv.hpp	/^    OpImageSampleDrefImplicitLod = 89,$/;"	e	enum:spv::Op
OpImageSampleExplicitLod	lib/vulkan/spirv.hpp	/^    OpImageSampleExplicitLod = 88,$/;"	e	enum:spv::Op
OpImageSampleImplicitLod	lib/vulkan/spirv.hpp	/^    OpImageSampleImplicitLod = 87,$/;"	e	enum:spv::Op
OpImageSampleProjDrefExplicitLod	lib/vulkan/spirv.hpp	/^    OpImageSampleProjDrefExplicitLod = 94,$/;"	e	enum:spv::Op
OpImageSampleProjDrefImplicitLod	lib/vulkan/spirv.hpp	/^    OpImageSampleProjDrefImplicitLod = 93,$/;"	e	enum:spv::Op
OpImageSampleProjExplicitLod	lib/vulkan/spirv.hpp	/^    OpImageSampleProjExplicitLod = 92,$/;"	e	enum:spv::Op
OpImageSampleProjImplicitLod	lib/vulkan/spirv.hpp	/^    OpImageSampleProjImplicitLod = 91,$/;"	e	enum:spv::Op
OpImageSparseDrefGather	lib/vulkan/spirv.hpp	/^    OpImageSparseDrefGather = 315,$/;"	e	enum:spv::Op
OpImageSparseFetch	lib/vulkan/spirv.hpp	/^    OpImageSparseFetch = 313,$/;"	e	enum:spv::Op
OpImageSparseGather	lib/vulkan/spirv.hpp	/^    OpImageSparseGather = 314,$/;"	e	enum:spv::Op
OpImageSparseRead	lib/vulkan/spirv.hpp	/^    OpImageSparseRead = 320,$/;"	e	enum:spv::Op
OpImageSparseSampleDrefExplicitLod	lib/vulkan/spirv.hpp	/^    OpImageSparseSampleDrefExplicitLod = 308,$/;"	e	enum:spv::Op
OpImageSparseSampleDrefImplicitLod	lib/vulkan/spirv.hpp	/^    OpImageSparseSampleDrefImplicitLod = 307,$/;"	e	enum:spv::Op
OpImageSparseSampleExplicitLod	lib/vulkan/spirv.hpp	/^    OpImageSparseSampleExplicitLod = 306,$/;"	e	enum:spv::Op
OpImageSparseSampleImplicitLod	lib/vulkan/spirv.hpp	/^    OpImageSparseSampleImplicitLod = 305,$/;"	e	enum:spv::Op
OpImageSparseSampleProjDrefExplicitLod	lib/vulkan/spirv.hpp	/^    OpImageSparseSampleProjDrefExplicitLod = 312,$/;"	e	enum:spv::Op
OpImageSparseSampleProjDrefImplicitLod	lib/vulkan/spirv.hpp	/^    OpImageSparseSampleProjDrefImplicitLod = 311,$/;"	e	enum:spv::Op
OpImageSparseSampleProjExplicitLod	lib/vulkan/spirv.hpp	/^    OpImageSparseSampleProjExplicitLod = 310,$/;"	e	enum:spv::Op
OpImageSparseSampleProjImplicitLod	lib/vulkan/spirv.hpp	/^    OpImageSparseSampleProjImplicitLod = 309,$/;"	e	enum:spv::Op
OpImageSparseTexelsResident	lib/vulkan/spirv.hpp	/^    OpImageSparseTexelsResident = 316,$/;"	e	enum:spv::Op
OpImageTexelPointer	lib/vulkan/spirv.hpp	/^    OpImageTexelPointer = 60,$/;"	e	enum:spv::Op
OpImageWrite	lib/vulkan/spirv.hpp	/^    OpImageWrite = 99,$/;"	e	enum:spv::Op
OpInBoundsAccessChain	lib/vulkan/spirv.hpp	/^    OpInBoundsAccessChain = 66,$/;"	e	enum:spv::Op
OpInBoundsPtrAccessChain	lib/vulkan/spirv.hpp	/^    OpInBoundsPtrAccessChain = 70,$/;"	e	enum:spv::Op
OpIsFinite	lib/vulkan/spirv.hpp	/^    OpIsFinite = 158,$/;"	e	enum:spv::Op
OpIsInf	lib/vulkan/spirv.hpp	/^    OpIsInf = 157,$/;"	e	enum:spv::Op
OpIsNan	lib/vulkan/spirv.hpp	/^    OpIsNan = 156,$/;"	e	enum:spv::Op
OpIsNormal	lib/vulkan/spirv.hpp	/^    OpIsNormal = 159,$/;"	e	enum:spv::Op
OpIsValidEvent	lib/vulkan/spirv.hpp	/^    OpIsValidEvent = 300,$/;"	e	enum:spv::Op
OpIsValidReserveId	lib/vulkan/spirv.hpp	/^    OpIsValidReserveId = 282,$/;"	e	enum:spv::Op
OpKill	lib/vulkan/spirv.hpp	/^    OpKill = 252,$/;"	e	enum:spv::Op
OpLabel	lib/vulkan/spirv.hpp	/^    OpLabel = 248,$/;"	e	enum:spv::Op
OpLessOrGreater	lib/vulkan/spirv.hpp	/^    OpLessOrGreater = 161,$/;"	e	enum:spv::Op
OpLifetimeStart	lib/vulkan/spirv.hpp	/^    OpLifetimeStart = 256,$/;"	e	enum:spv::Op
OpLifetimeStop	lib/vulkan/spirv.hpp	/^    OpLifetimeStop = 257,$/;"	e	enum:spv::Op
OpLine	lib/vulkan/spirv.hpp	/^    OpLine = 8,$/;"	e	enum:spv::Op
OpLoad	lib/vulkan/spirv.hpp	/^    OpLoad = 61,$/;"	e	enum:spv::Op
OpLogicalAnd	lib/vulkan/spirv.hpp	/^    OpLogicalAnd = 167,$/;"	e	enum:spv::Op
OpLogicalEqual	lib/vulkan/spirv.hpp	/^    OpLogicalEqual = 164,$/;"	e	enum:spv::Op
OpLogicalNot	lib/vulkan/spirv.hpp	/^    OpLogicalNot = 168,$/;"	e	enum:spv::Op
OpLogicalNotEqual	lib/vulkan/spirv.hpp	/^    OpLogicalNotEqual = 165,$/;"	e	enum:spv::Op
OpLogicalOr	lib/vulkan/spirv.hpp	/^    OpLogicalOr = 166,$/;"	e	enum:spv::Op
OpLoopMerge	lib/vulkan/spirv.hpp	/^    OpLoopMerge = 246,$/;"	e	enum:spv::Op
OpMatrixTimesMatrix	lib/vulkan/spirv.hpp	/^    OpMatrixTimesMatrix = 146,$/;"	e	enum:spv::Op
OpMatrixTimesScalar	lib/vulkan/spirv.hpp	/^    OpMatrixTimesScalar = 143,$/;"	e	enum:spv::Op
OpMatrixTimesVector	lib/vulkan/spirv.hpp	/^    OpMatrixTimesVector = 145,$/;"	e	enum:spv::Op
OpMax	lib/vulkan/spirv.hpp	/^    OpMax = 0x7fffffff,$/;"	e	enum:spv::Op
OpMemberDecorate	lib/vulkan/spirv.hpp	/^    OpMemberDecorate = 72,$/;"	e	enum:spv::Op
OpMemberName	lib/vulkan/spirv.hpp	/^    OpMemberName = 6,$/;"	e	enum:spv::Op
OpMemoryBarrier	lib/vulkan/spirv.hpp	/^    OpMemoryBarrier = 225,$/;"	e	enum:spv::Op
OpMemoryModel	lib/vulkan/spirv.hpp	/^    OpMemoryModel = 14,$/;"	e	enum:spv::Op
OpMemoryNamedBarrier	lib/vulkan/spirv.hpp	/^    OpMemoryNamedBarrier = 329,$/;"	e	enum:spv::Op
OpModuleProcessed	lib/vulkan/spirv.hpp	/^    OpModuleProcessed = 330,$/;"	e	enum:spv::Op
OpName	lib/vulkan/spirv.hpp	/^    OpName = 5,$/;"	e	enum:spv::Op
OpNamedBarrierInitialize	lib/vulkan/spirv.hpp	/^    OpNamedBarrierInitialize = 328,$/;"	e	enum:spv::Op
OpNoLine	lib/vulkan/spirv.hpp	/^    OpNoLine = 317,$/;"	e	enum:spv::Op
OpNop	lib/vulkan/spirv.hpp	/^    OpNop = 0,$/;"	e	enum:spv::Op
OpNot	lib/vulkan/spirv.hpp	/^    OpNot = 200,$/;"	e	enum:spv::Op
OpOrdered	lib/vulkan/spirv.hpp	/^    OpOrdered = 162,$/;"	e	enum:spv::Op
OpOuterProduct	lib/vulkan/spirv.hpp	/^    OpOuterProduct = 147,$/;"	e	enum:spv::Op
OpPhi	lib/vulkan/spirv.hpp	/^    OpPhi = 245,$/;"	e	enum:spv::Op
OpPtrAccessChain	lib/vulkan/spirv.hpp	/^    OpPtrAccessChain = 67,$/;"	e	enum:spv::Op
OpPtrCastToGeneric	lib/vulkan/spirv.hpp	/^    OpPtrCastToGeneric = 121,$/;"	e	enum:spv::Op
OpQuantizeToF16	lib/vulkan/spirv.hpp	/^    OpQuantizeToF16 = 116,$/;"	e	enum:spv::Op
OpReadPipe	lib/vulkan/spirv.hpp	/^    OpReadPipe = 274,$/;"	e	enum:spv::Op
OpReleaseEvent	lib/vulkan/spirv.hpp	/^    OpReleaseEvent = 298,$/;"	e	enum:spv::Op
OpReserveReadPipePackets	lib/vulkan/spirv.hpp	/^    OpReserveReadPipePackets = 278,$/;"	e	enum:spv::Op
OpReserveWritePipePackets	lib/vulkan/spirv.hpp	/^    OpReserveWritePipePackets = 279,$/;"	e	enum:spv::Op
OpReservedReadPipe	lib/vulkan/spirv.hpp	/^    OpReservedReadPipe = 276,$/;"	e	enum:spv::Op
OpReservedWritePipe	lib/vulkan/spirv.hpp	/^    OpReservedWritePipe = 277,$/;"	e	enum:spv::Op
OpRetainEvent	lib/vulkan/spirv.hpp	/^    OpRetainEvent = 297,$/;"	e	enum:spv::Op
OpReturn	lib/vulkan/spirv.hpp	/^    OpReturn = 253,$/;"	e	enum:spv::Op
OpReturnValue	lib/vulkan/spirv.hpp	/^    OpReturnValue = 254,$/;"	e	enum:spv::Op
OpSConvert	lib/vulkan/spirv.hpp	/^    OpSConvert = 114,$/;"	e	enum:spv::Op
OpSDiv	lib/vulkan/spirv.hpp	/^    OpSDiv = 135,$/;"	e	enum:spv::Op
OpSGreaterThan	lib/vulkan/spirv.hpp	/^    OpSGreaterThan = 173,$/;"	e	enum:spv::Op
OpSGreaterThanEqual	lib/vulkan/spirv.hpp	/^    OpSGreaterThanEqual = 175,$/;"	e	enum:spv::Op
OpSLessThan	lib/vulkan/spirv.hpp	/^    OpSLessThan = 177,$/;"	e	enum:spv::Op
OpSLessThanEqual	lib/vulkan/spirv.hpp	/^    OpSLessThanEqual = 179,$/;"	e	enum:spv::Op
OpSMod	lib/vulkan/spirv.hpp	/^    OpSMod = 139,$/;"	e	enum:spv::Op
OpSMulExtended	lib/vulkan/spirv.hpp	/^    OpSMulExtended = 152,$/;"	e	enum:spv::Op
OpSNegate	lib/vulkan/spirv.hpp	/^    OpSNegate = 126,$/;"	e	enum:spv::Op
OpSRem	lib/vulkan/spirv.hpp	/^    OpSRem = 138,$/;"	e	enum:spv::Op
OpSampledImage	lib/vulkan/spirv.hpp	/^    OpSampledImage = 86,$/;"	e	enum:spv::Op
OpSatConvertSToU	lib/vulkan/spirv.hpp	/^    OpSatConvertSToU = 118,$/;"	e	enum:spv::Op
OpSatConvertUToS	lib/vulkan/spirv.hpp	/^    OpSatConvertUToS = 119,$/;"	e	enum:spv::Op
OpSelect	lib/vulkan/spirv.hpp	/^    OpSelect = 169,$/;"	e	enum:spv::Op
OpSelectionMerge	lib/vulkan/spirv.hpp	/^    OpSelectionMerge = 247,$/;"	e	enum:spv::Op
OpSetUserEventStatus	lib/vulkan/spirv.hpp	/^    OpSetUserEventStatus = 301,$/;"	e	enum:spv::Op
OpShiftLeftLogical	lib/vulkan/spirv.hpp	/^    OpShiftLeftLogical = 196,$/;"	e	enum:spv::Op
OpShiftRightArithmetic	lib/vulkan/spirv.hpp	/^    OpShiftRightArithmetic = 195,$/;"	e	enum:spv::Op
OpShiftRightLogical	lib/vulkan/spirv.hpp	/^    OpShiftRightLogical = 194,$/;"	e	enum:spv::Op
OpSignBitSet	lib/vulkan/spirv.hpp	/^    OpSignBitSet = 160,$/;"	e	enum:spv::Op
OpSizeOf	lib/vulkan/spirv.hpp	/^    OpSizeOf = 321,$/;"	e	enum:spv::Op
OpSource	lib/vulkan/spirv.hpp	/^    OpSource = 3,$/;"	e	enum:spv::Op
OpSourceContinued	lib/vulkan/spirv.hpp	/^    OpSourceContinued = 2,$/;"	e	enum:spv::Op
OpSourceExtension	lib/vulkan/spirv.hpp	/^    OpSourceExtension = 4,$/;"	e	enum:spv::Op
OpSpecConstant	lib/vulkan/spirv.hpp	/^    OpSpecConstant = 50,$/;"	e	enum:spv::Op
OpSpecConstantComposite	lib/vulkan/spirv.hpp	/^    OpSpecConstantComposite = 51,$/;"	e	enum:spv::Op
OpSpecConstantFalse	lib/vulkan/spirv.hpp	/^    OpSpecConstantFalse = 49,$/;"	e	enum:spv::Op
OpSpecConstantOp	lib/vulkan/spirv.hpp	/^    OpSpecConstantOp = 52,$/;"	e	enum:spv::Op
OpSpecConstantTrue	lib/vulkan/spirv.hpp	/^    OpSpecConstantTrue = 48,$/;"	e	enum:spv::Op
OpStore	lib/vulkan/spirv.hpp	/^    OpStore = 62,$/;"	e	enum:spv::Op
OpString	lib/vulkan/spirv.hpp	/^    OpString = 7,$/;"	e	enum:spv::Op
OpSwitch	lib/vulkan/spirv.hpp	/^    OpSwitch = 251,$/;"	e	enum:spv::Op
OpTranspose	lib/vulkan/spirv.hpp	/^    OpTranspose = 84,$/;"	e	enum:spv::Op
OpTypeArray	lib/vulkan/spirv.hpp	/^    OpTypeArray = 28,$/;"	e	enum:spv::Op
OpTypeBool	lib/vulkan/spirv.hpp	/^    OpTypeBool = 20,$/;"	e	enum:spv::Op
OpTypeDeviceEvent	lib/vulkan/spirv.hpp	/^    OpTypeDeviceEvent = 35,$/;"	e	enum:spv::Op
OpTypeEvent	lib/vulkan/spirv.hpp	/^    OpTypeEvent = 34,$/;"	e	enum:spv::Op
OpTypeFloat	lib/vulkan/spirv.hpp	/^    OpTypeFloat = 22,$/;"	e	enum:spv::Op
OpTypeForwardPointer	lib/vulkan/spirv.hpp	/^    OpTypeForwardPointer = 39,$/;"	e	enum:spv::Op
OpTypeFunction	lib/vulkan/spirv.hpp	/^    OpTypeFunction = 33,$/;"	e	enum:spv::Op
OpTypeImage	lib/vulkan/spirv.hpp	/^    OpTypeImage = 25,$/;"	e	enum:spv::Op
OpTypeInt	lib/vulkan/spirv.hpp	/^    OpTypeInt = 21,$/;"	e	enum:spv::Op
OpTypeMatrix	lib/vulkan/spirv.hpp	/^    OpTypeMatrix = 24,$/;"	e	enum:spv::Op
OpTypeNamedBarrier	lib/vulkan/spirv.hpp	/^    OpTypeNamedBarrier = 327,$/;"	e	enum:spv::Op
OpTypeOpaque	lib/vulkan/spirv.hpp	/^    OpTypeOpaque = 31,$/;"	e	enum:spv::Op
OpTypePipe	lib/vulkan/spirv.hpp	/^    OpTypePipe = 38,$/;"	e	enum:spv::Op
OpTypePipeStorage	lib/vulkan/spirv.hpp	/^    OpTypePipeStorage = 322,$/;"	e	enum:spv::Op
OpTypePointer	lib/vulkan/spirv.hpp	/^    OpTypePointer = 32,$/;"	e	enum:spv::Op
OpTypeQueue	lib/vulkan/spirv.hpp	/^    OpTypeQueue = 37,$/;"	e	enum:spv::Op
OpTypeReserveId	lib/vulkan/spirv.hpp	/^    OpTypeReserveId = 36,$/;"	e	enum:spv::Op
OpTypeRuntimeArray	lib/vulkan/spirv.hpp	/^    OpTypeRuntimeArray = 29,$/;"	e	enum:spv::Op
OpTypeSampledImage	lib/vulkan/spirv.hpp	/^    OpTypeSampledImage = 27,$/;"	e	enum:spv::Op
OpTypeSampler	lib/vulkan/spirv.hpp	/^    OpTypeSampler = 26,$/;"	e	enum:spv::Op
OpTypeStruct	lib/vulkan/spirv.hpp	/^    OpTypeStruct = 30,$/;"	e	enum:spv::Op
OpTypeVector	lib/vulkan/spirv.hpp	/^    OpTypeVector = 23,$/;"	e	enum:spv::Op
OpTypeVoid	lib/vulkan/spirv.hpp	/^    OpTypeVoid = 19,$/;"	e	enum:spv::Op
OpUConvert	lib/vulkan/spirv.hpp	/^    OpUConvert = 113,$/;"	e	enum:spv::Op
OpUDiv	lib/vulkan/spirv.hpp	/^    OpUDiv = 134,$/;"	e	enum:spv::Op
OpUGreaterThan	lib/vulkan/spirv.hpp	/^    OpUGreaterThan = 172,$/;"	e	enum:spv::Op
OpUGreaterThanEqual	lib/vulkan/spirv.hpp	/^    OpUGreaterThanEqual = 174,$/;"	e	enum:spv::Op
OpULessThan	lib/vulkan/spirv.hpp	/^    OpULessThan = 176,$/;"	e	enum:spv::Op
OpULessThanEqual	lib/vulkan/spirv.hpp	/^    OpULessThanEqual = 178,$/;"	e	enum:spv::Op
OpUMod	lib/vulkan/spirv.hpp	/^    OpUMod = 137,$/;"	e	enum:spv::Op
OpUMulExtended	lib/vulkan/spirv.hpp	/^    OpUMulExtended = 151,$/;"	e	enum:spv::Op
OpUndef	lib/vulkan/spirv.hpp	/^    OpUndef = 1,$/;"	e	enum:spv::Op
OpUnordered	lib/vulkan/spirv.hpp	/^    OpUnordered = 163,$/;"	e	enum:spv::Op
OpUnreachable	lib/vulkan/spirv.hpp	/^    OpUnreachable = 255,$/;"	e	enum:spv::Op
OpVariable	lib/vulkan/spirv.hpp	/^    OpVariable = 59,$/;"	e	enum:spv::Op
OpVectorExtractDynamic	lib/vulkan/spirv.hpp	/^    OpVectorExtractDynamic = 77,$/;"	e	enum:spv::Op
OpVectorInsertDynamic	lib/vulkan/spirv.hpp	/^    OpVectorInsertDynamic = 78,$/;"	e	enum:spv::Op
OpVectorShuffle	lib/vulkan/spirv.hpp	/^    OpVectorShuffle = 79,$/;"	e	enum:spv::Op
OpVectorTimesMatrix	lib/vulkan/spirv.hpp	/^    OpVectorTimesMatrix = 144,$/;"	e	enum:spv::Op
OpVectorTimesScalar	lib/vulkan/spirv.hpp	/^    OpVectorTimesScalar = 142,$/;"	e	enum:spv::Op
OpWritePipe	lib/vulkan/spirv.hpp	/^    OpWritePipe = 275,$/;"	e	enum:spv::Op
PFN_vkAcquireNextImageKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkAcquireNextImageKHR)(VkDevice device, VkSwapchainKHR swapchain, uint64_t timeout, VkSemaphore semaphore, VkFence fence, uint32_t* pImageIndex);$/;"	t
PFN_vkAllocateCommandBuffers	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkAllocateCommandBuffers)(VkDevice device, const VkCommandBufferAllocateInfo* pAllocateInfo, VkCommandBuffer* pCommandBuffers);$/;"	t
PFN_vkAllocateDescriptorSets	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkAllocateDescriptorSets)(VkDevice device, const VkDescriptorSetAllocateInfo* pAllocateInfo, VkDescriptorSet* pDescriptorSets);$/;"	t
PFN_vkAllocateMemory	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkAllocateMemory)(VkDevice device, const VkMemoryAllocateInfo* pAllocateInfo, const VkAllocationCallbacks* pAllocator, VkDeviceMemory* pMemory);$/;"	t
PFN_vkAllocationFunction	lib/vulkan/vulkan.h	/^typedef void* (VKAPI_PTR *PFN_vkAllocationFunction)($/;"	t
PFN_vkBeginCommandBuffer	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkBeginCommandBuffer)(VkCommandBuffer commandBuffer, const VkCommandBufferBeginInfo* pBeginInfo);$/;"	t
PFN_vkBindBufferMemory	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkBindBufferMemory)(VkDevice device, VkBuffer buffer, VkDeviceMemory memory, VkDeviceSize memoryOffset);$/;"	t
PFN_vkBindImageMemory	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkBindImageMemory)(VkDevice device, VkImage image, VkDeviceMemory memory, VkDeviceSize memoryOffset);$/;"	t
PFN_vkCmdBeginQuery	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdBeginQuery)(VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t query, VkQueryControlFlags flags);$/;"	t
PFN_vkCmdBeginRenderPass	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdBeginRenderPass)(VkCommandBuffer commandBuffer, const VkRenderPassBeginInfo* pRenderPassBegin, VkSubpassContents contents);$/;"	t
PFN_vkCmdBindDescriptorSets	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdBindDescriptorSets)(VkCommandBuffer commandBuffer, VkPipelineBindPoint pipelineBindPoint, VkPipelineLayout layout, uint32_t firstSet, uint32_t descriptorSetCount, const VkDescriptorSet* pDescriptorSets, uint32_t dynamicOffsetCount, const uint32_t* pDynamicOffsets);$/;"	t
PFN_vkCmdBindIndexBuffer	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdBindIndexBuffer)(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, VkIndexType indexType);$/;"	t
PFN_vkCmdBindPipeline	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdBindPipeline)(VkCommandBuffer commandBuffer, VkPipelineBindPoint pipelineBindPoint, VkPipeline pipeline);$/;"	t
PFN_vkCmdBindVertexBuffers	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdBindVertexBuffers)(VkCommandBuffer commandBuffer, uint32_t firstBinding, uint32_t bindingCount, const VkBuffer* pBuffers, const VkDeviceSize* pOffsets);$/;"	t
PFN_vkCmdBlitImage	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdBlitImage)(VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkImage dstImage, VkImageLayout dstImageLayout, uint32_t regionCount, const VkImageBlit* pRegions, VkFilter filter);$/;"	t
PFN_vkCmdClearAttachments	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdClearAttachments)(VkCommandBuffer commandBuffer, uint32_t attachmentCount, const VkClearAttachment* pAttachments, uint32_t rectCount, const VkClearRect* pRects);$/;"	t
PFN_vkCmdClearColorImage	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdClearColorImage)(VkCommandBuffer commandBuffer, VkImage image, VkImageLayout imageLayout, const VkClearColorValue* pColor, uint32_t rangeCount, const VkImageSubresourceRange* pRanges);$/;"	t
PFN_vkCmdClearDepthStencilImage	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdClearDepthStencilImage)(VkCommandBuffer commandBuffer, VkImage image, VkImageLayout imageLayout, const VkClearDepthStencilValue* pDepthStencil, uint32_t rangeCount, const VkImageSubresourceRange* pRanges);$/;"	t
PFN_vkCmdCopyBuffer	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdCopyBuffer)(VkCommandBuffer commandBuffer, VkBuffer srcBuffer, VkBuffer dstBuffer, uint32_t regionCount, const VkBufferCopy* pRegions);$/;"	t
PFN_vkCmdCopyBufferToImage	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdCopyBufferToImage)(VkCommandBuffer commandBuffer, VkBuffer srcBuffer, VkImage dstImage, VkImageLayout dstImageLayout, uint32_t regionCount, const VkBufferImageCopy* pRegions);$/;"	t
PFN_vkCmdCopyImage	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdCopyImage)(VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkImage dstImage, VkImageLayout dstImageLayout, uint32_t regionCount, const VkImageCopy* pRegions);$/;"	t
PFN_vkCmdCopyImageToBuffer	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdCopyImageToBuffer)(VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkBuffer dstBuffer, uint32_t regionCount, const VkBufferImageCopy* pRegions);$/;"	t
PFN_vkCmdCopyQueryPoolResults	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdCopyQueryPoolResults)(VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t firstQuery, uint32_t queryCount, VkBuffer dstBuffer, VkDeviceSize dstOffset, VkDeviceSize stride, VkQueryResultFlags flags);$/;"	t
PFN_vkCmdDebugMarkerBeginEXT	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDebugMarkerBeginEXT)(VkCommandBuffer commandBuffer, VkDebugMarkerMarkerInfoEXT* pMarkerInfo);$/;"	t
PFN_vkCmdDebugMarkerEndEXT	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDebugMarkerEndEXT)(VkCommandBuffer commandBuffer);$/;"	t
PFN_vkCmdDebugMarkerInsertEXT	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDebugMarkerInsertEXT)(VkCommandBuffer commandBuffer, VkDebugMarkerMarkerInfoEXT* pMarkerInfo);$/;"	t
PFN_vkCmdDispatch	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDispatch)(VkCommandBuffer commandBuffer, uint32_t x, uint32_t y, uint32_t z);$/;"	t
PFN_vkCmdDispatchIndirect	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDispatchIndirect)(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset);$/;"	t
PFN_vkCmdDraw	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDraw)(VkCommandBuffer commandBuffer, uint32_t vertexCount, uint32_t instanceCount, uint32_t firstVertex, uint32_t firstInstance);$/;"	t
PFN_vkCmdDrawIndexed	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDrawIndexed)(VkCommandBuffer commandBuffer, uint32_t indexCount, uint32_t instanceCount, uint32_t firstIndex, int32_t vertexOffset, uint32_t firstInstance);$/;"	t
PFN_vkCmdDrawIndexedIndirect	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDrawIndexedIndirect)(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, uint32_t drawCount, uint32_t stride);$/;"	t
PFN_vkCmdDrawIndirect	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdDrawIndirect)(VkCommandBuffer commandBuffer, VkBuffer buffer, VkDeviceSize offset, uint32_t drawCount, uint32_t stride);$/;"	t
PFN_vkCmdEndQuery	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdEndQuery)(VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t query);$/;"	t
PFN_vkCmdEndRenderPass	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdEndRenderPass)(VkCommandBuffer commandBuffer);$/;"	t
PFN_vkCmdExecuteCommands	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdExecuteCommands)(VkCommandBuffer commandBuffer, uint32_t commandBufferCount, const VkCommandBuffer* pCommandBuffers);$/;"	t
PFN_vkCmdFillBuffer	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdFillBuffer)(VkCommandBuffer commandBuffer, VkBuffer dstBuffer, VkDeviceSize dstOffset, VkDeviceSize size, uint32_t data);$/;"	t
PFN_vkCmdNextSubpass	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdNextSubpass)(VkCommandBuffer commandBuffer, VkSubpassContents contents);$/;"	t
PFN_vkCmdPipelineBarrier	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdPipelineBarrier)(VkCommandBuffer commandBuffer, VkPipelineStageFlags srcStageMask, VkPipelineStageFlags dstStageMask, VkDependencyFlags dependencyFlags, uint32_t memoryBarrierCount, const VkMemoryBarrier* pMemoryBarriers, uint32_t bufferMemoryBarrierCount, const VkBufferMemoryBarrier* pBufferMemoryBarriers, uint32_t imageMemoryBarrierCount, const VkImageMemoryBarrier* pImageMemoryBarriers);$/;"	t
PFN_vkCmdPushConstants	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdPushConstants)(VkCommandBuffer commandBuffer, VkPipelineLayout layout, VkShaderStageFlags stageFlags, uint32_t offset, uint32_t size, const void* pValues);$/;"	t
PFN_vkCmdResetEvent	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdResetEvent)(VkCommandBuffer commandBuffer, VkEvent event, VkPipelineStageFlags stageMask);$/;"	t
PFN_vkCmdResetQueryPool	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdResetQueryPool)(VkCommandBuffer commandBuffer, VkQueryPool queryPool, uint32_t firstQuery, uint32_t queryCount);$/;"	t
PFN_vkCmdResolveImage	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdResolveImage)(VkCommandBuffer commandBuffer, VkImage srcImage, VkImageLayout srcImageLayout, VkImage dstImage, VkImageLayout dstImageLayout, uint32_t regionCount, const VkImageResolve* pRegions);$/;"	t
PFN_vkCmdSetBlendConstants	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetBlendConstants)(VkCommandBuffer commandBuffer, const float blendConstants[4]);$/;"	t
PFN_vkCmdSetDepthBias	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetDepthBias)(VkCommandBuffer commandBuffer, float depthBiasConstantFactor, float depthBiasClamp, float depthBiasSlopeFactor);$/;"	t
PFN_vkCmdSetDepthBounds	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetDepthBounds)(VkCommandBuffer commandBuffer, float minDepthBounds, float maxDepthBounds);$/;"	t
PFN_vkCmdSetEvent	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetEvent)(VkCommandBuffer commandBuffer, VkEvent event, VkPipelineStageFlags stageMask);$/;"	t
PFN_vkCmdSetLineWidth	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetLineWidth)(VkCommandBuffer commandBuffer, float lineWidth);$/;"	t
PFN_vkCmdSetScissor	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetScissor)(VkCommandBuffer commandBuffer, uint32_t firstScissor, uint32_t scissorCount, const VkRect2D* pScissors);$/;"	t
PFN_vkCmdSetStencilCompareMask	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetStencilCompareMask)(VkCommandBuffer commandBuffer, VkStencilFaceFlags faceMask, uint32_t compareMask);$/;"	t
PFN_vkCmdSetStencilReference	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetStencilReference)(VkCommandBuffer commandBuffer, VkStencilFaceFlags faceMask, uint32_t reference);$/;"	t
PFN_vkCmdSetStencilWriteMask	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetStencilWriteMask)(VkCommandBuffer commandBuffer, VkStencilFaceFlags faceMask, uint32_t writeMask);$/;"	t
PFN_vkCmdSetViewport	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdSetViewport)(VkCommandBuffer commandBuffer, uint32_t firstViewport, uint32_t viewportCount, const VkViewport* pViewports);$/;"	t
PFN_vkCmdUpdateBuffer	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdUpdateBuffer)(VkCommandBuffer commandBuffer, VkBuffer dstBuffer, VkDeviceSize dstOffset, VkDeviceSize dataSize, const void* pData);$/;"	t
PFN_vkCmdWaitEvents	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdWaitEvents)(VkCommandBuffer commandBuffer, uint32_t eventCount, const VkEvent* pEvents, VkPipelineStageFlags srcStageMask, VkPipelineStageFlags dstStageMask, uint32_t memoryBarrierCount, const VkMemoryBarrier* pMemoryBarriers, uint32_t bufferMemoryBarrierCount, const VkBufferMemoryBarrier* pBufferMemoryBarriers, uint32_t imageMemoryBarrierCount, const VkImageMemoryBarrier* pImageMemoryBarriers);$/;"	t
PFN_vkCmdWriteTimestamp	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkCmdWriteTimestamp)(VkCommandBuffer commandBuffer, VkPipelineStageFlagBits pipelineStage, VkQueryPool queryPool, uint32_t query);$/;"	t
PFN_vkCreateAndroidSurfaceKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateAndroidSurfaceKHR)(VkInstance instance, const VkAndroidSurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface);$/;"	t
PFN_vkCreateBuffer	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateBuffer)(VkDevice device, const VkBufferCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkBuffer* pBuffer);$/;"	t
PFN_vkCreateBufferView	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateBufferView)(VkDevice device, const VkBufferViewCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkBufferView* pView);$/;"	t
PFN_vkCreateCommandPool	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateCommandPool)(VkDevice device, const VkCommandPoolCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkCommandPool* pCommandPool);$/;"	t
PFN_vkCreateComputePipelines	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateComputePipelines)(VkDevice device, VkPipelineCache pipelineCache, uint32_t createInfoCount, const VkComputePipelineCreateInfo* pCreateInfos, const VkAllocationCallbacks* pAllocator, VkPipeline* pPipelines);$/;"	t
PFN_vkCreateDebugReportCallbackEXT	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateDebugReportCallbackEXT)(VkInstance instance, const VkDebugReportCallbackCreateInfoEXT* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkDebugReportCallbackEXT* pCallback);$/;"	t
PFN_vkCreateDescriptorPool	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateDescriptorPool)(VkDevice device, const VkDescriptorPoolCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkDescriptorPool* pDescriptorPool);$/;"	t
PFN_vkCreateDescriptorSetLayout	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateDescriptorSetLayout)(VkDevice device, const VkDescriptorSetLayoutCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkDescriptorSetLayout* pSetLayout);$/;"	t
PFN_vkCreateDevice	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateDevice)(VkPhysicalDevice physicalDevice, const VkDeviceCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkDevice* pDevice);$/;"	t
PFN_vkCreateDisplayModeKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateDisplayModeKHR)(VkPhysicalDevice physicalDevice, VkDisplayKHR display, const VkDisplayModeCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkDisplayModeKHR* pMode);$/;"	t
PFN_vkCreateDisplayPlaneSurfaceKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateDisplayPlaneSurfaceKHR)(VkInstance instance, const VkDisplaySurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface);$/;"	t
PFN_vkCreateEvent	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateEvent)(VkDevice device, const VkEventCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkEvent* pEvent);$/;"	t
PFN_vkCreateFence	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateFence)(VkDevice device, const VkFenceCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkFence* pFence);$/;"	t
PFN_vkCreateFramebuffer	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateFramebuffer)(VkDevice device, const VkFramebufferCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkFramebuffer* pFramebuffer);$/;"	t
PFN_vkCreateGraphicsPipelines	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateGraphicsPipelines)(VkDevice device, VkPipelineCache pipelineCache, uint32_t createInfoCount, const VkGraphicsPipelineCreateInfo* pCreateInfos, const VkAllocationCallbacks* pAllocator, VkPipeline* pPipelines);$/;"	t
PFN_vkCreateImage	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateImage)(VkDevice device, const VkImageCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkImage* pImage);$/;"	t
PFN_vkCreateImageView	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateImageView)(VkDevice device, const VkImageViewCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkImageView* pView);$/;"	t
PFN_vkCreateInstance	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateInstance)(const VkInstanceCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkInstance* pInstance);$/;"	t
PFN_vkCreateMirSurfaceKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateMirSurfaceKHR)(VkInstance instance, const VkMirSurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface);$/;"	t
PFN_vkCreatePipelineCache	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreatePipelineCache)(VkDevice device, const VkPipelineCacheCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkPipelineCache* pPipelineCache);$/;"	t
PFN_vkCreatePipelineLayout	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreatePipelineLayout)(VkDevice device, const VkPipelineLayoutCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkPipelineLayout* pPipelineLayout);$/;"	t
PFN_vkCreateQueryPool	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateQueryPool)(VkDevice device, const VkQueryPoolCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkQueryPool* pQueryPool);$/;"	t
PFN_vkCreateRenderPass	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateRenderPass)(VkDevice device, const VkRenderPassCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkRenderPass* pRenderPass);$/;"	t
PFN_vkCreateSampler	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateSampler)(VkDevice device, const VkSamplerCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSampler* pSampler);$/;"	t
PFN_vkCreateSemaphore	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateSemaphore)(VkDevice device, const VkSemaphoreCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSemaphore* pSemaphore);$/;"	t
PFN_vkCreateShaderModule	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateShaderModule)(VkDevice device, const VkShaderModuleCreateInfo* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkShaderModule* pShaderModule);$/;"	t
PFN_vkCreateSharedSwapchainsKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateSharedSwapchainsKHR)(VkDevice device, uint32_t swapchainCount, const VkSwapchainCreateInfoKHR* pCreateInfos, const VkAllocationCallbacks* pAllocator, VkSwapchainKHR* pSwapchains);$/;"	t
PFN_vkCreateSwapchainKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateSwapchainKHR)(VkDevice device, const VkSwapchainCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSwapchainKHR* pSwapchain);$/;"	t
PFN_vkCreateWaylandSurfaceKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateWaylandSurfaceKHR)(VkInstance instance, const VkWaylandSurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface);$/;"	t
PFN_vkCreateWin32SurfaceKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateWin32SurfaceKHR)(VkInstance instance, const VkWin32SurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface);$/;"	t
PFN_vkCreateXcbSurfaceKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateXcbSurfaceKHR)(VkInstance instance, const VkXcbSurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface);$/;"	t
PFN_vkCreateXlibSurfaceKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkCreateXlibSurfaceKHR)(VkInstance instance, const VkXlibSurfaceCreateInfoKHR* pCreateInfo, const VkAllocationCallbacks* pAllocator, VkSurfaceKHR* pSurface);$/;"	t
PFN_vkDebugMarkerSetObjectNameEXT	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkDebugMarkerSetObjectNameEXT)(VkDevice device, VkDebugMarkerObjectNameInfoEXT* pNameInfo);$/;"	t
PFN_vkDebugMarkerSetObjectTagEXT	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkDebugMarkerSetObjectTagEXT)(VkDevice device, VkDebugMarkerObjectTagInfoEXT* pTagInfo);$/;"	t
PFN_vkDebugReportCallbackEXT	lib/vulkan/vulkan.h	/^typedef VkBool32 (VKAPI_PTR *PFN_vkDebugReportCallbackEXT)($/;"	t
PFN_vkDebugReportMessageEXT	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDebugReportMessageEXT)(VkInstance instance, VkDebugReportFlagsEXT flags, VkDebugReportObjectTypeEXT objectType, uint64_t object, size_t location, int32_t messageCode, const char* pLayerPrefix, const char* pMessage);$/;"	t
PFN_vkDestroyBuffer	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyBuffer)(VkDevice device, VkBuffer buffer, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyBufferView	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyBufferView)(VkDevice device, VkBufferView bufferView, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyCommandPool	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyCommandPool)(VkDevice device, VkCommandPool commandPool, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyDebugReportCallbackEXT	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyDebugReportCallbackEXT)(VkInstance instance, VkDebugReportCallbackEXT callback, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyDescriptorPool	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyDescriptorPool)(VkDevice device, VkDescriptorPool descriptorPool, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyDescriptorSetLayout	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyDescriptorSetLayout)(VkDevice device, VkDescriptorSetLayout descriptorSetLayout, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyDevice	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyDevice)(VkDevice device, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyEvent	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyEvent)(VkDevice device, VkEvent event, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyFence	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyFence)(VkDevice device, VkFence fence, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyFramebuffer	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyFramebuffer)(VkDevice device, VkFramebuffer framebuffer, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyImage	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyImage)(VkDevice device, VkImage image, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyImageView	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyImageView)(VkDevice device, VkImageView imageView, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyInstance	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyInstance)(VkInstance instance, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyPipeline	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyPipeline)(VkDevice device, VkPipeline pipeline, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyPipelineCache	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyPipelineCache)(VkDevice device, VkPipelineCache pipelineCache, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyPipelineLayout	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyPipelineLayout)(VkDevice device, VkPipelineLayout pipelineLayout, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyQueryPool	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyQueryPool)(VkDevice device, VkQueryPool queryPool, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyRenderPass	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyRenderPass)(VkDevice device, VkRenderPass renderPass, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroySampler	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroySampler)(VkDevice device, VkSampler sampler, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroySemaphore	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroySemaphore)(VkDevice device, VkSemaphore semaphore, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroyShaderModule	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroyShaderModule)(VkDevice device, VkShaderModule shaderModule, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroySurfaceKHR	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroySurfaceKHR)(VkInstance instance, VkSurfaceKHR surface, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDestroySwapchainKHR	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkDestroySwapchainKHR)(VkDevice device, VkSwapchainKHR swapchain, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkDeviceWaitIdle	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkDeviceWaitIdle)(VkDevice device);$/;"	t
PFN_vkEndCommandBuffer	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkEndCommandBuffer)(VkCommandBuffer commandBuffer);$/;"	t
PFN_vkEnumerateDeviceExtensionProperties	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkEnumerateDeviceExtensionProperties)(VkPhysicalDevice physicalDevice, const char* pLayerName, uint32_t* pPropertyCount, VkExtensionProperties* pProperties);$/;"	t
PFN_vkEnumerateDeviceLayerProperties	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkEnumerateDeviceLayerProperties)(VkPhysicalDevice physicalDevice, uint32_t* pPropertyCount, VkLayerProperties* pProperties);$/;"	t
PFN_vkEnumerateInstanceExtensionProperties	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkEnumerateInstanceExtensionProperties)(const char* pLayerName, uint32_t* pPropertyCount, VkExtensionProperties* pProperties);$/;"	t
PFN_vkEnumerateInstanceLayerProperties	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkEnumerateInstanceLayerProperties)(uint32_t* pPropertyCount, VkLayerProperties* pProperties);$/;"	t
PFN_vkEnumeratePhysicalDevices	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkEnumeratePhysicalDevices)(VkInstance instance, uint32_t* pPhysicalDeviceCount, VkPhysicalDevice* pPhysicalDevices);$/;"	t
PFN_vkFlushMappedMemoryRanges	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkFlushMappedMemoryRanges)(VkDevice device, uint32_t memoryRangeCount, const VkMappedMemoryRange* pMemoryRanges);$/;"	t
PFN_vkFreeCommandBuffers	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkFreeCommandBuffers)(VkDevice device, VkCommandPool commandPool, uint32_t commandBufferCount, const VkCommandBuffer* pCommandBuffers);$/;"	t
PFN_vkFreeDescriptorSets	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkFreeDescriptorSets)(VkDevice device, VkDescriptorPool descriptorPool, uint32_t descriptorSetCount, const VkDescriptorSet* pDescriptorSets);$/;"	t
PFN_vkFreeFunction	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkFreeFunction)($/;"	t
PFN_vkFreeMemory	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkFreeMemory)(VkDevice device, VkDeviceMemory memory, const VkAllocationCallbacks* pAllocator);$/;"	t
PFN_vkGetBufferMemoryRequirements	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetBufferMemoryRequirements)(VkDevice device, VkBuffer buffer, VkMemoryRequirements* pMemoryRequirements);$/;"	t
PFN_vkGetDeviceMemoryCommitment	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetDeviceMemoryCommitment)(VkDevice device, VkDeviceMemory memory, VkDeviceSize* pCommittedMemoryInBytes);$/;"	t
PFN_vkGetDeviceProcAddr	lib/vulkan/vulkan.h	/^typedef PFN_vkVoidFunction (VKAPI_PTR *PFN_vkGetDeviceProcAddr)(VkDevice device, const char* pName);$/;"	t
PFN_vkGetDeviceQueue	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetDeviceQueue)(VkDevice device, uint32_t queueFamilyIndex, uint32_t queueIndex, VkQueue* pQueue);$/;"	t
PFN_vkGetDisplayModePropertiesKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetDisplayModePropertiesKHR)(VkPhysicalDevice physicalDevice, VkDisplayKHR display, uint32_t* pPropertyCount, VkDisplayModePropertiesKHR* pProperties);$/;"	t
PFN_vkGetDisplayPlaneCapabilitiesKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetDisplayPlaneCapabilitiesKHR)(VkPhysicalDevice physicalDevice, VkDisplayModeKHR mode, uint32_t planeIndex, VkDisplayPlaneCapabilitiesKHR* pCapabilities);$/;"	t
PFN_vkGetDisplayPlaneSupportedDisplaysKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetDisplayPlaneSupportedDisplaysKHR)(VkPhysicalDevice physicalDevice, uint32_t planeIndex, uint32_t* pDisplayCount, VkDisplayKHR* pDisplays);$/;"	t
PFN_vkGetEventStatus	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetEventStatus)(VkDevice device, VkEvent event);$/;"	t
PFN_vkGetFenceStatus	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetFenceStatus)(VkDevice device, VkFence fence);$/;"	t
PFN_vkGetImageMemoryRequirements	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetImageMemoryRequirements)(VkDevice device, VkImage image, VkMemoryRequirements* pMemoryRequirements);$/;"	t
PFN_vkGetImageSparseMemoryRequirements	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetImageSparseMemoryRequirements)(VkDevice device, VkImage image, uint32_t* pSparseMemoryRequirementCount, VkSparseImageMemoryRequirements* pSparseMemoryRequirements);$/;"	t
PFN_vkGetImageSubresourceLayout	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetImageSubresourceLayout)(VkDevice device, VkImage image, const VkImageSubresource* pSubresource, VkSubresourceLayout* pLayout);$/;"	t
PFN_vkGetInstanceProcAddr	lib/vulkan/vulkan.h	/^typedef PFN_vkVoidFunction (VKAPI_PTR *PFN_vkGetInstanceProcAddr)(VkInstance instance, const char* pName);$/;"	t
PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR)(VkPhysicalDevice physicalDevice, uint32_t* pPropertyCount, VkDisplayPlanePropertiesKHR* pProperties);$/;"	t
PFN_vkGetPhysicalDeviceDisplayPropertiesKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetPhysicalDeviceDisplayPropertiesKHR)(VkPhysicalDevice physicalDevice, uint32_t* pPropertyCount, VkDisplayPropertiesKHR* pProperties);$/;"	t
PFN_vkGetPhysicalDeviceFeatures	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetPhysicalDeviceFeatures)(VkPhysicalDevice physicalDevice, VkPhysicalDeviceFeatures* pFeatures);$/;"	t
PFN_vkGetPhysicalDeviceFormatProperties	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetPhysicalDeviceFormatProperties)(VkPhysicalDevice physicalDevice, VkFormat format, VkFormatProperties* pFormatProperties);$/;"	t
PFN_vkGetPhysicalDeviceImageFormatProperties	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetPhysicalDeviceImageFormatProperties)(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkImageTiling tiling, VkImageUsageFlags usage, VkImageCreateFlags flags, VkImageFormatProperties* pImageFormatProperties);$/;"	t
PFN_vkGetPhysicalDeviceMemoryProperties	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetPhysicalDeviceMemoryProperties)(VkPhysicalDevice physicalDevice, VkPhysicalDeviceMemoryProperties* pMemoryProperties);$/;"	t
PFN_vkGetPhysicalDeviceMirPresentationSupportKHR	lib/vulkan/vulkan.h	/^typedef VkBool32 (VKAPI_PTR *PFN_vkGetPhysicalDeviceMirPresentationSupportKHR)(VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex, MirConnection* connection);$/;"	t
PFN_vkGetPhysicalDeviceProperties	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetPhysicalDeviceProperties)(VkPhysicalDevice physicalDevice, VkPhysicalDeviceProperties* pProperties);$/;"	t
PFN_vkGetPhysicalDeviceQueueFamilyProperties	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetPhysicalDeviceQueueFamilyProperties)(VkPhysicalDevice physicalDevice, uint32_t* pQueueFamilyPropertyCount, VkQueueFamilyProperties* pQueueFamilyProperties);$/;"	t
PFN_vkGetPhysicalDeviceSparseImageFormatProperties	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetPhysicalDeviceSparseImageFormatProperties)(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkSampleCountFlagBits samples, VkImageUsageFlags usage, VkImageTiling tiling, uint32_t* pPropertyCount, VkSparseImageFormatProperties* pProperties);$/;"	t
PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR)(VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, VkSurfaceCapabilitiesKHR* pSurfaceCapabilities);$/;"	t
PFN_vkGetPhysicalDeviceSurfaceFormatsKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetPhysicalDeviceSurfaceFormatsKHR)(VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, uint32_t* pSurfaceFormatCount, VkSurfaceFormatKHR* pSurfaceFormats);$/;"	t
PFN_vkGetPhysicalDeviceSurfacePresentModesKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetPhysicalDeviceSurfacePresentModesKHR)(VkPhysicalDevice physicalDevice, VkSurfaceKHR surface, uint32_t* pPresentModeCount, VkPresentModeKHR* pPresentModes);$/;"	t
PFN_vkGetPhysicalDeviceSurfaceSupportKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetPhysicalDeviceSurfaceSupportKHR)(VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex, VkSurfaceKHR surface, VkBool32* pSupported);$/;"	t
PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR	lib/vulkan/vulkan.h	/^typedef VkBool32 (VKAPI_PTR *PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR)(VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex, struct wl_display* display);$/;"	t
PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR	lib/vulkan/vulkan.h	/^typedef VkBool32 (VKAPI_PTR *PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR)(VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex);$/;"	t
PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR	lib/vulkan/vulkan.h	/^typedef VkBool32 (VKAPI_PTR *PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR)(VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex, xcb_connection_t* connection, xcb_visualid_t visual_id);$/;"	t
PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR	lib/vulkan/vulkan.h	/^typedef VkBool32 (VKAPI_PTR *PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR)(VkPhysicalDevice physicalDevice, uint32_t queueFamilyIndex, Display* dpy, VisualID visualID);$/;"	t
PFN_vkGetPipelineCacheData	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetPipelineCacheData)(VkDevice device, VkPipelineCache pipelineCache, size_t* pDataSize, void* pData);$/;"	t
PFN_vkGetQueryPoolResults	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetQueryPoolResults)(VkDevice device, VkQueryPool queryPool, uint32_t firstQuery, uint32_t queryCount, size_t dataSize, void* pData, VkDeviceSize stride, VkQueryResultFlags flags);$/;"	t
PFN_vkGetRenderAreaGranularity	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkGetRenderAreaGranularity)(VkDevice device, VkRenderPass renderPass, VkExtent2D* pGranularity);$/;"	t
PFN_vkGetSwapchainImagesKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkGetSwapchainImagesKHR)(VkDevice device, VkSwapchainKHR swapchain, uint32_t* pSwapchainImageCount, VkImage* pSwapchainImages);$/;"	t
PFN_vkInternalAllocationNotification	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkInternalAllocationNotification)($/;"	t
PFN_vkInternalFreeNotification	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkInternalFreeNotification)($/;"	t
PFN_vkInvalidateMappedMemoryRanges	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkInvalidateMappedMemoryRanges)(VkDevice device, uint32_t memoryRangeCount, const VkMappedMemoryRange* pMemoryRanges);$/;"	t
PFN_vkMapMemory	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkMapMemory)(VkDevice device, VkDeviceMemory memory, VkDeviceSize offset, VkDeviceSize size, VkMemoryMapFlags flags, void** ppData);$/;"	t
PFN_vkMergePipelineCaches	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkMergePipelineCaches)(VkDevice device, VkPipelineCache dstCache, uint32_t srcCacheCount, const VkPipelineCache* pSrcCaches);$/;"	t
PFN_vkNegotiateLoaderICDInterfaceVersion	lib/vulkan/vk_icd.h	/^typedef VkResult (VKAPI_PTR *PFN_vkNegotiateLoaderICDInterfaceVersion)(uint32_t *pVersion);$/;"	t
PFN_vkQueueBindSparse	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkQueueBindSparse)(VkQueue queue, uint32_t bindInfoCount, const VkBindSparseInfo* pBindInfo, VkFence fence);$/;"	t
PFN_vkQueuePresentKHR	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkQueuePresentKHR)(VkQueue queue, const VkPresentInfoKHR* pPresentInfo);$/;"	t
PFN_vkQueueSubmit	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkQueueSubmit)(VkQueue queue, uint32_t submitCount, const VkSubmitInfo* pSubmits, VkFence fence);$/;"	t
PFN_vkQueueWaitIdle	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkQueueWaitIdle)(VkQueue queue);$/;"	t
PFN_vkReallocationFunction	lib/vulkan/vulkan.h	/^typedef void* (VKAPI_PTR *PFN_vkReallocationFunction)($/;"	t
PFN_vkResetCommandBuffer	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkResetCommandBuffer)(VkCommandBuffer commandBuffer, VkCommandBufferResetFlags flags);$/;"	t
PFN_vkResetCommandPool	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkResetCommandPool)(VkDevice device, VkCommandPool commandPool, VkCommandPoolResetFlags flags);$/;"	t
PFN_vkResetDescriptorPool	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkResetDescriptorPool)(VkDevice device, VkDescriptorPool descriptorPool, VkDescriptorPoolResetFlags flags);$/;"	t
PFN_vkResetEvent	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkResetEvent)(VkDevice device, VkEvent event);$/;"	t
PFN_vkResetFences	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkResetFences)(VkDevice device, uint32_t fenceCount, const VkFence* pFences);$/;"	t
PFN_vkSetDeviceLoaderData	lib/vulkan/vk_layer.h	/^typedef VkResult (VKAPI_PTR *PFN_vkSetDeviceLoaderData)(VkDevice device,$/;"	t
PFN_vkSetEvent	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkSetEvent)(VkDevice device, VkEvent event);$/;"	t
PFN_vkSetInstanceLoaderData	lib/vulkan/vk_layer.h	/^typedef VkResult (VKAPI_PTR *PFN_vkSetInstanceLoaderData)(VkInstance instance,$/;"	t
PFN_vkUnmapMemory	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkUnmapMemory)(VkDevice device, VkDeviceMemory memory);$/;"	t
PFN_vkUpdateDescriptorSets	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkUpdateDescriptorSets)(VkDevice device, uint32_t descriptorWriteCount, const VkWriteDescriptorSet* pDescriptorWrites, uint32_t descriptorCopyCount, const VkCopyDescriptorSet* pDescriptorCopies);$/;"	t
PFN_vkVoidFunction	lib/vulkan/vulkan.h	/^typedef void (VKAPI_PTR *PFN_vkVoidFunction)(void);$/;"	t
PFN_vkWaitForFences	lib/vulkan/vulkan.h	/^typedef VkResult (VKAPI_PTR *PFN_vkWaitForFences)(VkDevice device, uint32_t fenceCount, const VkFence* pFences, VkBool32 waitAll, uint64_t timeout);$/;"	t
Quad	inc/quad.h	/^class Quad {$/;"	c
Quad	src/quad.cpp	/^Quad::Quad(VulkanManager& vulkanManager):$/;"	f	class:Quad
QueueBindSparse	lib/vulkan/vk_layer.h	/^    PFN_vkQueueBindSparse QueueBindSparse;$/;"	m	struct:VkLayerDispatchTable_
QueuePresentKHR	lib/vulkan/vk_layer.h	/^    PFN_vkQueuePresentKHR QueuePresentKHR;$/;"	m	struct:VkLayerDispatchTable_
QueueSubmit	lib/vulkan/vk_layer.h	/^    PFN_vkQueueSubmit QueueSubmit;$/;"	m	struct:VkLayerDispatchTable_
QueueWaitIdle	lib/vulkan/vk_layer.h	/^    PFN_vkQueueWaitIdle QueueWaitIdle;$/;"	m	struct:VkLayerDispatchTable_
RESOURCE_DIR	inc/file_manager.h	/^	static constexpr const char* RESOURCE_DIR = "res\/";$/;"	m	class:FileManager
RM	Makefile	/^RM=rm -f$/;"	m
ResetCommandBuffer	lib/vulkan/vk_layer.h	/^    PFN_vkResetCommandBuffer ResetCommandBuffer;$/;"	m	struct:VkLayerDispatchTable_
ResetCommandPool	lib/vulkan/vk_layer.h	/^    PFN_vkResetCommandPool ResetCommandPool;$/;"	m	struct:VkLayerDispatchTable_
ResetDescriptorPool	lib/vulkan/vk_layer.h	/^    PFN_vkResetDescriptorPool ResetDescriptorPool;$/;"	m	struct:VkLayerDispatchTable_
ResetEvent	lib/vulkan/vk_layer.h	/^    PFN_vkResetEvent ResetEvent;$/;"	m	struct:VkLayerDispatchTable_
ResetFences	lib/vulkan/vk_layer.h	/^    PFN_vkResetFences ResetFences;$/;"	m	struct:VkLayerDispatchTable_
Revision	lib/vulkan/spirv.hpp	/^static const unsigned int Revision = 2;$/;"	m	namespace:spv
SHADER_DIR	inc/file_manager.h	/^	static constexpr const char* SHADER_DIR = "shader\/spv\/";$/;"	m	class:FileManager
SHADER_ENTRY_NAME	inc/vulkan_manager.h	/^	static constexpr const char* SHADER_ENTRY_NAME = "main";$/;"	m	class:VulkanManager
SOURCE_EXTENSIONS	.ycm_extra_conf.py	/^SOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]$/;"	v
SPIRV_TOOLS_LIBSPIRV_H_	lib/vulkan/libspirv.h	28;"	d
SPV_BINARY_TO_TEXT_OPTION_COLOR	lib/vulkan/libspirv.h	/^  SPV_BINARY_TO_TEXT_OPTION_COLOR = SPV_BIT(2),$/;"	e	enum:spv_binary_to_text_options_t
SPV_BINARY_TO_TEXT_OPTION_INDENT	lib/vulkan/libspirv.h	/^  SPV_BINARY_TO_TEXT_OPTION_INDENT = SPV_BIT(3),$/;"	e	enum:spv_binary_to_text_options_t
SPV_BINARY_TO_TEXT_OPTION_NONE	lib/vulkan/libspirv.h	/^  SPV_BINARY_TO_TEXT_OPTION_NONE = SPV_BIT(0),$/;"	e	enum:spv_binary_to_text_options_t
SPV_BINARY_TO_TEXT_OPTION_NO_HEADER	lib/vulkan/libspirv.h	/^  SPV_BINARY_TO_TEXT_OPTION_NO_HEADER = SPV_BIT(5),$/;"	e	enum:spv_binary_to_text_options_t
SPV_BINARY_TO_TEXT_OPTION_PRINT	lib/vulkan/libspirv.h	/^  SPV_BINARY_TO_TEXT_OPTION_PRINT = SPV_BIT(1),$/;"	e	enum:spv_binary_to_text_options_t
SPV_BINARY_TO_TEXT_OPTION_SHOW_BYTE_OFFSET	lib/vulkan/libspirv.h	/^  SPV_BINARY_TO_TEXT_OPTION_SHOW_BYTE_OFFSET = SPV_BIT(4),$/;"	e	enum:spv_binary_to_text_options_t
SPV_BIT	lib/vulkan/libspirv.h	41;"	d
SPV_ENDIANNESS_BIG	lib/vulkan/libspirv.h	/^  SPV_ENDIANNESS_BIG,$/;"	e	enum:spv_endianness_t
SPV_ENDIANNESS_LITTLE	lib/vulkan/libspirv.h	/^  SPV_ENDIANNESS_LITTLE,$/;"	e	enum:spv_endianness_t
SPV_END_OF_STREAM	lib/vulkan/libspirv.h	/^  SPV_END_OF_STREAM = 2,$/;"	e	enum:spv_result_t
SPV_ENV_UNIVERSAL_1_0	lib/vulkan/libspirv.h	/^  SPV_ENV_UNIVERSAL_1_0,  \/\/ SPIR-V 1.0 latest revision, no other restrictions.$/;"	e	enum:__anon41
SPV_ENV_UNIVERSAL_1_1	lib/vulkan/libspirv.h	/^  SPV_ENV_UNIVERSAL_1_1,  \/\/ SPIR-V 1.1 latest revision, no other restrictions.$/;"	e	enum:__anon41
SPV_ENV_VULKAN_1_0	lib/vulkan/libspirv.h	/^  SPV_ENV_VULKAN_1_0,     \/\/ Vulkan 1.0 latest revision.$/;"	e	enum:__anon41
SPV_ERROR_INTERNAL	lib/vulkan/libspirv.h	/^  SPV_ERROR_INTERNAL = -1,$/;"	e	enum:spv_result_t
SPV_ERROR_INVALID_BINARY	lib/vulkan/libspirv.h	/^  SPV_ERROR_INVALID_BINARY = -4,$/;"	e	enum:spv_result_t
SPV_ERROR_INVALID_CAPABILITY	lib/vulkan/libspirv.h	/^  SPV_ERROR_INVALID_CAPABILITY = -13,$/;"	e	enum:spv_result_t
SPV_ERROR_INVALID_CFG	lib/vulkan/libspirv.h	/^  SPV_ERROR_INVALID_CFG = -11,$/;"	e	enum:spv_result_t
SPV_ERROR_INVALID_DIAGNOSTIC	lib/vulkan/libspirv.h	/^  SPV_ERROR_INVALID_DIAGNOSTIC = -8,$/;"	e	enum:spv_result_t
SPV_ERROR_INVALID_ID	lib/vulkan/libspirv.h	/^  SPV_ERROR_INVALID_ID = -10,$/;"	e	enum:spv_result_t
SPV_ERROR_INVALID_LAYOUT	lib/vulkan/libspirv.h	/^  SPV_ERROR_INVALID_LAYOUT = -12,$/;"	e	enum:spv_result_t
SPV_ERROR_INVALID_LOOKUP	lib/vulkan/libspirv.h	/^  SPV_ERROR_INVALID_LOOKUP = -9,$/;"	e	enum:spv_result_t
SPV_ERROR_INVALID_POINTER	lib/vulkan/libspirv.h	/^  SPV_ERROR_INVALID_POINTER = -3,$/;"	e	enum:spv_result_t
SPV_ERROR_INVALID_TABLE	lib/vulkan/libspirv.h	/^  SPV_ERROR_INVALID_TABLE = -6,$/;"	e	enum:spv_result_t
SPV_ERROR_INVALID_TEXT	lib/vulkan/libspirv.h	/^  SPV_ERROR_INVALID_TEXT = -5,$/;"	e	enum:spv_result_t
SPV_ERROR_INVALID_VALUE	lib/vulkan/libspirv.h	/^  SPV_ERROR_INVALID_VALUE = -7,$/;"	e	enum:spv_result_t
SPV_ERROR_OUT_OF_MEMORY	lib/vulkan/libspirv.h	/^  SPV_ERROR_OUT_OF_MEMORY = -2,$/;"	e	enum:spv_result_t
SPV_EXT_INST_TYPE_GLSL_STD_450	lib/vulkan/libspirv.h	/^  SPV_EXT_INST_TYPE_GLSL_STD_450,$/;"	e	enum:spv_ext_inst_type_t
SPV_EXT_INST_TYPE_NONE	lib/vulkan/libspirv.h	/^  SPV_EXT_INST_TYPE_NONE = 0,$/;"	e	enum:spv_ext_inst_type_t
SPV_EXT_INST_TYPE_OPENCL_STD	lib/vulkan/libspirv.h	/^  SPV_EXT_INST_TYPE_OPENCL_STD,$/;"	e	enum:spv_ext_inst_type_t
SPV_FAILED_MATCH	lib/vulkan/libspirv.h	/^  SPV_FAILED_MATCH = 4,$/;"	e	enum:spv_result_t
SPV_FORCE_16_BIT_ENUM	lib/vulkan/libspirv.h	43;"	d
SPV_FORCE_32_BIT_ENUM	lib/vulkan/libspirv.h	/^  SPV_FORCE_32_BIT_ENUM(spv_binary_to_text_options_t)$/;"	e	enum:spv_binary_to_text_options_t
SPV_FORCE_32_BIT_ENUM	lib/vulkan/libspirv.h	/^  SPV_FORCE_32_BIT_ENUM(spv_endianness_t)$/;"	e	enum:spv_endianness_t
SPV_FORCE_32_BIT_ENUM	lib/vulkan/libspirv.h	/^  SPV_FORCE_32_BIT_ENUM(spv_ext_inst_type_t)$/;"	e	enum:spv_ext_inst_type_t
SPV_FORCE_32_BIT_ENUM	lib/vulkan/libspirv.h	/^  SPV_FORCE_32_BIT_ENUM(spv_operand_type_t)$/;"	e	enum:spv_operand_type_t
SPV_FORCE_32_BIT_ENUM	lib/vulkan/libspirv.h	/^  SPV_FORCE_32_BIT_ENUM(spv_result_t)$/;"	e	enum:spv_result_t
SPV_FORCE_32_BIT_ENUM	lib/vulkan/libspirv.h	44;"	d
SPV_NUMBER_FLOATING	lib/vulkan/libspirv.h	/^  SPV_NUMBER_FLOATING,$/;"	e	enum:spv_number_kind_t
SPV_NUMBER_NONE	lib/vulkan/libspirv.h	/^  SPV_NUMBER_NONE = 0,  \/\/ The default for value initialization.$/;"	e	enum:spv_number_kind_t
SPV_NUMBER_SIGNED_INT	lib/vulkan/libspirv.h	/^  SPV_NUMBER_SIGNED_INT,$/;"	e	enum:spv_number_kind_t
SPV_NUMBER_UNSIGNED_INT	lib/vulkan/libspirv.h	/^  SPV_NUMBER_UNSIGNED_INT,$/;"	e	enum:spv_number_kind_t
SPV_OPERAND_TYPE_ACCESS_QUALIFIER	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_ACCESS_QUALIFIER,              \/\/ SPIR-V Sec 3.18$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_ADDRESSING_MODEL	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_ADDRESSING_MODEL,              \/\/ SPIR-V Sec 3.4$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_BUILT_IN	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_BUILT_IN,                      \/\/ SPIR-V Sec 3.21$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_CAPABILITY	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_CAPABILITY,                    \/\/ SPIR-V Sec 3.31$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_DECORATION	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_DECORATION,                    \/\/ SPIR-V Sec 3.20$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_DIMENSIONALITY	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_DIMENSIONALITY,                \/\/ SPIR-V Sec 3.8$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_EXECUTION_MODE	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_EXECUTION_MODE,                \/\/ SPIR-V Sec 3.6$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_EXECUTION_MODEL	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_EXECUTION_MODEL,               \/\/ SPIR-V Sec 3.3$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_EXTENSION_INSTRUCTION_NUMBER	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_EXTENSION_INSTRUCTION_NUMBER,$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_FP_FAST_MATH_MODE	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_FP_FAST_MATH_MODE,             \/\/ SPIR-V Sec 3.15$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_FP_ROUNDING_MODE	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_FP_ROUNDING_MODE,              \/\/ SPIR-V Sec 3.16$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_FUNCTION_CONTROL	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_FUNCTION_CONTROL,              \/\/ SPIR-V Sec 3.24$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_FUNCTION_PARAMETER_ATTRIBUTE	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_FUNCTION_PARAMETER_ATTRIBUTE,  \/\/ SPIR-V Sec 3.19$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_GROUP_OPERATION	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_GROUP_OPERATION,               \/\/ SPIR-V Sec 3.28$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_IMAGE_CHANNEL_DATA_TYPE	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_IMAGE_CHANNEL_DATA_TYPE,       \/\/ SPIR-V Sec 3.13$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_IMAGE_CHANNEL_ORDER	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_IMAGE_CHANNEL_ORDER,           \/\/ SPIR-V Sec 3.12$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_KERNEL_ENQ_FLAGS	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_KERNEL_ENQ_FLAGS,              \/\/ SPIR-V Sec 3.29$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_KERNEL_PROFILING_INFO	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_KERNEL_PROFILING_INFO,         \/\/ SPIR-V Sec 3.30$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_LAST_CONCRETE_MASK_TYPE	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_LAST_CONCRETE_MASK_TYPE =$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_LINKAGE_TYPE	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_LINKAGE_TYPE,                  \/\/ SPIR-V Sec 3.17$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_LITERAL_INTEGER	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_LITERAL_INTEGER,  \/\/ Always unsigned 32-bits.$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_LITERAL_STRING	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_LITERAL_STRING,$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_LOOP_CONTROL	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_LOOP_CONTROL,                  \/\/ SPIR-V Sec 3.23$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_MEMORY_MODEL	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_MEMORY_MODEL,                  \/\/ SPIR-V Sec 3.5$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_MEMORY_SEMANTICS_ID	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_MEMORY_SEMANTICS_ID,  \/\/ SPIR-V Sec 3.25$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_NONE	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_NONE = 0,$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_NUM_OPERAND_TYPES	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_NUM_OPERAND_TYPES,$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_OPTIONAL_ACCESS_QUALIFIER	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_OPTIONAL_ACCESS_QUALIFIER,$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_OPTIONAL_CIV	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_OPTIONAL_CIV,$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_OPTIONAL_IMAGE	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_OPTIONAL_IMAGE,$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_OPTIONAL_LITERAL_INTEGER	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_OPTIONAL_LITERAL_INTEGER,$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_OPTIONAL_LITERAL_NUMBER	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_OPTIONAL_LITERAL_NUMBER,$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_OPTIONAL_LITERAL_STRING	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_OPTIONAL_LITERAL_STRING,$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_OPTIONAL_MEMORY_ACCESS	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_OPTIONAL_MEMORY_ACCESS,$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_OPTIONAL_TYPED_LITERAL_INTEGER	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_OPTIONAL_TYPED_LITERAL_INTEGER,$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_RESULT_ID	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_RESULT_ID,$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_SAMPLER_ADDRESSING_MODE	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_SAMPLER_ADDRESSING_MODE,       \/\/ SPIR-V Sec 3.9$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_SAMPLER_FILTER_MODE	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_SAMPLER_FILTER_MODE,           \/\/ SPIR-V Sec 3.10$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_SAMPLER_IMAGE_FORMAT	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_SAMPLER_IMAGE_FORMAT,          \/\/ SPIR-V Sec 3.11$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_SCOPE_ID	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_SCOPE_ID,             \/\/ SPIR-V Sec 3.27$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_SELECTION_CONTROL	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_SELECTION_CONTROL,             \/\/ SPIR-V Sec 3.22$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_SOURCE_LANGUAGE	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_SOURCE_LANGUAGE,               \/\/ SPIR-V Sec 3.2$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_SPEC_CONSTANT_OP_NUMBER	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_SPEC_CONSTANT_OP_NUMBER,$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_STORAGE_CLASS	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_STORAGE_CLASS,                 \/\/ SPIR-V Sec 3.7$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_TYPED_LITERAL_NUMBER	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_TYPED_LITERAL_NUMBER,$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_TYPE_ID	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_TYPE_ID,$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_VARIABLE_LITERAL_INTEGER	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_VARIABLE_LITERAL_INTEGER,$/;"	e	enum:spv_operand_type_t
SPV_OPERAND_TYPE_VARIABLE_LITERAL_INTEGER_ID	lib/vulkan/libspirv.h	/^  SPV_OPERAND_TYPE_VARIABLE_LITERAL_INTEGER_ID,$/;"	e	enum:spv_operand_type_t
SPV_REQUESTED_TERMINATION	lib/vulkan/libspirv.h	/^  SPV_REQUESTED_TERMINATION = 5,  \/\/ Success, but signals early termination.$/;"	e	enum:spv_result_t
SPV_REVISION	lib/vulkan/spirv.h	54;"	d
SPV_REVISION	lib/vulkan/spirv.hpp	50;"	d
SPV_SUCCESS	lib/vulkan/libspirv.h	/^  SPV_SUCCESS = 0,$/;"	e	enum:spv_result_t
SPV_UNSUPPORTED	lib/vulkan/libspirv.h	/^  SPV_UNSUPPORTED = 1,$/;"	e	enum:spv_result_t
SPV_VERSION	lib/vulkan/spirv.h	53;"	d
SPV_VERSION	lib/vulkan/spirv.hpp	49;"	d
SPV_WARNING	lib/vulkan/libspirv.h	/^  SPV_WARNING = 3,$/;"	e	enum:spv_result_t
SRCS	Makefile	/^SRCS=main.cpp task_manager.cpp window.cpp engine.cpp input_manager.cpp vulkan_manager.cpp device_queue_indices.cpp file_manager.cpp$/;"	m
SRC_DIR	Makefile	/^SRC_DIR := src$/;"	m
STBIDEF	lib/stb/stb_image.h	415;"	d
STBIDEF	lib/stb/stb_image.h	417;"	d
STBI_ASSERT	lib/stb/stb_image.h	580;"	d
STBI_FREE	lib/stb/stb_image.h	638;"	d
STBI_HAS_LROTL	lib/stb/stb_image.h	618;"	d
STBI_INCLUDE_STB_IMAGE_H	lib/stb/stb_image.h	220;"	d
STBI_MALLOC	lib/stb/stb_image.h	636;"	d
STBI_NEON	lib/stb/stb_image.h	729;"	d
STBI_NOTUSED	lib/stb/stb_image.h	612;"	d
STBI_NOTUSED	lib/stb/stb_image.h	614;"	d
STBI_NO_BMP	lib/stb/stb_image.h	538;"	d
STBI_NO_GIF	lib/stb/stb_image.h	547;"	d
STBI_NO_HDR	lib/stb/stb_image.h	550;"	d
STBI_NO_JPEG	lib/stb/stb_image.h	532;"	d
STBI_NO_PIC	lib/stb/stb_image.h	553;"	d
STBI_NO_PNG	lib/stb/stb_image.h	535;"	d
STBI_NO_PNM	lib/stb/stb_image.h	556;"	d
STBI_NO_PSD	lib/stb/stb_image.h	541;"	d
STBI_NO_SIMD	lib/stb/stb_image.h	658;"	d
STBI_NO_SIMD	lib/stb/stb_image.h	673;"	d
STBI_NO_TGA	lib/stb/stb_image.h	544;"	d
STBI_NO_ZLIB	lib/stb/stb_image.h	561;"	d
STBI_REALLOC	lib/stb/stb_image.h	637;"	d
STBI_REALLOC_SIZED	lib/stb/stb_image.h	642;"	d
STBI_SIMD_ALIGN	lib/stb/stb_image.h	703;"	d
STBI_SIMD_ALIGN	lib/stb/stb_image.h	711;"	d
STBI_SIMD_ALIGN	lib/stb/stb_image.h	735;"	d
STBI_SIMD_ALIGN	lib/stb/stb_image.h	739;"	d
STBI_SSE2	lib/stb/stb_image.h	677;"	d
STBI_VERSION	lib/stb/stb_image.h	396;"	d
STBI__BYTECAST	lib/stb/stb_image.h	1322;"	d
STBI__F_avg	lib/stb/stb_image.h	/^   STBI__F_avg=3,$/;"	e	enum:__anon67
STBI__F_avg_first	lib/stb/stb_image.h	/^   STBI__F_avg_first,$/;"	e	enum:__anon67
STBI__F_none	lib/stb/stb_image.h	/^   STBI__F_none=0,$/;"	e	enum:__anon67
STBI__F_paeth	lib/stb/stb_image.h	/^   STBI__F_paeth=4,$/;"	e	enum:__anon67
STBI__F_paeth_first	lib/stb/stb_image.h	/^   STBI__F_paeth_first$/;"	e	enum:__anon67
STBI__F_sub	lib/stb/stb_image.h	/^   STBI__F_sub=1,$/;"	e	enum:__anon67
STBI__F_up	lib/stb/stb_image.h	/^   STBI__F_up=2,$/;"	e	enum:__anon67
STBI__HDR_BUFLEN	lib/stb/stb_image.h	6089;"	d
STBI__IDCT_1D	lib/stb/stb_image.h	1932;"	d
STBI__MARKER_none	lib/stb/stb_image.h	2417;"	d
STBI__PNG_TYPE	lib/stb/stb_image.h	4419;"	d
STBI__RESTART	lib/stb/stb_image.h	2434;"	d
STBI__SCAN_header	lib/stb/stb_image.h	/^   STBI__SCAN_header$/;"	e	enum:__anon58
STBI__SCAN_load	lib/stb/stb_image.h	/^   STBI__SCAN_load=0,$/;"	e	enum:__anon58
STBI__SCAN_type	lib/stb/stb_image.h	/^   STBI__SCAN_type,$/;"	e	enum:__anon58
STBI__X64_TARGET	lib/stb/stb_image.h	647;"	d
STBI__X86_TARGET	lib/stb/stb_image.h	649;"	d
STBI__ZFAST_BITS	lib/stb/stb_image.h	3482;"	d
STBI__ZFAST_MASK	lib/stb/stb_image.h	3483;"	d
STBI_default	lib/stb/stb_image.h	/^   STBI_default = 0, \/\/ only used for req_comp$/;"	e	enum:__anon55
STBI_grey	lib/stb/stb_image.h	/^   STBI_grey       = 1,$/;"	e	enum:__anon55
STBI_grey_alpha	lib/stb/stb_image.h	/^   STBI_grey_alpha = 2,$/;"	e	enum:__anon55
STBI_rgb	lib/stb/stb_image.h	/^   STBI_rgb        = 3,$/;"	e	enum:__anon55
STBI_rgb_alpha	lib/stb/stb_image.h	/^   STBI_rgb_alpha  = 4$/;"	e	enum:__anon55
STB_IMAGE_IMPLEMENTATION	src/vulkan_manager.cpp	3;"	d	file:
STRINGIFY	inc/macro.h	15;"	d
SamplerAddressingMode	lib/vulkan/spirv.hpp	/^enum SamplerAddressingMode {$/;"	g	namespace:spv
SamplerAddressingModeClamp	lib/vulkan/spirv.hpp	/^    SamplerAddressingModeClamp = 2,$/;"	e	enum:spv::SamplerAddressingMode
SamplerAddressingModeClampToEdge	lib/vulkan/spirv.hpp	/^    SamplerAddressingModeClampToEdge = 1,$/;"	e	enum:spv::SamplerAddressingMode
SamplerAddressingModeMax	lib/vulkan/spirv.hpp	/^    SamplerAddressingModeMax = 0x7fffffff,$/;"	e	enum:spv::SamplerAddressingMode
SamplerAddressingModeNone	lib/vulkan/spirv.hpp	/^    SamplerAddressingModeNone = 0,$/;"	e	enum:spv::SamplerAddressingMode
SamplerAddressingModeRepeat	lib/vulkan/spirv.hpp	/^    SamplerAddressingModeRepeat = 3,$/;"	e	enum:spv::SamplerAddressingMode
SamplerAddressingModeRepeatMirrored	lib/vulkan/spirv.hpp	/^    SamplerAddressingModeRepeatMirrored = 4,$/;"	e	enum:spv::SamplerAddressingMode
SamplerFilterMode	lib/vulkan/spirv.hpp	/^enum SamplerFilterMode {$/;"	g	namespace:spv
SamplerFilterModeLinear	lib/vulkan/spirv.hpp	/^    SamplerFilterModeLinear = 1,$/;"	e	enum:spv::SamplerFilterMode
SamplerFilterModeMax	lib/vulkan/spirv.hpp	/^    SamplerFilterModeMax = 0x7fffffff,$/;"	e	enum:spv::SamplerFilterMode
SamplerFilterModeNearest	lib/vulkan/spirv.hpp	/^    SamplerFilterModeNearest = 0,$/;"	e	enum:spv::SamplerFilterMode
Scope	lib/vulkan/spirv.hpp	/^enum Scope {$/;"	g	namespace:spv
ScopeCrossDevice	lib/vulkan/spirv.hpp	/^    ScopeCrossDevice = 0,$/;"	e	enum:spv::Scope
ScopeDevice	lib/vulkan/spirv.hpp	/^    ScopeDevice = 1,$/;"	e	enum:spv::Scope
ScopeInvocation	lib/vulkan/spirv.hpp	/^    ScopeInvocation = 4,$/;"	e	enum:spv::Scope
ScopeMax	lib/vulkan/spirv.hpp	/^    ScopeMax = 0x7fffffff,$/;"	e	enum:spv::Scope
ScopeSubgroup	lib/vulkan/spirv.hpp	/^    ScopeSubgroup = 3,$/;"	e	enum:spv::Scope
ScopeWorkgroup	lib/vulkan/spirv.hpp	/^    ScopeWorkgroup = 2,$/;"	e	enum:spv::Scope
SelectionControlDontFlattenMask	lib/vulkan/spirv.hpp	/^    SelectionControlDontFlattenMask = 0x00000002,$/;"	e	enum:spv::SelectionControlMask
SelectionControlDontFlattenShift	lib/vulkan/spirv.hpp	/^    SelectionControlDontFlattenShift = 1,$/;"	e	enum:spv::SelectionControlShift
SelectionControlFlattenMask	lib/vulkan/spirv.hpp	/^    SelectionControlFlattenMask = 0x00000001,$/;"	e	enum:spv::SelectionControlMask
SelectionControlFlattenShift	lib/vulkan/spirv.hpp	/^    SelectionControlFlattenShift = 0,$/;"	e	enum:spv::SelectionControlShift
SelectionControlMask	lib/vulkan/spirv.hpp	/^enum SelectionControlMask {$/;"	g	namespace:spv
SelectionControlMaskNone	lib/vulkan/spirv.hpp	/^    SelectionControlMaskNone = 0,$/;"	e	enum:spv::SelectionControlMask
SelectionControlMax	lib/vulkan/spirv.hpp	/^    SelectionControlMax = 0x7fffffff,$/;"	e	enum:spv::SelectionControlShift
SelectionControlShift	lib/vulkan/spirv.hpp	/^enum SelectionControlShift {$/;"	g	namespace:spv
SetEvent	lib/vulkan/vk_layer.h	/^    PFN_vkSetEvent SetEvent;$/;"	m	struct:VkLayerDispatchTable_
SourceLanguage	lib/vulkan/spirv.hpp	/^enum SourceLanguage {$/;"	g	namespace:spv
SourceLanguageESSL	lib/vulkan/spirv.hpp	/^    SourceLanguageESSL = 1,$/;"	e	enum:spv::SourceLanguage
SourceLanguageGLSL	lib/vulkan/spirv.hpp	/^    SourceLanguageGLSL = 2,$/;"	e	enum:spv::SourceLanguage
SourceLanguageMax	lib/vulkan/spirv.hpp	/^    SourceLanguageMax = 0x7fffffff,$/;"	e	enum:spv::SourceLanguage
SourceLanguageOpenCL_C	lib/vulkan/spirv.hpp	/^    SourceLanguageOpenCL_C = 3,$/;"	e	enum:spv::SourceLanguage
SourceLanguageOpenCL_CPP	lib/vulkan/spirv.hpp	/^    SourceLanguageOpenCL_CPP = 4,$/;"	e	enum:spv::SourceLanguage
SourceLanguageUnknown	lib/vulkan/spirv.hpp	/^    SourceLanguageUnknown = 0,$/;"	e	enum:spv::SourceLanguage
SpvAccessQualifier	lib/vulkan/spirv.h	/^} SpvAccessQualifier;$/;"	t	typeref:enum:SpvAccessQualifier_
SpvAccessQualifierMax	lib/vulkan/spirv.h	/^    SpvAccessQualifierMax = 0x7fffffff,$/;"	e	enum:SpvAccessQualifier_
SpvAccessQualifierReadOnly	lib/vulkan/spirv.h	/^    SpvAccessQualifierReadOnly = 0,$/;"	e	enum:SpvAccessQualifier_
SpvAccessQualifierReadWrite	lib/vulkan/spirv.h	/^    SpvAccessQualifierReadWrite = 2,$/;"	e	enum:SpvAccessQualifier_
SpvAccessQualifierWriteOnly	lib/vulkan/spirv.h	/^    SpvAccessQualifierWriteOnly = 1,$/;"	e	enum:SpvAccessQualifier_
SpvAccessQualifier_	lib/vulkan/spirv.h	/^typedef enum SpvAccessQualifier_ {$/;"	g
SpvAddressingModel	lib/vulkan/spirv.h	/^} SpvAddressingModel;$/;"	t	typeref:enum:SpvAddressingModel_
SpvAddressingModelLogical	lib/vulkan/spirv.h	/^    SpvAddressingModelLogical = 0,$/;"	e	enum:SpvAddressingModel_
SpvAddressingModelMax	lib/vulkan/spirv.h	/^    SpvAddressingModelMax = 0x7fffffff,$/;"	e	enum:SpvAddressingModel_
SpvAddressingModelPhysical32	lib/vulkan/spirv.h	/^    SpvAddressingModelPhysical32 = 1,$/;"	e	enum:SpvAddressingModel_
SpvAddressingModelPhysical64	lib/vulkan/spirv.h	/^    SpvAddressingModelPhysical64 = 2,$/;"	e	enum:SpvAddressingModel_
SpvAddressingModel_	lib/vulkan/spirv.h	/^typedef enum SpvAddressingModel_ {$/;"	g
SpvBuiltIn	lib/vulkan/spirv.h	/^} SpvBuiltIn;$/;"	t	typeref:enum:SpvBuiltIn_
SpvBuiltInClipDistance	lib/vulkan/spirv.h	/^    SpvBuiltInClipDistance = 3,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInCullDistance	lib/vulkan/spirv.h	/^    SpvBuiltInCullDistance = 4,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInEnqueuedWorkgroupSize	lib/vulkan/spirv.h	/^    SpvBuiltInEnqueuedWorkgroupSize = 32,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInFragCoord	lib/vulkan/spirv.h	/^    SpvBuiltInFragCoord = 15,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInFragDepth	lib/vulkan/spirv.h	/^    SpvBuiltInFragDepth = 22,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInFrontFacing	lib/vulkan/spirv.h	/^    SpvBuiltInFrontFacing = 17,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInGlobalInvocationId	lib/vulkan/spirv.h	/^    SpvBuiltInGlobalInvocationId = 28,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInGlobalLinearId	lib/vulkan/spirv.h	/^    SpvBuiltInGlobalLinearId = 34,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInGlobalOffset	lib/vulkan/spirv.h	/^    SpvBuiltInGlobalOffset = 33,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInGlobalSize	lib/vulkan/spirv.h	/^    SpvBuiltInGlobalSize = 31,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInHelperInvocation	lib/vulkan/spirv.h	/^    SpvBuiltInHelperInvocation = 23,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInInstanceId	lib/vulkan/spirv.h	/^    SpvBuiltInInstanceId = 6,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInInstanceIndex	lib/vulkan/spirv.h	/^    SpvBuiltInInstanceIndex = 43,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInInvocationId	lib/vulkan/spirv.h	/^    SpvBuiltInInvocationId = 8,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInLayer	lib/vulkan/spirv.h	/^    SpvBuiltInLayer = 9,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInLocalInvocationId	lib/vulkan/spirv.h	/^    SpvBuiltInLocalInvocationId = 27,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInLocalInvocationIndex	lib/vulkan/spirv.h	/^    SpvBuiltInLocalInvocationIndex = 29,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInMax	lib/vulkan/spirv.h	/^    SpvBuiltInMax = 0x7fffffff,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInNumEnqueuedSubgroups	lib/vulkan/spirv.h	/^    SpvBuiltInNumEnqueuedSubgroups = 39,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInNumSubgroups	lib/vulkan/spirv.h	/^    SpvBuiltInNumSubgroups = 38,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInNumWorkgroups	lib/vulkan/spirv.h	/^    SpvBuiltInNumWorkgroups = 24,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInPatchVertices	lib/vulkan/spirv.h	/^    SpvBuiltInPatchVertices = 14,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInPointCoord	lib/vulkan/spirv.h	/^    SpvBuiltInPointCoord = 16,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInPointSize	lib/vulkan/spirv.h	/^    SpvBuiltInPointSize = 1,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInPosition	lib/vulkan/spirv.h	/^    SpvBuiltInPosition = 0,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInPrimitiveId	lib/vulkan/spirv.h	/^    SpvBuiltInPrimitiveId = 7,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInSampleId	lib/vulkan/spirv.h	/^    SpvBuiltInSampleId = 18,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInSampleMask	lib/vulkan/spirv.h	/^    SpvBuiltInSampleMask = 20,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInSamplePosition	lib/vulkan/spirv.h	/^    SpvBuiltInSamplePosition = 19,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInSubgroupId	lib/vulkan/spirv.h	/^    SpvBuiltInSubgroupId = 40,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInSubgroupLocalInvocationId	lib/vulkan/spirv.h	/^    SpvBuiltInSubgroupLocalInvocationId = 41,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInSubgroupMaxSize	lib/vulkan/spirv.h	/^    SpvBuiltInSubgroupMaxSize = 37,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInSubgroupSize	lib/vulkan/spirv.h	/^    SpvBuiltInSubgroupSize = 36,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInTessCoord	lib/vulkan/spirv.h	/^    SpvBuiltInTessCoord = 13,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInTessLevelInner	lib/vulkan/spirv.h	/^    SpvBuiltInTessLevelInner = 12,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInTessLevelOuter	lib/vulkan/spirv.h	/^    SpvBuiltInTessLevelOuter = 11,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInVertexId	lib/vulkan/spirv.h	/^    SpvBuiltInVertexId = 5,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInVertexIndex	lib/vulkan/spirv.h	/^    SpvBuiltInVertexIndex = 42,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInViewportIndex	lib/vulkan/spirv.h	/^    SpvBuiltInViewportIndex = 10,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInWorkDim	lib/vulkan/spirv.h	/^    SpvBuiltInWorkDim = 30,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInWorkgroupId	lib/vulkan/spirv.h	/^    SpvBuiltInWorkgroupId = 26,$/;"	e	enum:SpvBuiltIn_
SpvBuiltInWorkgroupSize	lib/vulkan/spirv.h	/^    SpvBuiltInWorkgroupSize = 25,$/;"	e	enum:SpvBuiltIn_
SpvBuiltIn_	lib/vulkan/spirv.h	/^typedef enum SpvBuiltIn_ {$/;"	g
SpvCapability	lib/vulkan/spirv.h	/^} SpvCapability;$/;"	t	typeref:enum:SpvCapability_
SpvCapabilityAddresses	lib/vulkan/spirv.h	/^    SpvCapabilityAddresses = 4,$/;"	e	enum:SpvCapability_
SpvCapabilityAtomicStorage	lib/vulkan/spirv.h	/^    SpvCapabilityAtomicStorage = 21,$/;"	e	enum:SpvCapability_
SpvCapabilityClipDistance	lib/vulkan/spirv.h	/^    SpvCapabilityClipDistance = 32,$/;"	e	enum:SpvCapability_
SpvCapabilityCullDistance	lib/vulkan/spirv.h	/^    SpvCapabilityCullDistance = 33,$/;"	e	enum:SpvCapability_
SpvCapabilityDerivativeControl	lib/vulkan/spirv.h	/^    SpvCapabilityDerivativeControl = 51,$/;"	e	enum:SpvCapability_
SpvCapabilityDeviceEnqueue	lib/vulkan/spirv.h	/^    SpvCapabilityDeviceEnqueue = 19,$/;"	e	enum:SpvCapability_
SpvCapabilityFloat16	lib/vulkan/spirv.h	/^    SpvCapabilityFloat16 = 9,$/;"	e	enum:SpvCapability_
SpvCapabilityFloat16Buffer	lib/vulkan/spirv.h	/^    SpvCapabilityFloat16Buffer = 8,$/;"	e	enum:SpvCapability_
SpvCapabilityFloat64	lib/vulkan/spirv.h	/^    SpvCapabilityFloat64 = 10,$/;"	e	enum:SpvCapability_
SpvCapabilityGenericPointer	lib/vulkan/spirv.h	/^    SpvCapabilityGenericPointer = 38,$/;"	e	enum:SpvCapability_
SpvCapabilityGeometry	lib/vulkan/spirv.h	/^    SpvCapabilityGeometry = 2,$/;"	e	enum:SpvCapability_
SpvCapabilityGeometryPointSize	lib/vulkan/spirv.h	/^    SpvCapabilityGeometryPointSize = 24,$/;"	e	enum:SpvCapability_
SpvCapabilityGeometryStreams	lib/vulkan/spirv.h	/^    SpvCapabilityGeometryStreams = 54,$/;"	e	enum:SpvCapability_
SpvCapabilityGroups	lib/vulkan/spirv.h	/^    SpvCapabilityGroups = 18,$/;"	e	enum:SpvCapability_
SpvCapabilityImage1D	lib/vulkan/spirv.h	/^    SpvCapabilityImage1D = 44,$/;"	e	enum:SpvCapability_
SpvCapabilityImageBasic	lib/vulkan/spirv.h	/^    SpvCapabilityImageBasic = 13,$/;"	e	enum:SpvCapability_
SpvCapabilityImageBuffer	lib/vulkan/spirv.h	/^    SpvCapabilityImageBuffer = 47,$/;"	e	enum:SpvCapability_
SpvCapabilityImageCubeArray	lib/vulkan/spirv.h	/^    SpvCapabilityImageCubeArray = 34,$/;"	e	enum:SpvCapability_
SpvCapabilityImageGatherExtended	lib/vulkan/spirv.h	/^    SpvCapabilityImageGatherExtended = 25,$/;"	e	enum:SpvCapability_
SpvCapabilityImageMSArray	lib/vulkan/spirv.h	/^    SpvCapabilityImageMSArray = 48,$/;"	e	enum:SpvCapability_
SpvCapabilityImageMipmap	lib/vulkan/spirv.h	/^    SpvCapabilityImageMipmap = 15,$/;"	e	enum:SpvCapability_
SpvCapabilityImageQuery	lib/vulkan/spirv.h	/^    SpvCapabilityImageQuery = 50,$/;"	e	enum:SpvCapability_
SpvCapabilityImageReadWrite	lib/vulkan/spirv.h	/^    SpvCapabilityImageReadWrite = 14,$/;"	e	enum:SpvCapability_
SpvCapabilityImageRect	lib/vulkan/spirv.h	/^    SpvCapabilityImageRect = 36,$/;"	e	enum:SpvCapability_
SpvCapabilityInputAttachment	lib/vulkan/spirv.h	/^    SpvCapabilityInputAttachment = 40,$/;"	e	enum:SpvCapability_
SpvCapabilityInt16	lib/vulkan/spirv.h	/^    SpvCapabilityInt16 = 22,$/;"	e	enum:SpvCapability_
SpvCapabilityInt64	lib/vulkan/spirv.h	/^    SpvCapabilityInt64 = 11,$/;"	e	enum:SpvCapability_
SpvCapabilityInt64Atomics	lib/vulkan/spirv.h	/^    SpvCapabilityInt64Atomics = 12,$/;"	e	enum:SpvCapability_
SpvCapabilityInt8	lib/vulkan/spirv.h	/^    SpvCapabilityInt8 = 39,$/;"	e	enum:SpvCapability_
SpvCapabilityInterpolationFunction	lib/vulkan/spirv.h	/^    SpvCapabilityInterpolationFunction = 52,$/;"	e	enum:SpvCapability_
SpvCapabilityKernel	lib/vulkan/spirv.h	/^    SpvCapabilityKernel = 6,$/;"	e	enum:SpvCapability_
SpvCapabilityLinkage	lib/vulkan/spirv.h	/^    SpvCapabilityLinkage = 5,$/;"	e	enum:SpvCapability_
SpvCapabilityLiteralSampler	lib/vulkan/spirv.h	/^    SpvCapabilityLiteralSampler = 20,$/;"	e	enum:SpvCapability_
SpvCapabilityMatrix	lib/vulkan/spirv.h	/^    SpvCapabilityMatrix = 0,$/;"	e	enum:SpvCapability_
SpvCapabilityMax	lib/vulkan/spirv.h	/^    SpvCapabilityMax = 0x7fffffff,$/;"	e	enum:SpvCapability_
SpvCapabilityMinLod	lib/vulkan/spirv.h	/^    SpvCapabilityMinLod = 42,$/;"	e	enum:SpvCapability_
SpvCapabilityMultiViewport	lib/vulkan/spirv.h	/^    SpvCapabilityMultiViewport = 57,$/;"	e	enum:SpvCapability_
SpvCapabilityNamedBarrier	lib/vulkan/spirv.h	/^    SpvCapabilityNamedBarrier = 59,$/;"	e	enum:SpvCapability_
SpvCapabilityPipeStorage	lib/vulkan/spirv.h	/^    SpvCapabilityPipeStorage = 60,$/;"	e	enum:SpvCapability_
SpvCapabilityPipes	lib/vulkan/spirv.h	/^    SpvCapabilityPipes = 17,$/;"	e	enum:SpvCapability_
SpvCapabilitySampleRateShading	lib/vulkan/spirv.h	/^    SpvCapabilitySampleRateShading = 35,$/;"	e	enum:SpvCapability_
SpvCapabilitySampled1D	lib/vulkan/spirv.h	/^    SpvCapabilitySampled1D = 43,$/;"	e	enum:SpvCapability_
SpvCapabilitySampledBuffer	lib/vulkan/spirv.h	/^    SpvCapabilitySampledBuffer = 46,$/;"	e	enum:SpvCapability_
SpvCapabilitySampledCubeArray	lib/vulkan/spirv.h	/^    SpvCapabilitySampledCubeArray = 45,$/;"	e	enum:SpvCapability_
SpvCapabilitySampledImageArrayDynamicIndexing	lib/vulkan/spirv.h	/^    SpvCapabilitySampledImageArrayDynamicIndexing = 29,$/;"	e	enum:SpvCapability_
SpvCapabilitySampledRect	lib/vulkan/spirv.h	/^    SpvCapabilitySampledRect = 37,$/;"	e	enum:SpvCapability_
SpvCapabilityShader	lib/vulkan/spirv.h	/^    SpvCapabilityShader = 1,$/;"	e	enum:SpvCapability_
SpvCapabilitySparseResidency	lib/vulkan/spirv.h	/^    SpvCapabilitySparseResidency = 41,$/;"	e	enum:SpvCapability_
SpvCapabilityStorageBufferArrayDynamicIndexing	lib/vulkan/spirv.h	/^    SpvCapabilityStorageBufferArrayDynamicIndexing = 30,$/;"	e	enum:SpvCapability_
SpvCapabilityStorageImageArrayDynamicIndexing	lib/vulkan/spirv.h	/^    SpvCapabilityStorageImageArrayDynamicIndexing = 31,$/;"	e	enum:SpvCapability_
SpvCapabilityStorageImageExtendedFormats	lib/vulkan/spirv.h	/^    SpvCapabilityStorageImageExtendedFormats = 49,$/;"	e	enum:SpvCapability_
SpvCapabilityStorageImageMultisample	lib/vulkan/spirv.h	/^    SpvCapabilityStorageImageMultisample = 27,$/;"	e	enum:SpvCapability_
SpvCapabilityStorageImageReadWithoutFormat	lib/vulkan/spirv.h	/^    SpvCapabilityStorageImageReadWithoutFormat = 55,$/;"	e	enum:SpvCapability_
SpvCapabilityStorageImageWriteWithoutFormat	lib/vulkan/spirv.h	/^    SpvCapabilityStorageImageWriteWithoutFormat = 56,$/;"	e	enum:SpvCapability_
SpvCapabilitySubgroupDispatch	lib/vulkan/spirv.h	/^    SpvCapabilitySubgroupDispatch = 58,$/;"	e	enum:SpvCapability_
SpvCapabilityTessellation	lib/vulkan/spirv.h	/^    SpvCapabilityTessellation = 3,$/;"	e	enum:SpvCapability_
SpvCapabilityTessellationPointSize	lib/vulkan/spirv.h	/^    SpvCapabilityTessellationPointSize = 23,$/;"	e	enum:SpvCapability_
SpvCapabilityTransformFeedback	lib/vulkan/spirv.h	/^    SpvCapabilityTransformFeedback = 53,$/;"	e	enum:SpvCapability_
SpvCapabilityUniformBufferArrayDynamicIndexing	lib/vulkan/spirv.h	/^    SpvCapabilityUniformBufferArrayDynamicIndexing = 28,$/;"	e	enum:SpvCapability_
SpvCapabilityVector16	lib/vulkan/spirv.h	/^    SpvCapabilityVector16 = 7,$/;"	e	enum:SpvCapability_
SpvCapability_	lib/vulkan/spirv.h	/^typedef enum SpvCapability_ {$/;"	g
SpvDecoration	lib/vulkan/spirv.h	/^} SpvDecoration;$/;"	t	typeref:enum:SpvDecoration_
SpvDecorationAliased	lib/vulkan/spirv.h	/^    SpvDecorationAliased = 20,$/;"	e	enum:SpvDecoration_
SpvDecorationAlignment	lib/vulkan/spirv.h	/^    SpvDecorationAlignment = 44,$/;"	e	enum:SpvDecoration_
SpvDecorationArrayStride	lib/vulkan/spirv.h	/^    SpvDecorationArrayStride = 6,$/;"	e	enum:SpvDecoration_
SpvDecorationBinding	lib/vulkan/spirv.h	/^    SpvDecorationBinding = 33,$/;"	e	enum:SpvDecoration_
SpvDecorationBlock	lib/vulkan/spirv.h	/^    SpvDecorationBlock = 2,$/;"	e	enum:SpvDecoration_
SpvDecorationBufferBlock	lib/vulkan/spirv.h	/^    SpvDecorationBufferBlock = 3,$/;"	e	enum:SpvDecoration_
SpvDecorationBuiltIn	lib/vulkan/spirv.h	/^    SpvDecorationBuiltIn = 11,$/;"	e	enum:SpvDecoration_
SpvDecorationCPacked	lib/vulkan/spirv.h	/^    SpvDecorationCPacked = 10,$/;"	e	enum:SpvDecoration_
SpvDecorationCentroid	lib/vulkan/spirv.h	/^    SpvDecorationCentroid = 16,$/;"	e	enum:SpvDecoration_
SpvDecorationCoherent	lib/vulkan/spirv.h	/^    SpvDecorationCoherent = 23,$/;"	e	enum:SpvDecoration_
SpvDecorationColMajor	lib/vulkan/spirv.h	/^    SpvDecorationColMajor = 5,$/;"	e	enum:SpvDecoration_
SpvDecorationComponent	lib/vulkan/spirv.h	/^    SpvDecorationComponent = 31,$/;"	e	enum:SpvDecoration_
SpvDecorationConstant	lib/vulkan/spirv.h	/^    SpvDecorationConstant = 22,$/;"	e	enum:SpvDecoration_
SpvDecorationDescriptorSet	lib/vulkan/spirv.h	/^    SpvDecorationDescriptorSet = 34,$/;"	e	enum:SpvDecoration_
SpvDecorationFPFastMathMode	lib/vulkan/spirv.h	/^    SpvDecorationFPFastMathMode = 40,$/;"	e	enum:SpvDecoration_
SpvDecorationFPRoundingMode	lib/vulkan/spirv.h	/^    SpvDecorationFPRoundingMode = 39,$/;"	e	enum:SpvDecoration_
SpvDecorationFlat	lib/vulkan/spirv.h	/^    SpvDecorationFlat = 14,$/;"	e	enum:SpvDecoration_
SpvDecorationFuncParamAttr	lib/vulkan/spirv.h	/^    SpvDecorationFuncParamAttr = 38,$/;"	e	enum:SpvDecoration_
SpvDecorationGLSLPacked	lib/vulkan/spirv.h	/^    SpvDecorationGLSLPacked = 9,$/;"	e	enum:SpvDecoration_
SpvDecorationGLSLShared	lib/vulkan/spirv.h	/^    SpvDecorationGLSLShared = 8,$/;"	e	enum:SpvDecoration_
SpvDecorationIndex	lib/vulkan/spirv.h	/^    SpvDecorationIndex = 32,$/;"	e	enum:SpvDecoration_
SpvDecorationInputAttachmentIndex	lib/vulkan/spirv.h	/^    SpvDecorationInputAttachmentIndex = 43,$/;"	e	enum:SpvDecoration_
SpvDecorationInvariant	lib/vulkan/spirv.h	/^    SpvDecorationInvariant = 18,$/;"	e	enum:SpvDecoration_
SpvDecorationLinkageAttributes	lib/vulkan/spirv.h	/^    SpvDecorationLinkageAttributes = 41,$/;"	e	enum:SpvDecoration_
SpvDecorationLocation	lib/vulkan/spirv.h	/^    SpvDecorationLocation = 30,$/;"	e	enum:SpvDecoration_
SpvDecorationMatrixStride	lib/vulkan/spirv.h	/^    SpvDecorationMatrixStride = 7,$/;"	e	enum:SpvDecoration_
SpvDecorationMax	lib/vulkan/spirv.h	/^    SpvDecorationMax = 0x7fffffff,$/;"	e	enum:SpvDecoration_
SpvDecorationMaxByteOffset	lib/vulkan/spirv.h	/^    SpvDecorationMaxByteOffset = 45,$/;"	e	enum:SpvDecoration_
SpvDecorationNoContraction	lib/vulkan/spirv.h	/^    SpvDecorationNoContraction = 42,$/;"	e	enum:SpvDecoration_
SpvDecorationNoPerspective	lib/vulkan/spirv.h	/^    SpvDecorationNoPerspective = 13,$/;"	e	enum:SpvDecoration_
SpvDecorationNonReadable	lib/vulkan/spirv.h	/^    SpvDecorationNonReadable = 25,$/;"	e	enum:SpvDecoration_
SpvDecorationNonWritable	lib/vulkan/spirv.h	/^    SpvDecorationNonWritable = 24,$/;"	e	enum:SpvDecoration_
SpvDecorationOffset	lib/vulkan/spirv.h	/^    SpvDecorationOffset = 35,$/;"	e	enum:SpvDecoration_
SpvDecorationPatch	lib/vulkan/spirv.h	/^    SpvDecorationPatch = 15,$/;"	e	enum:SpvDecoration_
SpvDecorationRelaxedPrecision	lib/vulkan/spirv.h	/^    SpvDecorationRelaxedPrecision = 0,$/;"	e	enum:SpvDecoration_
SpvDecorationRestrict	lib/vulkan/spirv.h	/^    SpvDecorationRestrict = 19,$/;"	e	enum:SpvDecoration_
SpvDecorationRowMajor	lib/vulkan/spirv.h	/^    SpvDecorationRowMajor = 4,$/;"	e	enum:SpvDecoration_
SpvDecorationSample	lib/vulkan/spirv.h	/^    SpvDecorationSample = 17,$/;"	e	enum:SpvDecoration_
SpvDecorationSaturatedConversion	lib/vulkan/spirv.h	/^    SpvDecorationSaturatedConversion = 28,$/;"	e	enum:SpvDecoration_
SpvDecorationSpecId	lib/vulkan/spirv.h	/^    SpvDecorationSpecId = 1,$/;"	e	enum:SpvDecoration_
SpvDecorationStream	lib/vulkan/spirv.h	/^    SpvDecorationStream = 29,$/;"	e	enum:SpvDecoration_
SpvDecorationUniform	lib/vulkan/spirv.h	/^    SpvDecorationUniform = 26,$/;"	e	enum:SpvDecoration_
SpvDecorationVolatile	lib/vulkan/spirv.h	/^    SpvDecorationVolatile = 21,$/;"	e	enum:SpvDecoration_
SpvDecorationXfbBuffer	lib/vulkan/spirv.h	/^    SpvDecorationXfbBuffer = 36,$/;"	e	enum:SpvDecoration_
SpvDecorationXfbStride	lib/vulkan/spirv.h	/^    SpvDecorationXfbStride = 37,$/;"	e	enum:SpvDecoration_
SpvDecoration_	lib/vulkan/spirv.h	/^typedef enum SpvDecoration_ {$/;"	g
SpvDim	lib/vulkan/spirv.h	/^} SpvDim;$/;"	t	typeref:enum:SpvDim_
SpvDim1D	lib/vulkan/spirv.h	/^    SpvDim1D = 0,$/;"	e	enum:SpvDim_
SpvDim2D	lib/vulkan/spirv.h	/^    SpvDim2D = 1,$/;"	e	enum:SpvDim_
SpvDim3D	lib/vulkan/spirv.h	/^    SpvDim3D = 2,$/;"	e	enum:SpvDim_
SpvDimBuffer	lib/vulkan/spirv.h	/^    SpvDimBuffer = 5,$/;"	e	enum:SpvDim_
SpvDimCube	lib/vulkan/spirv.h	/^    SpvDimCube = 3,$/;"	e	enum:SpvDim_
SpvDimMax	lib/vulkan/spirv.h	/^    SpvDimMax = 0x7fffffff,$/;"	e	enum:SpvDim_
SpvDimRect	lib/vulkan/spirv.h	/^    SpvDimRect = 4,$/;"	e	enum:SpvDim_
SpvDimSubpassData	lib/vulkan/spirv.h	/^    SpvDimSubpassData = 6,$/;"	e	enum:SpvDim_
SpvDim_	lib/vulkan/spirv.h	/^typedef enum SpvDim_ {$/;"	g
SpvExecutionMode	lib/vulkan/spirv.h	/^} SpvExecutionMode;$/;"	t	typeref:enum:SpvExecutionMode_
SpvExecutionModeContractionOff	lib/vulkan/spirv.h	/^    SpvExecutionModeContractionOff = 31,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeDepthGreater	lib/vulkan/spirv.h	/^    SpvExecutionModeDepthGreater = 14,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeDepthLess	lib/vulkan/spirv.h	/^    SpvExecutionModeDepthLess = 15,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeDepthReplacing	lib/vulkan/spirv.h	/^    SpvExecutionModeDepthReplacing = 12,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeDepthUnchanged	lib/vulkan/spirv.h	/^    SpvExecutionModeDepthUnchanged = 16,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeEarlyFragmentTests	lib/vulkan/spirv.h	/^    SpvExecutionModeEarlyFragmentTests = 9,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeFinalizer	lib/vulkan/spirv.h	/^    SpvExecutionModeFinalizer = 34,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeInitializer	lib/vulkan/spirv.h	/^    SpvExecutionModeInitializer = 33,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeInputLines	lib/vulkan/spirv.h	/^    SpvExecutionModeInputLines = 20,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeInputLinesAdjacency	lib/vulkan/spirv.h	/^    SpvExecutionModeInputLinesAdjacency = 21,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeInputPoints	lib/vulkan/spirv.h	/^    SpvExecutionModeInputPoints = 19,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeInputTrianglesAdjacency	lib/vulkan/spirv.h	/^    SpvExecutionModeInputTrianglesAdjacency = 23,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeInvocations	lib/vulkan/spirv.h	/^    SpvExecutionModeInvocations = 0,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeIsolines	lib/vulkan/spirv.h	/^    SpvExecutionModeIsolines = 25,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeLocalSize	lib/vulkan/spirv.h	/^    SpvExecutionModeLocalSize = 17,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeLocalSizeHint	lib/vulkan/spirv.h	/^    SpvExecutionModeLocalSizeHint = 18,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeMax	lib/vulkan/spirv.h	/^    SpvExecutionModeMax = 0x7fffffff,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeOriginLowerLeft	lib/vulkan/spirv.h	/^    SpvExecutionModeOriginLowerLeft = 8,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeOriginUpperLeft	lib/vulkan/spirv.h	/^    SpvExecutionModeOriginUpperLeft = 7,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeOutputLineStrip	lib/vulkan/spirv.h	/^    SpvExecutionModeOutputLineStrip = 28,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeOutputPoints	lib/vulkan/spirv.h	/^    SpvExecutionModeOutputPoints = 27,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeOutputTriangleStrip	lib/vulkan/spirv.h	/^    SpvExecutionModeOutputTriangleStrip = 29,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeOutputVertices	lib/vulkan/spirv.h	/^    SpvExecutionModeOutputVertices = 26,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModePixelCenterInteger	lib/vulkan/spirv.h	/^    SpvExecutionModePixelCenterInteger = 6,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModePointMode	lib/vulkan/spirv.h	/^    SpvExecutionModePointMode = 10,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeQuads	lib/vulkan/spirv.h	/^    SpvExecutionModeQuads = 24,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeSpacingEqual	lib/vulkan/spirv.h	/^    SpvExecutionModeSpacingEqual = 1,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeSpacingFractionalEven	lib/vulkan/spirv.h	/^    SpvExecutionModeSpacingFractionalEven = 2,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeSpacingFractionalOdd	lib/vulkan/spirv.h	/^    SpvExecutionModeSpacingFractionalOdd = 3,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeSubgroupSize	lib/vulkan/spirv.h	/^    SpvExecutionModeSubgroupSize = 35,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeSubgroupsPerWorkgroup	lib/vulkan/spirv.h	/^    SpvExecutionModeSubgroupsPerWorkgroup = 36,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeTriangles	lib/vulkan/spirv.h	/^    SpvExecutionModeTriangles = 22,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeVecTypeHint	lib/vulkan/spirv.h	/^    SpvExecutionModeVecTypeHint = 30,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeVertexOrderCcw	lib/vulkan/spirv.h	/^    SpvExecutionModeVertexOrderCcw = 5,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeVertexOrderCw	lib/vulkan/spirv.h	/^    SpvExecutionModeVertexOrderCw = 4,$/;"	e	enum:SpvExecutionMode_
SpvExecutionModeXfb	lib/vulkan/spirv.h	/^    SpvExecutionModeXfb = 11,$/;"	e	enum:SpvExecutionMode_
SpvExecutionMode_	lib/vulkan/spirv.h	/^typedef enum SpvExecutionMode_ {$/;"	g
SpvExecutionModel	lib/vulkan/spirv.h	/^} SpvExecutionModel;$/;"	t	typeref:enum:SpvExecutionModel_
SpvExecutionModelFragment	lib/vulkan/spirv.h	/^    SpvExecutionModelFragment = 4,$/;"	e	enum:SpvExecutionModel_
SpvExecutionModelGLCompute	lib/vulkan/spirv.h	/^    SpvExecutionModelGLCompute = 5,$/;"	e	enum:SpvExecutionModel_
SpvExecutionModelGeometry	lib/vulkan/spirv.h	/^    SpvExecutionModelGeometry = 3,$/;"	e	enum:SpvExecutionModel_
SpvExecutionModelKernel	lib/vulkan/spirv.h	/^    SpvExecutionModelKernel = 6,$/;"	e	enum:SpvExecutionModel_
SpvExecutionModelMax	lib/vulkan/spirv.h	/^    SpvExecutionModelMax = 0x7fffffff,$/;"	e	enum:SpvExecutionModel_
SpvExecutionModelTessellationControl	lib/vulkan/spirv.h	/^    SpvExecutionModelTessellationControl = 1,$/;"	e	enum:SpvExecutionModel_
SpvExecutionModelTessellationEvaluation	lib/vulkan/spirv.h	/^    SpvExecutionModelTessellationEvaluation = 2,$/;"	e	enum:SpvExecutionModel_
SpvExecutionModelVertex	lib/vulkan/spirv.h	/^    SpvExecutionModelVertex = 0,$/;"	e	enum:SpvExecutionModel_
SpvExecutionModel_	lib/vulkan/spirv.h	/^typedef enum SpvExecutionModel_ {$/;"	g
SpvFPFastMathModeAllowRecipMask	lib/vulkan/spirv.h	/^    SpvFPFastMathModeAllowRecipMask = 0x00000008,$/;"	e	enum:SpvFPFastMathModeMask_
SpvFPFastMathModeAllowRecipShift	lib/vulkan/spirv.h	/^    SpvFPFastMathModeAllowRecipShift = 3,$/;"	e	enum:SpvFPFastMathModeShift_
SpvFPFastMathModeFastMask	lib/vulkan/spirv.h	/^    SpvFPFastMathModeFastMask = 0x00000010,$/;"	e	enum:SpvFPFastMathModeMask_
SpvFPFastMathModeFastShift	lib/vulkan/spirv.h	/^    SpvFPFastMathModeFastShift = 4,$/;"	e	enum:SpvFPFastMathModeShift_
SpvFPFastMathModeMask	lib/vulkan/spirv.h	/^} SpvFPFastMathModeMask;$/;"	t	typeref:enum:SpvFPFastMathModeMask_
SpvFPFastMathModeMaskNone	lib/vulkan/spirv.h	/^    SpvFPFastMathModeMaskNone = 0,$/;"	e	enum:SpvFPFastMathModeMask_
SpvFPFastMathModeMask_	lib/vulkan/spirv.h	/^typedef enum SpvFPFastMathModeMask_ {$/;"	g
SpvFPFastMathModeMax	lib/vulkan/spirv.h	/^    SpvFPFastMathModeMax = 0x7fffffff,$/;"	e	enum:SpvFPFastMathModeShift_
SpvFPFastMathModeNSZMask	lib/vulkan/spirv.h	/^    SpvFPFastMathModeNSZMask = 0x00000004,$/;"	e	enum:SpvFPFastMathModeMask_
SpvFPFastMathModeNSZShift	lib/vulkan/spirv.h	/^    SpvFPFastMathModeNSZShift = 2,$/;"	e	enum:SpvFPFastMathModeShift_
SpvFPFastMathModeNotInfMask	lib/vulkan/spirv.h	/^    SpvFPFastMathModeNotInfMask = 0x00000002,$/;"	e	enum:SpvFPFastMathModeMask_
SpvFPFastMathModeNotInfShift	lib/vulkan/spirv.h	/^    SpvFPFastMathModeNotInfShift = 1,$/;"	e	enum:SpvFPFastMathModeShift_
SpvFPFastMathModeNotNaNMask	lib/vulkan/spirv.h	/^    SpvFPFastMathModeNotNaNMask = 0x00000001,$/;"	e	enum:SpvFPFastMathModeMask_
SpvFPFastMathModeNotNaNShift	lib/vulkan/spirv.h	/^    SpvFPFastMathModeNotNaNShift = 0,$/;"	e	enum:SpvFPFastMathModeShift_
SpvFPFastMathModeShift	lib/vulkan/spirv.h	/^} SpvFPFastMathModeShift;$/;"	t	typeref:enum:SpvFPFastMathModeShift_
SpvFPFastMathModeShift_	lib/vulkan/spirv.h	/^typedef enum SpvFPFastMathModeShift_ {$/;"	g
SpvFPRoundingMode	lib/vulkan/spirv.h	/^} SpvFPRoundingMode;$/;"	t	typeref:enum:SpvFPRoundingMode_
SpvFPRoundingModeMax	lib/vulkan/spirv.h	/^    SpvFPRoundingModeMax = 0x7fffffff,$/;"	e	enum:SpvFPRoundingMode_
SpvFPRoundingModeRTE	lib/vulkan/spirv.h	/^    SpvFPRoundingModeRTE = 0,$/;"	e	enum:SpvFPRoundingMode_
SpvFPRoundingModeRTN	lib/vulkan/spirv.h	/^    SpvFPRoundingModeRTN = 3,$/;"	e	enum:SpvFPRoundingMode_
SpvFPRoundingModeRTP	lib/vulkan/spirv.h	/^    SpvFPRoundingModeRTP = 2,$/;"	e	enum:SpvFPRoundingMode_
SpvFPRoundingModeRTZ	lib/vulkan/spirv.h	/^    SpvFPRoundingModeRTZ = 1,$/;"	e	enum:SpvFPRoundingMode_
SpvFPRoundingMode_	lib/vulkan/spirv.h	/^typedef enum SpvFPRoundingMode_ {$/;"	g
SpvFunctionControlConstMask	lib/vulkan/spirv.h	/^    SpvFunctionControlConstMask = 0x00000008,$/;"	e	enum:SpvFunctionControlMask_
SpvFunctionControlConstShift	lib/vulkan/spirv.h	/^    SpvFunctionControlConstShift = 3,$/;"	e	enum:SpvFunctionControlShift_
SpvFunctionControlDontInlineMask	lib/vulkan/spirv.h	/^    SpvFunctionControlDontInlineMask = 0x00000002,$/;"	e	enum:SpvFunctionControlMask_
SpvFunctionControlDontInlineShift	lib/vulkan/spirv.h	/^    SpvFunctionControlDontInlineShift = 1,$/;"	e	enum:SpvFunctionControlShift_
SpvFunctionControlInlineMask	lib/vulkan/spirv.h	/^    SpvFunctionControlInlineMask = 0x00000001,$/;"	e	enum:SpvFunctionControlMask_
SpvFunctionControlInlineShift	lib/vulkan/spirv.h	/^    SpvFunctionControlInlineShift = 0,$/;"	e	enum:SpvFunctionControlShift_
SpvFunctionControlMask	lib/vulkan/spirv.h	/^} SpvFunctionControlMask;$/;"	t	typeref:enum:SpvFunctionControlMask_
SpvFunctionControlMaskNone	lib/vulkan/spirv.h	/^    SpvFunctionControlMaskNone = 0,$/;"	e	enum:SpvFunctionControlMask_
SpvFunctionControlMask_	lib/vulkan/spirv.h	/^typedef enum SpvFunctionControlMask_ {$/;"	g
SpvFunctionControlMax	lib/vulkan/spirv.h	/^    SpvFunctionControlMax = 0x7fffffff,$/;"	e	enum:SpvFunctionControlShift_
SpvFunctionControlPureMask	lib/vulkan/spirv.h	/^    SpvFunctionControlPureMask = 0x00000004,$/;"	e	enum:SpvFunctionControlMask_
SpvFunctionControlPureShift	lib/vulkan/spirv.h	/^    SpvFunctionControlPureShift = 2,$/;"	e	enum:SpvFunctionControlShift_
SpvFunctionControlShift	lib/vulkan/spirv.h	/^} SpvFunctionControlShift;$/;"	t	typeref:enum:SpvFunctionControlShift_
SpvFunctionControlShift_	lib/vulkan/spirv.h	/^typedef enum SpvFunctionControlShift_ {$/;"	g
SpvFunctionParameterAttribute	lib/vulkan/spirv.h	/^} SpvFunctionParameterAttribute;$/;"	t	typeref:enum:SpvFunctionParameterAttribute_
SpvFunctionParameterAttributeByVal	lib/vulkan/spirv.h	/^    SpvFunctionParameterAttributeByVal = 2,$/;"	e	enum:SpvFunctionParameterAttribute_
SpvFunctionParameterAttributeMax	lib/vulkan/spirv.h	/^    SpvFunctionParameterAttributeMax = 0x7fffffff,$/;"	e	enum:SpvFunctionParameterAttribute_
SpvFunctionParameterAttributeNoAlias	lib/vulkan/spirv.h	/^    SpvFunctionParameterAttributeNoAlias = 4,$/;"	e	enum:SpvFunctionParameterAttribute_
SpvFunctionParameterAttributeNoCapture	lib/vulkan/spirv.h	/^    SpvFunctionParameterAttributeNoCapture = 5,$/;"	e	enum:SpvFunctionParameterAttribute_
SpvFunctionParameterAttributeNoReadWrite	lib/vulkan/spirv.h	/^    SpvFunctionParameterAttributeNoReadWrite = 7,$/;"	e	enum:SpvFunctionParameterAttribute_
SpvFunctionParameterAttributeNoWrite	lib/vulkan/spirv.h	/^    SpvFunctionParameterAttributeNoWrite = 6,$/;"	e	enum:SpvFunctionParameterAttribute_
SpvFunctionParameterAttributeSext	lib/vulkan/spirv.h	/^    SpvFunctionParameterAttributeSext = 1,$/;"	e	enum:SpvFunctionParameterAttribute_
SpvFunctionParameterAttributeSret	lib/vulkan/spirv.h	/^    SpvFunctionParameterAttributeSret = 3,$/;"	e	enum:SpvFunctionParameterAttribute_
SpvFunctionParameterAttributeZext	lib/vulkan/spirv.h	/^    SpvFunctionParameterAttributeZext = 0,$/;"	e	enum:SpvFunctionParameterAttribute_
SpvFunctionParameterAttribute_	lib/vulkan/spirv.h	/^typedef enum SpvFunctionParameterAttribute_ {$/;"	g
SpvGroupOperation	lib/vulkan/spirv.h	/^} SpvGroupOperation;$/;"	t	typeref:enum:SpvGroupOperation_
SpvGroupOperationExclusiveScan	lib/vulkan/spirv.h	/^    SpvGroupOperationExclusiveScan = 2,$/;"	e	enum:SpvGroupOperation_
SpvGroupOperationInclusiveScan	lib/vulkan/spirv.h	/^    SpvGroupOperationInclusiveScan = 1,$/;"	e	enum:SpvGroupOperation_
SpvGroupOperationMax	lib/vulkan/spirv.h	/^    SpvGroupOperationMax = 0x7fffffff,$/;"	e	enum:SpvGroupOperation_
SpvGroupOperationReduce	lib/vulkan/spirv.h	/^    SpvGroupOperationReduce = 0,$/;"	e	enum:SpvGroupOperation_
SpvGroupOperation_	lib/vulkan/spirv.h	/^typedef enum SpvGroupOperation_ {$/;"	g
SpvId	lib/vulkan/spirv.h	/^typedef unsigned int SpvId;$/;"	t
SpvImageChannelDataType	lib/vulkan/spirv.h	/^} SpvImageChannelDataType;$/;"	t	typeref:enum:SpvImageChannelDataType_
SpvImageChannelDataTypeFloat	lib/vulkan/spirv.h	/^    SpvImageChannelDataTypeFloat = 14,$/;"	e	enum:SpvImageChannelDataType_
SpvImageChannelDataTypeHalfFloat	lib/vulkan/spirv.h	/^    SpvImageChannelDataTypeHalfFloat = 13,$/;"	e	enum:SpvImageChannelDataType_
SpvImageChannelDataTypeMax	lib/vulkan/spirv.h	/^    SpvImageChannelDataTypeMax = 0x7fffffff,$/;"	e	enum:SpvImageChannelDataType_
SpvImageChannelDataTypeSignedInt16	lib/vulkan/spirv.h	/^    SpvImageChannelDataTypeSignedInt16 = 8,$/;"	e	enum:SpvImageChannelDataType_
SpvImageChannelDataTypeSignedInt32	lib/vulkan/spirv.h	/^    SpvImageChannelDataTypeSignedInt32 = 9,$/;"	e	enum:SpvImageChannelDataType_
SpvImageChannelDataTypeSignedInt8	lib/vulkan/spirv.h	/^    SpvImageChannelDataTypeSignedInt8 = 7,$/;"	e	enum:SpvImageChannelDataType_
SpvImageChannelDataTypeSnormInt16	lib/vulkan/spirv.h	/^    SpvImageChannelDataTypeSnormInt16 = 1,$/;"	e	enum:SpvImageChannelDataType_
SpvImageChannelDataTypeSnormInt8	lib/vulkan/spirv.h	/^    SpvImageChannelDataTypeSnormInt8 = 0,$/;"	e	enum:SpvImageChannelDataType_
SpvImageChannelDataTypeUnormInt101010	lib/vulkan/spirv.h	/^    SpvImageChannelDataTypeUnormInt101010 = 6,$/;"	e	enum:SpvImageChannelDataType_
SpvImageChannelDataTypeUnormInt101010_2	lib/vulkan/spirv.h	/^    SpvImageChannelDataTypeUnormInt101010_2 = 16,$/;"	e	enum:SpvImageChannelDataType_
SpvImageChannelDataTypeUnormInt16	lib/vulkan/spirv.h	/^    SpvImageChannelDataTypeUnormInt16 = 3,$/;"	e	enum:SpvImageChannelDataType_
SpvImageChannelDataTypeUnormInt24	lib/vulkan/spirv.h	/^    SpvImageChannelDataTypeUnormInt24 = 15,$/;"	e	enum:SpvImageChannelDataType_
SpvImageChannelDataTypeUnormInt8	lib/vulkan/spirv.h	/^    SpvImageChannelDataTypeUnormInt8 = 2,$/;"	e	enum:SpvImageChannelDataType_
SpvImageChannelDataTypeUnormShort555	lib/vulkan/spirv.h	/^    SpvImageChannelDataTypeUnormShort555 = 5,$/;"	e	enum:SpvImageChannelDataType_
SpvImageChannelDataTypeUnormShort565	lib/vulkan/spirv.h	/^    SpvImageChannelDataTypeUnormShort565 = 4,$/;"	e	enum:SpvImageChannelDataType_
SpvImageChannelDataTypeUnsignedInt16	lib/vulkan/spirv.h	/^    SpvImageChannelDataTypeUnsignedInt16 = 11,$/;"	e	enum:SpvImageChannelDataType_
SpvImageChannelDataTypeUnsignedInt32	lib/vulkan/spirv.h	/^    SpvImageChannelDataTypeUnsignedInt32 = 12,$/;"	e	enum:SpvImageChannelDataType_
SpvImageChannelDataTypeUnsignedInt8	lib/vulkan/spirv.h	/^    SpvImageChannelDataTypeUnsignedInt8 = 10,$/;"	e	enum:SpvImageChannelDataType_
SpvImageChannelDataType_	lib/vulkan/spirv.h	/^typedef enum SpvImageChannelDataType_ {$/;"	g
SpvImageChannelOrder	lib/vulkan/spirv.h	/^} SpvImageChannelOrder;$/;"	t	typeref:enum:SpvImageChannelOrder_
SpvImageChannelOrderA	lib/vulkan/spirv.h	/^    SpvImageChannelOrderA = 1,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrderABGR	lib/vulkan/spirv.h	/^    SpvImageChannelOrderABGR = 19,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrderARGB	lib/vulkan/spirv.h	/^    SpvImageChannelOrderARGB = 7,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrderBGRA	lib/vulkan/spirv.h	/^    SpvImageChannelOrderBGRA = 6,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrderDepth	lib/vulkan/spirv.h	/^    SpvImageChannelOrderDepth = 13,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrderDepthStencil	lib/vulkan/spirv.h	/^    SpvImageChannelOrderDepthStencil = 14,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrderIntensity	lib/vulkan/spirv.h	/^    SpvImageChannelOrderIntensity = 8,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrderLuminance	lib/vulkan/spirv.h	/^    SpvImageChannelOrderLuminance = 9,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrderMax	lib/vulkan/spirv.h	/^    SpvImageChannelOrderMax = 0x7fffffff,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrderR	lib/vulkan/spirv.h	/^    SpvImageChannelOrderR = 0,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrderRA	lib/vulkan/spirv.h	/^    SpvImageChannelOrderRA = 3,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrderRG	lib/vulkan/spirv.h	/^    SpvImageChannelOrderRG = 2,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrderRGB	lib/vulkan/spirv.h	/^    SpvImageChannelOrderRGB = 4,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrderRGBA	lib/vulkan/spirv.h	/^    SpvImageChannelOrderRGBA = 5,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrderRGBx	lib/vulkan/spirv.h	/^    SpvImageChannelOrderRGBx = 12,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrderRGx	lib/vulkan/spirv.h	/^    SpvImageChannelOrderRGx = 11,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrderRx	lib/vulkan/spirv.h	/^    SpvImageChannelOrderRx = 10,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrder_	lib/vulkan/spirv.h	/^typedef enum SpvImageChannelOrder_ {$/;"	g
SpvImageChannelOrdersBGRA	lib/vulkan/spirv.h	/^    SpvImageChannelOrdersBGRA = 18,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrdersRGB	lib/vulkan/spirv.h	/^    SpvImageChannelOrdersRGB = 15,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrdersRGBA	lib/vulkan/spirv.h	/^    SpvImageChannelOrdersRGBA = 17,$/;"	e	enum:SpvImageChannelOrder_
SpvImageChannelOrdersRGBx	lib/vulkan/spirv.h	/^    SpvImageChannelOrdersRGBx = 16,$/;"	e	enum:SpvImageChannelOrder_
SpvImageFormat	lib/vulkan/spirv.h	/^} SpvImageFormat;$/;"	t	typeref:enum:SpvImageFormat_
SpvImageFormatMax	lib/vulkan/spirv.h	/^    SpvImageFormatMax = 0x7fffffff,$/;"	e	enum:SpvImageFormat_
SpvImageFormatR11fG11fB10f	lib/vulkan/spirv.h	/^    SpvImageFormatR11fG11fB10f = 8,$/;"	e	enum:SpvImageFormat_
SpvImageFormatR16	lib/vulkan/spirv.h	/^    SpvImageFormatR16 = 14,$/;"	e	enum:SpvImageFormat_
SpvImageFormatR16Snorm	lib/vulkan/spirv.h	/^    SpvImageFormatR16Snorm = 19,$/;"	e	enum:SpvImageFormat_
SpvImageFormatR16f	lib/vulkan/spirv.h	/^    SpvImageFormatR16f = 9,$/;"	e	enum:SpvImageFormat_
SpvImageFormatR16i	lib/vulkan/spirv.h	/^    SpvImageFormatR16i = 28,$/;"	e	enum:SpvImageFormat_
SpvImageFormatR16ui	lib/vulkan/spirv.h	/^    SpvImageFormatR16ui = 38,$/;"	e	enum:SpvImageFormat_
SpvImageFormatR32f	lib/vulkan/spirv.h	/^    SpvImageFormatR32f = 3,$/;"	e	enum:SpvImageFormat_
SpvImageFormatR32i	lib/vulkan/spirv.h	/^    SpvImageFormatR32i = 24,$/;"	e	enum:SpvImageFormat_
SpvImageFormatR32ui	lib/vulkan/spirv.h	/^    SpvImageFormatR32ui = 33,$/;"	e	enum:SpvImageFormat_
SpvImageFormatR8	lib/vulkan/spirv.h	/^    SpvImageFormatR8 = 15,$/;"	e	enum:SpvImageFormat_
SpvImageFormatR8Snorm	lib/vulkan/spirv.h	/^    SpvImageFormatR8Snorm = 20,$/;"	e	enum:SpvImageFormat_
SpvImageFormatR8i	lib/vulkan/spirv.h	/^    SpvImageFormatR8i = 29,$/;"	e	enum:SpvImageFormat_
SpvImageFormatR8ui	lib/vulkan/spirv.h	/^    SpvImageFormatR8ui = 39,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRg16	lib/vulkan/spirv.h	/^    SpvImageFormatRg16 = 12,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRg16Snorm	lib/vulkan/spirv.h	/^    SpvImageFormatRg16Snorm = 17,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRg16f	lib/vulkan/spirv.h	/^    SpvImageFormatRg16f = 7,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRg16i	lib/vulkan/spirv.h	/^    SpvImageFormatRg16i = 26,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRg16ui	lib/vulkan/spirv.h	/^    SpvImageFormatRg16ui = 36,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRg32f	lib/vulkan/spirv.h	/^    SpvImageFormatRg32f = 6,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRg32i	lib/vulkan/spirv.h	/^    SpvImageFormatRg32i = 25,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRg32ui	lib/vulkan/spirv.h	/^    SpvImageFormatRg32ui = 35,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRg8	lib/vulkan/spirv.h	/^    SpvImageFormatRg8 = 13,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRg8Snorm	lib/vulkan/spirv.h	/^    SpvImageFormatRg8Snorm = 18,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRg8i	lib/vulkan/spirv.h	/^    SpvImageFormatRg8i = 27,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRg8ui	lib/vulkan/spirv.h	/^    SpvImageFormatRg8ui = 37,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRgb10A2	lib/vulkan/spirv.h	/^    SpvImageFormatRgb10A2 = 11,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRgb10a2ui	lib/vulkan/spirv.h	/^    SpvImageFormatRgb10a2ui = 34,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRgba16	lib/vulkan/spirv.h	/^    SpvImageFormatRgba16 = 10,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRgba16Snorm	lib/vulkan/spirv.h	/^    SpvImageFormatRgba16Snorm = 16,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRgba16f	lib/vulkan/spirv.h	/^    SpvImageFormatRgba16f = 2,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRgba16i	lib/vulkan/spirv.h	/^    SpvImageFormatRgba16i = 22,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRgba16ui	lib/vulkan/spirv.h	/^    SpvImageFormatRgba16ui = 31,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRgba32f	lib/vulkan/spirv.h	/^    SpvImageFormatRgba32f = 1,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRgba32i	lib/vulkan/spirv.h	/^    SpvImageFormatRgba32i = 21,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRgba32ui	lib/vulkan/spirv.h	/^    SpvImageFormatRgba32ui = 30,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRgba8	lib/vulkan/spirv.h	/^    SpvImageFormatRgba8 = 4,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRgba8Snorm	lib/vulkan/spirv.h	/^    SpvImageFormatRgba8Snorm = 5,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRgba8i	lib/vulkan/spirv.h	/^    SpvImageFormatRgba8i = 23,$/;"	e	enum:SpvImageFormat_
SpvImageFormatRgba8ui	lib/vulkan/spirv.h	/^    SpvImageFormatRgba8ui = 32,$/;"	e	enum:SpvImageFormat_
SpvImageFormatUnknown	lib/vulkan/spirv.h	/^    SpvImageFormatUnknown = 0,$/;"	e	enum:SpvImageFormat_
SpvImageFormat_	lib/vulkan/spirv.h	/^typedef enum SpvImageFormat_ {$/;"	g
SpvImageOperandsBiasMask	lib/vulkan/spirv.h	/^    SpvImageOperandsBiasMask = 0x00000001,$/;"	e	enum:SpvImageOperandsMask_
SpvImageOperandsBiasShift	lib/vulkan/spirv.h	/^    SpvImageOperandsBiasShift = 0,$/;"	e	enum:SpvImageOperandsShift_
SpvImageOperandsConstOffsetMask	lib/vulkan/spirv.h	/^    SpvImageOperandsConstOffsetMask = 0x00000008,$/;"	e	enum:SpvImageOperandsMask_
SpvImageOperandsConstOffsetShift	lib/vulkan/spirv.h	/^    SpvImageOperandsConstOffsetShift = 3,$/;"	e	enum:SpvImageOperandsShift_
SpvImageOperandsConstOffsetsMask	lib/vulkan/spirv.h	/^    SpvImageOperandsConstOffsetsMask = 0x00000020,$/;"	e	enum:SpvImageOperandsMask_
SpvImageOperandsConstOffsetsShift	lib/vulkan/spirv.h	/^    SpvImageOperandsConstOffsetsShift = 5,$/;"	e	enum:SpvImageOperandsShift_
SpvImageOperandsGradMask	lib/vulkan/spirv.h	/^    SpvImageOperandsGradMask = 0x00000004,$/;"	e	enum:SpvImageOperandsMask_
SpvImageOperandsGradShift	lib/vulkan/spirv.h	/^    SpvImageOperandsGradShift = 2,$/;"	e	enum:SpvImageOperandsShift_
SpvImageOperandsLodMask	lib/vulkan/spirv.h	/^    SpvImageOperandsLodMask = 0x00000002,$/;"	e	enum:SpvImageOperandsMask_
SpvImageOperandsLodShift	lib/vulkan/spirv.h	/^    SpvImageOperandsLodShift = 1,$/;"	e	enum:SpvImageOperandsShift_
SpvImageOperandsMask	lib/vulkan/spirv.h	/^} SpvImageOperandsMask;$/;"	t	typeref:enum:SpvImageOperandsMask_
SpvImageOperandsMaskNone	lib/vulkan/spirv.h	/^    SpvImageOperandsMaskNone = 0,$/;"	e	enum:SpvImageOperandsMask_
SpvImageOperandsMask_	lib/vulkan/spirv.h	/^typedef enum SpvImageOperandsMask_ {$/;"	g
SpvImageOperandsMax	lib/vulkan/spirv.h	/^    SpvImageOperandsMax = 0x7fffffff,$/;"	e	enum:SpvImageOperandsShift_
SpvImageOperandsMinLodMask	lib/vulkan/spirv.h	/^    SpvImageOperandsMinLodMask = 0x00000080,$/;"	e	enum:SpvImageOperandsMask_
SpvImageOperandsMinLodShift	lib/vulkan/spirv.h	/^    SpvImageOperandsMinLodShift = 7,$/;"	e	enum:SpvImageOperandsShift_
SpvImageOperandsOffsetMask	lib/vulkan/spirv.h	/^    SpvImageOperandsOffsetMask = 0x00000010,$/;"	e	enum:SpvImageOperandsMask_
SpvImageOperandsOffsetShift	lib/vulkan/spirv.h	/^    SpvImageOperandsOffsetShift = 4,$/;"	e	enum:SpvImageOperandsShift_
SpvImageOperandsSampleMask	lib/vulkan/spirv.h	/^    SpvImageOperandsSampleMask = 0x00000040,$/;"	e	enum:SpvImageOperandsMask_
SpvImageOperandsSampleShift	lib/vulkan/spirv.h	/^    SpvImageOperandsSampleShift = 6,$/;"	e	enum:SpvImageOperandsShift_
SpvImageOperandsShift	lib/vulkan/spirv.h	/^} SpvImageOperandsShift;$/;"	t	typeref:enum:SpvImageOperandsShift_
SpvImageOperandsShift_	lib/vulkan/spirv.h	/^typedef enum SpvImageOperandsShift_ {$/;"	g
SpvKernelEnqueueFlags	lib/vulkan/spirv.h	/^} SpvKernelEnqueueFlags;$/;"	t	typeref:enum:SpvKernelEnqueueFlags_
SpvKernelEnqueueFlagsMax	lib/vulkan/spirv.h	/^    SpvKernelEnqueueFlagsMax = 0x7fffffff,$/;"	e	enum:SpvKernelEnqueueFlags_
SpvKernelEnqueueFlagsNoWait	lib/vulkan/spirv.h	/^    SpvKernelEnqueueFlagsNoWait = 0,$/;"	e	enum:SpvKernelEnqueueFlags_
SpvKernelEnqueueFlagsWaitKernel	lib/vulkan/spirv.h	/^    SpvKernelEnqueueFlagsWaitKernel = 1,$/;"	e	enum:SpvKernelEnqueueFlags_
SpvKernelEnqueueFlagsWaitWorkGroup	lib/vulkan/spirv.h	/^    SpvKernelEnqueueFlagsWaitWorkGroup = 2,$/;"	e	enum:SpvKernelEnqueueFlags_
SpvKernelEnqueueFlags_	lib/vulkan/spirv.h	/^typedef enum SpvKernelEnqueueFlags_ {$/;"	g
SpvKernelProfilingInfoCmdExecTimeMask	lib/vulkan/spirv.h	/^    SpvKernelProfilingInfoCmdExecTimeMask = 0x00000001,$/;"	e	enum:SpvKernelProfilingInfoMask_
SpvKernelProfilingInfoCmdExecTimeShift	lib/vulkan/spirv.h	/^    SpvKernelProfilingInfoCmdExecTimeShift = 0,$/;"	e	enum:SpvKernelProfilingInfoShift_
SpvKernelProfilingInfoMask	lib/vulkan/spirv.h	/^} SpvKernelProfilingInfoMask;$/;"	t	typeref:enum:SpvKernelProfilingInfoMask_
SpvKernelProfilingInfoMaskNone	lib/vulkan/spirv.h	/^    SpvKernelProfilingInfoMaskNone = 0,$/;"	e	enum:SpvKernelProfilingInfoMask_
SpvKernelProfilingInfoMask_	lib/vulkan/spirv.h	/^typedef enum SpvKernelProfilingInfoMask_ {$/;"	g
SpvKernelProfilingInfoMax	lib/vulkan/spirv.h	/^    SpvKernelProfilingInfoMax = 0x7fffffff,$/;"	e	enum:SpvKernelProfilingInfoShift_
SpvKernelProfilingInfoShift	lib/vulkan/spirv.h	/^} SpvKernelProfilingInfoShift;$/;"	t	typeref:enum:SpvKernelProfilingInfoShift_
SpvKernelProfilingInfoShift_	lib/vulkan/spirv.h	/^typedef enum SpvKernelProfilingInfoShift_ {$/;"	g
SpvLinkageType	lib/vulkan/spirv.h	/^} SpvLinkageType;$/;"	t	typeref:enum:SpvLinkageType_
SpvLinkageTypeExport	lib/vulkan/spirv.h	/^    SpvLinkageTypeExport = 0,$/;"	e	enum:SpvLinkageType_
SpvLinkageTypeImport	lib/vulkan/spirv.h	/^    SpvLinkageTypeImport = 1,$/;"	e	enum:SpvLinkageType_
SpvLinkageTypeMax	lib/vulkan/spirv.h	/^    SpvLinkageTypeMax = 0x7fffffff,$/;"	e	enum:SpvLinkageType_
SpvLinkageType_	lib/vulkan/spirv.h	/^typedef enum SpvLinkageType_ {$/;"	g
SpvLoopControlDependencyInfiniteMask	lib/vulkan/spirv.h	/^    SpvLoopControlDependencyInfiniteMask = 0x00000004,$/;"	e	enum:SpvLoopControlMask_
SpvLoopControlDependencyInfiniteShift	lib/vulkan/spirv.h	/^    SpvLoopControlDependencyInfiniteShift = 2,$/;"	e	enum:SpvLoopControlShift_
SpvLoopControlDependencyLengthMask	lib/vulkan/spirv.h	/^    SpvLoopControlDependencyLengthMask = 0x00000008,$/;"	e	enum:SpvLoopControlMask_
SpvLoopControlDependencyLengthShift	lib/vulkan/spirv.h	/^    SpvLoopControlDependencyLengthShift = 3,$/;"	e	enum:SpvLoopControlShift_
SpvLoopControlDontUnrollMask	lib/vulkan/spirv.h	/^    SpvLoopControlDontUnrollMask = 0x00000002,$/;"	e	enum:SpvLoopControlMask_
SpvLoopControlDontUnrollShift	lib/vulkan/spirv.h	/^    SpvLoopControlDontUnrollShift = 1,$/;"	e	enum:SpvLoopControlShift_
SpvLoopControlMask	lib/vulkan/spirv.h	/^} SpvLoopControlMask;$/;"	t	typeref:enum:SpvLoopControlMask_
SpvLoopControlMaskNone	lib/vulkan/spirv.h	/^    SpvLoopControlMaskNone = 0,$/;"	e	enum:SpvLoopControlMask_
SpvLoopControlMask_	lib/vulkan/spirv.h	/^typedef enum SpvLoopControlMask_ {$/;"	g
SpvLoopControlMax	lib/vulkan/spirv.h	/^    SpvLoopControlMax = 0x7fffffff,$/;"	e	enum:SpvLoopControlShift_
SpvLoopControlShift	lib/vulkan/spirv.h	/^} SpvLoopControlShift;$/;"	t	typeref:enum:SpvLoopControlShift_
SpvLoopControlShift_	lib/vulkan/spirv.h	/^typedef enum SpvLoopControlShift_ {$/;"	g
SpvLoopControlUnrollMask	lib/vulkan/spirv.h	/^    SpvLoopControlUnrollMask = 0x00000001,$/;"	e	enum:SpvLoopControlMask_
SpvLoopControlUnrollShift	lib/vulkan/spirv.h	/^    SpvLoopControlUnrollShift = 0,$/;"	e	enum:SpvLoopControlShift_
SpvMagicNumber	lib/vulkan/spirv.h	/^static const unsigned int SpvMagicNumber = 0x07230203;$/;"	v
SpvMemoryAccessAlignedMask	lib/vulkan/spirv.h	/^    SpvMemoryAccessAlignedMask = 0x00000002,$/;"	e	enum:SpvMemoryAccessMask_
SpvMemoryAccessAlignedShift	lib/vulkan/spirv.h	/^    SpvMemoryAccessAlignedShift = 1,$/;"	e	enum:SpvMemoryAccessShift_
SpvMemoryAccessMask	lib/vulkan/spirv.h	/^} SpvMemoryAccessMask;$/;"	t	typeref:enum:SpvMemoryAccessMask_
SpvMemoryAccessMaskNone	lib/vulkan/spirv.h	/^    SpvMemoryAccessMaskNone = 0,$/;"	e	enum:SpvMemoryAccessMask_
SpvMemoryAccessMask_	lib/vulkan/spirv.h	/^typedef enum SpvMemoryAccessMask_ {$/;"	g
SpvMemoryAccessMax	lib/vulkan/spirv.h	/^    SpvMemoryAccessMax = 0x7fffffff,$/;"	e	enum:SpvMemoryAccessShift_
SpvMemoryAccessNontemporalMask	lib/vulkan/spirv.h	/^    SpvMemoryAccessNontemporalMask = 0x00000004,$/;"	e	enum:SpvMemoryAccessMask_
SpvMemoryAccessNontemporalShift	lib/vulkan/spirv.h	/^    SpvMemoryAccessNontemporalShift = 2,$/;"	e	enum:SpvMemoryAccessShift_
SpvMemoryAccessShift	lib/vulkan/spirv.h	/^} SpvMemoryAccessShift;$/;"	t	typeref:enum:SpvMemoryAccessShift_
SpvMemoryAccessShift_	lib/vulkan/spirv.h	/^typedef enum SpvMemoryAccessShift_ {$/;"	g
SpvMemoryAccessVolatileMask	lib/vulkan/spirv.h	/^    SpvMemoryAccessVolatileMask = 0x00000001,$/;"	e	enum:SpvMemoryAccessMask_
SpvMemoryAccessVolatileShift	lib/vulkan/spirv.h	/^    SpvMemoryAccessVolatileShift = 0,$/;"	e	enum:SpvMemoryAccessShift_
SpvMemoryModel	lib/vulkan/spirv.h	/^} SpvMemoryModel;$/;"	t	typeref:enum:SpvMemoryModel_
SpvMemoryModelGLSL450	lib/vulkan/spirv.h	/^    SpvMemoryModelGLSL450 = 1,$/;"	e	enum:SpvMemoryModel_
SpvMemoryModelMax	lib/vulkan/spirv.h	/^    SpvMemoryModelMax = 0x7fffffff,$/;"	e	enum:SpvMemoryModel_
SpvMemoryModelOpenCL	lib/vulkan/spirv.h	/^    SpvMemoryModelOpenCL = 2,$/;"	e	enum:SpvMemoryModel_
SpvMemoryModelSimple	lib/vulkan/spirv.h	/^    SpvMemoryModelSimple = 0,$/;"	e	enum:SpvMemoryModel_
SpvMemoryModel_	lib/vulkan/spirv.h	/^typedef enum SpvMemoryModel_ {$/;"	g
SpvMemorySemanticsAcquireMask	lib/vulkan/spirv.h	/^    SpvMemorySemanticsAcquireMask = 0x00000002,$/;"	e	enum:SpvMemorySemanticsMask_
SpvMemorySemanticsAcquireReleaseMask	lib/vulkan/spirv.h	/^    SpvMemorySemanticsAcquireReleaseMask = 0x00000008,$/;"	e	enum:SpvMemorySemanticsMask_
SpvMemorySemanticsAcquireReleaseShift	lib/vulkan/spirv.h	/^    SpvMemorySemanticsAcquireReleaseShift = 3,$/;"	e	enum:SpvMemorySemanticsShift_
SpvMemorySemanticsAcquireShift	lib/vulkan/spirv.h	/^    SpvMemorySemanticsAcquireShift = 1,$/;"	e	enum:SpvMemorySemanticsShift_
SpvMemorySemanticsAtomicCounterMemoryMask	lib/vulkan/spirv.h	/^    SpvMemorySemanticsAtomicCounterMemoryMask = 0x00000400,$/;"	e	enum:SpvMemorySemanticsMask_
SpvMemorySemanticsAtomicCounterMemoryShift	lib/vulkan/spirv.h	/^    SpvMemorySemanticsAtomicCounterMemoryShift = 10,$/;"	e	enum:SpvMemorySemanticsShift_
SpvMemorySemanticsCrossWorkgroupMemoryMask	lib/vulkan/spirv.h	/^    SpvMemorySemanticsCrossWorkgroupMemoryMask = 0x00000200,$/;"	e	enum:SpvMemorySemanticsMask_
SpvMemorySemanticsCrossWorkgroupMemoryShift	lib/vulkan/spirv.h	/^    SpvMemorySemanticsCrossWorkgroupMemoryShift = 9,$/;"	e	enum:SpvMemorySemanticsShift_
SpvMemorySemanticsImageMemoryMask	lib/vulkan/spirv.h	/^    SpvMemorySemanticsImageMemoryMask = 0x00000800,$/;"	e	enum:SpvMemorySemanticsMask_
SpvMemorySemanticsImageMemoryShift	lib/vulkan/spirv.h	/^    SpvMemorySemanticsImageMemoryShift = 11,$/;"	e	enum:SpvMemorySemanticsShift_
SpvMemorySemanticsMask	lib/vulkan/spirv.h	/^} SpvMemorySemanticsMask;$/;"	t	typeref:enum:SpvMemorySemanticsMask_
SpvMemorySemanticsMaskNone	lib/vulkan/spirv.h	/^    SpvMemorySemanticsMaskNone = 0,$/;"	e	enum:SpvMemorySemanticsMask_
SpvMemorySemanticsMask_	lib/vulkan/spirv.h	/^typedef enum SpvMemorySemanticsMask_ {$/;"	g
SpvMemorySemanticsMax	lib/vulkan/spirv.h	/^    SpvMemorySemanticsMax = 0x7fffffff,$/;"	e	enum:SpvMemorySemanticsShift_
SpvMemorySemanticsReleaseMask	lib/vulkan/spirv.h	/^    SpvMemorySemanticsReleaseMask = 0x00000004,$/;"	e	enum:SpvMemorySemanticsMask_
SpvMemorySemanticsReleaseShift	lib/vulkan/spirv.h	/^    SpvMemorySemanticsReleaseShift = 2,$/;"	e	enum:SpvMemorySemanticsShift_
SpvMemorySemanticsSequentiallyConsistentMask	lib/vulkan/spirv.h	/^    SpvMemorySemanticsSequentiallyConsistentMask = 0x00000010,$/;"	e	enum:SpvMemorySemanticsMask_
SpvMemorySemanticsSequentiallyConsistentShift	lib/vulkan/spirv.h	/^    SpvMemorySemanticsSequentiallyConsistentShift = 4,$/;"	e	enum:SpvMemorySemanticsShift_
SpvMemorySemanticsShift	lib/vulkan/spirv.h	/^} SpvMemorySemanticsShift;$/;"	t	typeref:enum:SpvMemorySemanticsShift_
SpvMemorySemanticsShift_	lib/vulkan/spirv.h	/^typedef enum SpvMemorySemanticsShift_ {$/;"	g
SpvMemorySemanticsSubgroupMemoryMask	lib/vulkan/spirv.h	/^    SpvMemorySemanticsSubgroupMemoryMask = 0x00000080,$/;"	e	enum:SpvMemorySemanticsMask_
SpvMemorySemanticsSubgroupMemoryShift	lib/vulkan/spirv.h	/^    SpvMemorySemanticsSubgroupMemoryShift = 7,$/;"	e	enum:SpvMemorySemanticsShift_
SpvMemorySemanticsUniformMemoryMask	lib/vulkan/spirv.h	/^    SpvMemorySemanticsUniformMemoryMask = 0x00000040,$/;"	e	enum:SpvMemorySemanticsMask_
SpvMemorySemanticsUniformMemoryShift	lib/vulkan/spirv.h	/^    SpvMemorySemanticsUniformMemoryShift = 6,$/;"	e	enum:SpvMemorySemanticsShift_
SpvMemorySemanticsWorkgroupMemoryMask	lib/vulkan/spirv.h	/^    SpvMemorySemanticsWorkgroupMemoryMask = 0x00000100,$/;"	e	enum:SpvMemorySemanticsMask_
SpvMemorySemanticsWorkgroupMemoryShift	lib/vulkan/spirv.h	/^    SpvMemorySemanticsWorkgroupMemoryShift = 8,$/;"	e	enum:SpvMemorySemanticsShift_
SpvOp	lib/vulkan/spirv.h	/^} SpvOp;$/;"	t	typeref:enum:SpvOp_
SpvOpAccessChain	lib/vulkan/spirv.h	/^    SpvOpAccessChain = 65,$/;"	e	enum:SpvOp_
SpvOpAll	lib/vulkan/spirv.h	/^    SpvOpAll = 155,$/;"	e	enum:SpvOp_
SpvOpAny	lib/vulkan/spirv.h	/^    SpvOpAny = 154,$/;"	e	enum:SpvOp_
SpvOpArrayLength	lib/vulkan/spirv.h	/^    SpvOpArrayLength = 68,$/;"	e	enum:SpvOp_
SpvOpAtomicAnd	lib/vulkan/spirv.h	/^    SpvOpAtomicAnd = 240,$/;"	e	enum:SpvOp_
SpvOpAtomicCompareExchange	lib/vulkan/spirv.h	/^    SpvOpAtomicCompareExchange = 230,$/;"	e	enum:SpvOp_
SpvOpAtomicCompareExchangeWeak	lib/vulkan/spirv.h	/^    SpvOpAtomicCompareExchangeWeak = 231,$/;"	e	enum:SpvOp_
SpvOpAtomicExchange	lib/vulkan/spirv.h	/^    SpvOpAtomicExchange = 229,$/;"	e	enum:SpvOp_
SpvOpAtomicFlagClear	lib/vulkan/spirv.h	/^    SpvOpAtomicFlagClear = 319,$/;"	e	enum:SpvOp_
SpvOpAtomicFlagTestAndSet	lib/vulkan/spirv.h	/^    SpvOpAtomicFlagTestAndSet = 318,$/;"	e	enum:SpvOp_
SpvOpAtomicIAdd	lib/vulkan/spirv.h	/^    SpvOpAtomicIAdd = 234,$/;"	e	enum:SpvOp_
SpvOpAtomicIDecrement	lib/vulkan/spirv.h	/^    SpvOpAtomicIDecrement = 233,$/;"	e	enum:SpvOp_
SpvOpAtomicIIncrement	lib/vulkan/spirv.h	/^    SpvOpAtomicIIncrement = 232,$/;"	e	enum:SpvOp_
SpvOpAtomicISub	lib/vulkan/spirv.h	/^    SpvOpAtomicISub = 235,$/;"	e	enum:SpvOp_
SpvOpAtomicLoad	lib/vulkan/spirv.h	/^    SpvOpAtomicLoad = 227,$/;"	e	enum:SpvOp_
SpvOpAtomicOr	lib/vulkan/spirv.h	/^    SpvOpAtomicOr = 241,$/;"	e	enum:SpvOp_
SpvOpAtomicSMax	lib/vulkan/spirv.h	/^    SpvOpAtomicSMax = 238,$/;"	e	enum:SpvOp_
SpvOpAtomicSMin	lib/vulkan/spirv.h	/^    SpvOpAtomicSMin = 236,$/;"	e	enum:SpvOp_
SpvOpAtomicStore	lib/vulkan/spirv.h	/^    SpvOpAtomicStore = 228,$/;"	e	enum:SpvOp_
SpvOpAtomicUMax	lib/vulkan/spirv.h	/^    SpvOpAtomicUMax = 239,$/;"	e	enum:SpvOp_
SpvOpAtomicUMin	lib/vulkan/spirv.h	/^    SpvOpAtomicUMin = 237,$/;"	e	enum:SpvOp_
SpvOpAtomicXor	lib/vulkan/spirv.h	/^    SpvOpAtomicXor = 242,$/;"	e	enum:SpvOp_
SpvOpBitCount	lib/vulkan/spirv.h	/^    SpvOpBitCount = 205,$/;"	e	enum:SpvOp_
SpvOpBitFieldInsert	lib/vulkan/spirv.h	/^    SpvOpBitFieldInsert = 201,$/;"	e	enum:SpvOp_
SpvOpBitFieldSExtract	lib/vulkan/spirv.h	/^    SpvOpBitFieldSExtract = 202,$/;"	e	enum:SpvOp_
SpvOpBitFieldUExtract	lib/vulkan/spirv.h	/^    SpvOpBitFieldUExtract = 203,$/;"	e	enum:SpvOp_
SpvOpBitReverse	lib/vulkan/spirv.h	/^    SpvOpBitReverse = 204,$/;"	e	enum:SpvOp_
SpvOpBitcast	lib/vulkan/spirv.h	/^    SpvOpBitcast = 124,$/;"	e	enum:SpvOp_
SpvOpBitwiseAnd	lib/vulkan/spirv.h	/^    SpvOpBitwiseAnd = 199,$/;"	e	enum:SpvOp_
SpvOpBitwiseOr	lib/vulkan/spirv.h	/^    SpvOpBitwiseOr = 197,$/;"	e	enum:SpvOp_
SpvOpBitwiseXor	lib/vulkan/spirv.h	/^    SpvOpBitwiseXor = 198,$/;"	e	enum:SpvOp_
SpvOpBranch	lib/vulkan/spirv.h	/^    SpvOpBranch = 249,$/;"	e	enum:SpvOp_
SpvOpBranchConditional	lib/vulkan/spirv.h	/^    SpvOpBranchConditional = 250,$/;"	e	enum:SpvOp_
SpvOpBuildNDRange	lib/vulkan/spirv.h	/^    SpvOpBuildNDRange = 304,$/;"	e	enum:SpvOp_
SpvOpCapability	lib/vulkan/spirv.h	/^    SpvOpCapability = 17,$/;"	e	enum:SpvOp_
SpvOpCaptureEventProfilingInfo	lib/vulkan/spirv.h	/^    SpvOpCaptureEventProfilingInfo = 302,$/;"	e	enum:SpvOp_
SpvOpCodeMask	lib/vulkan/spirv.h	/^static const unsigned int SpvOpCodeMask = 0xffff;$/;"	v
SpvOpCommitReadPipe	lib/vulkan/spirv.h	/^    SpvOpCommitReadPipe = 280,$/;"	e	enum:SpvOp_
SpvOpCommitWritePipe	lib/vulkan/spirv.h	/^    SpvOpCommitWritePipe = 281,$/;"	e	enum:SpvOp_
SpvOpCompositeConstruct	lib/vulkan/spirv.h	/^    SpvOpCompositeConstruct = 80,$/;"	e	enum:SpvOp_
SpvOpCompositeExtract	lib/vulkan/spirv.h	/^    SpvOpCompositeExtract = 81,$/;"	e	enum:SpvOp_
SpvOpCompositeInsert	lib/vulkan/spirv.h	/^    SpvOpCompositeInsert = 82,$/;"	e	enum:SpvOp_
SpvOpConstant	lib/vulkan/spirv.h	/^    SpvOpConstant = 43,$/;"	e	enum:SpvOp_
SpvOpConstantComposite	lib/vulkan/spirv.h	/^    SpvOpConstantComposite = 44,$/;"	e	enum:SpvOp_
SpvOpConstantFalse	lib/vulkan/spirv.h	/^    SpvOpConstantFalse = 42,$/;"	e	enum:SpvOp_
SpvOpConstantNull	lib/vulkan/spirv.h	/^    SpvOpConstantNull = 46,$/;"	e	enum:SpvOp_
SpvOpConstantPipeStorage	lib/vulkan/spirv.h	/^    SpvOpConstantPipeStorage = 323,$/;"	e	enum:SpvOp_
SpvOpConstantSampler	lib/vulkan/spirv.h	/^    SpvOpConstantSampler = 45,$/;"	e	enum:SpvOp_
SpvOpConstantTrue	lib/vulkan/spirv.h	/^    SpvOpConstantTrue = 41,$/;"	e	enum:SpvOp_
SpvOpControlBarrier	lib/vulkan/spirv.h	/^    SpvOpControlBarrier = 224,$/;"	e	enum:SpvOp_
SpvOpConvertFToS	lib/vulkan/spirv.h	/^    SpvOpConvertFToS = 110,$/;"	e	enum:SpvOp_
SpvOpConvertFToU	lib/vulkan/spirv.h	/^    SpvOpConvertFToU = 109,$/;"	e	enum:SpvOp_
SpvOpConvertPtrToU	lib/vulkan/spirv.h	/^    SpvOpConvertPtrToU = 117,$/;"	e	enum:SpvOp_
SpvOpConvertSToF	lib/vulkan/spirv.h	/^    SpvOpConvertSToF = 111,$/;"	e	enum:SpvOp_
SpvOpConvertUToF	lib/vulkan/spirv.h	/^    SpvOpConvertUToF = 112,$/;"	e	enum:SpvOp_
SpvOpConvertUToPtr	lib/vulkan/spirv.h	/^    SpvOpConvertUToPtr = 120,$/;"	e	enum:SpvOp_
SpvOpCopyMemory	lib/vulkan/spirv.h	/^    SpvOpCopyMemory = 63,$/;"	e	enum:SpvOp_
SpvOpCopyMemorySized	lib/vulkan/spirv.h	/^    SpvOpCopyMemorySized = 64,$/;"	e	enum:SpvOp_
SpvOpCopyObject	lib/vulkan/spirv.h	/^    SpvOpCopyObject = 83,$/;"	e	enum:SpvOp_
SpvOpCreatePipeFromPipeStorage	lib/vulkan/spirv.h	/^    SpvOpCreatePipeFromPipeStorage = 324,$/;"	e	enum:SpvOp_
SpvOpCreateUserEvent	lib/vulkan/spirv.h	/^    SpvOpCreateUserEvent = 299,$/;"	e	enum:SpvOp_
SpvOpDPdx	lib/vulkan/spirv.h	/^    SpvOpDPdx = 207,$/;"	e	enum:SpvOp_
SpvOpDPdxCoarse	lib/vulkan/spirv.h	/^    SpvOpDPdxCoarse = 213,$/;"	e	enum:SpvOp_
SpvOpDPdxFine	lib/vulkan/spirv.h	/^    SpvOpDPdxFine = 210,$/;"	e	enum:SpvOp_
SpvOpDPdy	lib/vulkan/spirv.h	/^    SpvOpDPdy = 208,$/;"	e	enum:SpvOp_
SpvOpDPdyCoarse	lib/vulkan/spirv.h	/^    SpvOpDPdyCoarse = 214,$/;"	e	enum:SpvOp_
SpvOpDPdyFine	lib/vulkan/spirv.h	/^    SpvOpDPdyFine = 211,$/;"	e	enum:SpvOp_
SpvOpDecorate	lib/vulkan/spirv.h	/^    SpvOpDecorate = 71,$/;"	e	enum:SpvOp_
SpvOpDecorationGroup	lib/vulkan/spirv.h	/^    SpvOpDecorationGroup = 73,$/;"	e	enum:SpvOp_
SpvOpDot	lib/vulkan/spirv.h	/^    SpvOpDot = 148,$/;"	e	enum:SpvOp_
SpvOpEmitStreamVertex	lib/vulkan/spirv.h	/^    SpvOpEmitStreamVertex = 220,$/;"	e	enum:SpvOp_
SpvOpEmitVertex	lib/vulkan/spirv.h	/^    SpvOpEmitVertex = 218,$/;"	e	enum:SpvOp_
SpvOpEndPrimitive	lib/vulkan/spirv.h	/^    SpvOpEndPrimitive = 219,$/;"	e	enum:SpvOp_
SpvOpEndStreamPrimitive	lib/vulkan/spirv.h	/^    SpvOpEndStreamPrimitive = 221,$/;"	e	enum:SpvOp_
SpvOpEnqueueKernel	lib/vulkan/spirv.h	/^    SpvOpEnqueueKernel = 292,$/;"	e	enum:SpvOp_
SpvOpEnqueueMarker	lib/vulkan/spirv.h	/^    SpvOpEnqueueMarker = 291,$/;"	e	enum:SpvOp_
SpvOpEntryPoint	lib/vulkan/spirv.h	/^    SpvOpEntryPoint = 15,$/;"	e	enum:SpvOp_
SpvOpExecutionMode	lib/vulkan/spirv.h	/^    SpvOpExecutionMode = 16,$/;"	e	enum:SpvOp_
SpvOpExtInst	lib/vulkan/spirv.h	/^    SpvOpExtInst = 12,$/;"	e	enum:SpvOp_
SpvOpExtInstImport	lib/vulkan/spirv.h	/^    SpvOpExtInstImport = 11,$/;"	e	enum:SpvOp_
SpvOpExtension	lib/vulkan/spirv.h	/^    SpvOpExtension = 10,$/;"	e	enum:SpvOp_
SpvOpFAdd	lib/vulkan/spirv.h	/^    SpvOpFAdd = 129,$/;"	e	enum:SpvOp_
SpvOpFConvert	lib/vulkan/spirv.h	/^    SpvOpFConvert = 115,$/;"	e	enum:SpvOp_
SpvOpFDiv	lib/vulkan/spirv.h	/^    SpvOpFDiv = 136,$/;"	e	enum:SpvOp_
SpvOpFMod	lib/vulkan/spirv.h	/^    SpvOpFMod = 141,$/;"	e	enum:SpvOp_
SpvOpFMul	lib/vulkan/spirv.h	/^    SpvOpFMul = 133,$/;"	e	enum:SpvOp_
SpvOpFNegate	lib/vulkan/spirv.h	/^    SpvOpFNegate = 127,$/;"	e	enum:SpvOp_
SpvOpFOrdEqual	lib/vulkan/spirv.h	/^    SpvOpFOrdEqual = 180,$/;"	e	enum:SpvOp_
SpvOpFOrdGreaterThan	lib/vulkan/spirv.h	/^    SpvOpFOrdGreaterThan = 186,$/;"	e	enum:SpvOp_
SpvOpFOrdGreaterThanEqual	lib/vulkan/spirv.h	/^    SpvOpFOrdGreaterThanEqual = 190,$/;"	e	enum:SpvOp_
SpvOpFOrdLessThan	lib/vulkan/spirv.h	/^    SpvOpFOrdLessThan = 184,$/;"	e	enum:SpvOp_
SpvOpFOrdLessThanEqual	lib/vulkan/spirv.h	/^    SpvOpFOrdLessThanEqual = 188,$/;"	e	enum:SpvOp_
SpvOpFOrdNotEqual	lib/vulkan/spirv.h	/^    SpvOpFOrdNotEqual = 182,$/;"	e	enum:SpvOp_
SpvOpFRem	lib/vulkan/spirv.h	/^    SpvOpFRem = 140,$/;"	e	enum:SpvOp_
SpvOpFSub	lib/vulkan/spirv.h	/^    SpvOpFSub = 131,$/;"	e	enum:SpvOp_
SpvOpFUnordEqual	lib/vulkan/spirv.h	/^    SpvOpFUnordEqual = 181,$/;"	e	enum:SpvOp_
SpvOpFUnordGreaterThan	lib/vulkan/spirv.h	/^    SpvOpFUnordGreaterThan = 187,$/;"	e	enum:SpvOp_
SpvOpFUnordGreaterThanEqual	lib/vulkan/spirv.h	/^    SpvOpFUnordGreaterThanEqual = 191,$/;"	e	enum:SpvOp_
SpvOpFUnordLessThan	lib/vulkan/spirv.h	/^    SpvOpFUnordLessThan = 185,$/;"	e	enum:SpvOp_
SpvOpFUnordLessThanEqual	lib/vulkan/spirv.h	/^    SpvOpFUnordLessThanEqual = 189,$/;"	e	enum:SpvOp_
SpvOpFUnordNotEqual	lib/vulkan/spirv.h	/^    SpvOpFUnordNotEqual = 183,$/;"	e	enum:SpvOp_
SpvOpFunction	lib/vulkan/spirv.h	/^    SpvOpFunction = 54,$/;"	e	enum:SpvOp_
SpvOpFunctionCall	lib/vulkan/spirv.h	/^    SpvOpFunctionCall = 57,$/;"	e	enum:SpvOp_
SpvOpFunctionEnd	lib/vulkan/spirv.h	/^    SpvOpFunctionEnd = 56,$/;"	e	enum:SpvOp_
SpvOpFunctionParameter	lib/vulkan/spirv.h	/^    SpvOpFunctionParameter = 55,$/;"	e	enum:SpvOp_
SpvOpFwidth	lib/vulkan/spirv.h	/^    SpvOpFwidth = 209,$/;"	e	enum:SpvOp_
SpvOpFwidthCoarse	lib/vulkan/spirv.h	/^    SpvOpFwidthCoarse = 215,$/;"	e	enum:SpvOp_
SpvOpFwidthFine	lib/vulkan/spirv.h	/^    SpvOpFwidthFine = 212,$/;"	e	enum:SpvOp_
SpvOpGenericCastToPtr	lib/vulkan/spirv.h	/^    SpvOpGenericCastToPtr = 122,$/;"	e	enum:SpvOp_
SpvOpGenericCastToPtrExplicit	lib/vulkan/spirv.h	/^    SpvOpGenericCastToPtrExplicit = 123,$/;"	e	enum:SpvOp_
SpvOpGenericPtrMemSemantics	lib/vulkan/spirv.h	/^    SpvOpGenericPtrMemSemantics = 69,$/;"	e	enum:SpvOp_
SpvOpGetDefaultQueue	lib/vulkan/spirv.h	/^    SpvOpGetDefaultQueue = 303,$/;"	e	enum:SpvOp_
SpvOpGetKernelLocalSizeForSubgroupCount	lib/vulkan/spirv.h	/^    SpvOpGetKernelLocalSizeForSubgroupCount = 325,$/;"	e	enum:SpvOp_
SpvOpGetKernelMaxNumSubgroups	lib/vulkan/spirv.h	/^    SpvOpGetKernelMaxNumSubgroups = 326,$/;"	e	enum:SpvOp_
SpvOpGetKernelNDrangeMaxSubGroupSize	lib/vulkan/spirv.h	/^    SpvOpGetKernelNDrangeMaxSubGroupSize = 294,$/;"	e	enum:SpvOp_
SpvOpGetKernelNDrangeSubGroupCount	lib/vulkan/spirv.h	/^    SpvOpGetKernelNDrangeSubGroupCount = 293,$/;"	e	enum:SpvOp_
SpvOpGetKernelPreferredWorkGroupSizeMultiple	lib/vulkan/spirv.h	/^    SpvOpGetKernelPreferredWorkGroupSizeMultiple = 296,$/;"	e	enum:SpvOp_
SpvOpGetKernelWorkGroupSize	lib/vulkan/spirv.h	/^    SpvOpGetKernelWorkGroupSize = 295,$/;"	e	enum:SpvOp_
SpvOpGetMaxPipePackets	lib/vulkan/spirv.h	/^    SpvOpGetMaxPipePackets = 284,$/;"	e	enum:SpvOp_
SpvOpGetNumPipePackets	lib/vulkan/spirv.h	/^    SpvOpGetNumPipePackets = 283,$/;"	e	enum:SpvOp_
SpvOpGroupAll	lib/vulkan/spirv.h	/^    SpvOpGroupAll = 261,$/;"	e	enum:SpvOp_
SpvOpGroupAny	lib/vulkan/spirv.h	/^    SpvOpGroupAny = 262,$/;"	e	enum:SpvOp_
SpvOpGroupAsyncCopy	lib/vulkan/spirv.h	/^    SpvOpGroupAsyncCopy = 259,$/;"	e	enum:SpvOp_
SpvOpGroupBroadcast	lib/vulkan/spirv.h	/^    SpvOpGroupBroadcast = 263,$/;"	e	enum:SpvOp_
SpvOpGroupCommitReadPipe	lib/vulkan/spirv.h	/^    SpvOpGroupCommitReadPipe = 287,$/;"	e	enum:SpvOp_
SpvOpGroupCommitWritePipe	lib/vulkan/spirv.h	/^    SpvOpGroupCommitWritePipe = 288,$/;"	e	enum:SpvOp_
SpvOpGroupDecorate	lib/vulkan/spirv.h	/^    SpvOpGroupDecorate = 74,$/;"	e	enum:SpvOp_
SpvOpGroupFAdd	lib/vulkan/spirv.h	/^    SpvOpGroupFAdd = 265,$/;"	e	enum:SpvOp_
SpvOpGroupFMax	lib/vulkan/spirv.h	/^    SpvOpGroupFMax = 269,$/;"	e	enum:SpvOp_
SpvOpGroupFMin	lib/vulkan/spirv.h	/^    SpvOpGroupFMin = 266,$/;"	e	enum:SpvOp_
SpvOpGroupIAdd	lib/vulkan/spirv.h	/^    SpvOpGroupIAdd = 264,$/;"	e	enum:SpvOp_
SpvOpGroupMemberDecorate	lib/vulkan/spirv.h	/^    SpvOpGroupMemberDecorate = 75,$/;"	e	enum:SpvOp_
SpvOpGroupReserveReadPipePackets	lib/vulkan/spirv.h	/^    SpvOpGroupReserveReadPipePackets = 285,$/;"	e	enum:SpvOp_
SpvOpGroupReserveWritePipePackets	lib/vulkan/spirv.h	/^    SpvOpGroupReserveWritePipePackets = 286,$/;"	e	enum:SpvOp_
SpvOpGroupSMax	lib/vulkan/spirv.h	/^    SpvOpGroupSMax = 271,$/;"	e	enum:SpvOp_
SpvOpGroupSMin	lib/vulkan/spirv.h	/^    SpvOpGroupSMin = 268,$/;"	e	enum:SpvOp_
SpvOpGroupUMax	lib/vulkan/spirv.h	/^    SpvOpGroupUMax = 270,$/;"	e	enum:SpvOp_
SpvOpGroupUMin	lib/vulkan/spirv.h	/^    SpvOpGroupUMin = 267,$/;"	e	enum:SpvOp_
SpvOpGroupWaitEvents	lib/vulkan/spirv.h	/^    SpvOpGroupWaitEvents = 260,$/;"	e	enum:SpvOp_
SpvOpIAdd	lib/vulkan/spirv.h	/^    SpvOpIAdd = 128,$/;"	e	enum:SpvOp_
SpvOpIAddCarry	lib/vulkan/spirv.h	/^    SpvOpIAddCarry = 149,$/;"	e	enum:SpvOp_
SpvOpIEqual	lib/vulkan/spirv.h	/^    SpvOpIEqual = 170,$/;"	e	enum:SpvOp_
SpvOpIMul	lib/vulkan/spirv.h	/^    SpvOpIMul = 132,$/;"	e	enum:SpvOp_
SpvOpINotEqual	lib/vulkan/spirv.h	/^    SpvOpINotEqual = 171,$/;"	e	enum:SpvOp_
SpvOpISub	lib/vulkan/spirv.h	/^    SpvOpISub = 130,$/;"	e	enum:SpvOp_
SpvOpISubBorrow	lib/vulkan/spirv.h	/^    SpvOpISubBorrow = 150,$/;"	e	enum:SpvOp_
SpvOpImage	lib/vulkan/spirv.h	/^    SpvOpImage = 100,$/;"	e	enum:SpvOp_
SpvOpImageDrefGather	lib/vulkan/spirv.h	/^    SpvOpImageDrefGather = 97,$/;"	e	enum:SpvOp_
SpvOpImageFetch	lib/vulkan/spirv.h	/^    SpvOpImageFetch = 95,$/;"	e	enum:SpvOp_
SpvOpImageGather	lib/vulkan/spirv.h	/^    SpvOpImageGather = 96,$/;"	e	enum:SpvOp_
SpvOpImageQueryFormat	lib/vulkan/spirv.h	/^    SpvOpImageQueryFormat = 101,$/;"	e	enum:SpvOp_
SpvOpImageQueryLevels	lib/vulkan/spirv.h	/^    SpvOpImageQueryLevels = 106,$/;"	e	enum:SpvOp_
SpvOpImageQueryLod	lib/vulkan/spirv.h	/^    SpvOpImageQueryLod = 105,$/;"	e	enum:SpvOp_
SpvOpImageQueryOrder	lib/vulkan/spirv.h	/^    SpvOpImageQueryOrder = 102,$/;"	e	enum:SpvOp_
SpvOpImageQuerySamples	lib/vulkan/spirv.h	/^    SpvOpImageQuerySamples = 107,$/;"	e	enum:SpvOp_
SpvOpImageQuerySize	lib/vulkan/spirv.h	/^    SpvOpImageQuerySize = 104,$/;"	e	enum:SpvOp_
SpvOpImageQuerySizeLod	lib/vulkan/spirv.h	/^    SpvOpImageQuerySizeLod = 103,$/;"	e	enum:SpvOp_
SpvOpImageRead	lib/vulkan/spirv.h	/^    SpvOpImageRead = 98,$/;"	e	enum:SpvOp_
SpvOpImageSampleDrefExplicitLod	lib/vulkan/spirv.h	/^    SpvOpImageSampleDrefExplicitLod = 90,$/;"	e	enum:SpvOp_
SpvOpImageSampleDrefImplicitLod	lib/vulkan/spirv.h	/^    SpvOpImageSampleDrefImplicitLod = 89,$/;"	e	enum:SpvOp_
SpvOpImageSampleExplicitLod	lib/vulkan/spirv.h	/^    SpvOpImageSampleExplicitLod = 88,$/;"	e	enum:SpvOp_
SpvOpImageSampleImplicitLod	lib/vulkan/spirv.h	/^    SpvOpImageSampleImplicitLod = 87,$/;"	e	enum:SpvOp_
SpvOpImageSampleProjDrefExplicitLod	lib/vulkan/spirv.h	/^    SpvOpImageSampleProjDrefExplicitLod = 94,$/;"	e	enum:SpvOp_
SpvOpImageSampleProjDrefImplicitLod	lib/vulkan/spirv.h	/^    SpvOpImageSampleProjDrefImplicitLod = 93,$/;"	e	enum:SpvOp_
SpvOpImageSampleProjExplicitLod	lib/vulkan/spirv.h	/^    SpvOpImageSampleProjExplicitLod = 92,$/;"	e	enum:SpvOp_
SpvOpImageSampleProjImplicitLod	lib/vulkan/spirv.h	/^    SpvOpImageSampleProjImplicitLod = 91,$/;"	e	enum:SpvOp_
SpvOpImageSparseDrefGather	lib/vulkan/spirv.h	/^    SpvOpImageSparseDrefGather = 315,$/;"	e	enum:SpvOp_
SpvOpImageSparseFetch	lib/vulkan/spirv.h	/^    SpvOpImageSparseFetch = 313,$/;"	e	enum:SpvOp_
SpvOpImageSparseGather	lib/vulkan/spirv.h	/^    SpvOpImageSparseGather = 314,$/;"	e	enum:SpvOp_
SpvOpImageSparseRead	lib/vulkan/spirv.h	/^    SpvOpImageSparseRead = 320,$/;"	e	enum:SpvOp_
SpvOpImageSparseSampleDrefExplicitLod	lib/vulkan/spirv.h	/^    SpvOpImageSparseSampleDrefExplicitLod = 308,$/;"	e	enum:SpvOp_
SpvOpImageSparseSampleDrefImplicitLod	lib/vulkan/spirv.h	/^    SpvOpImageSparseSampleDrefImplicitLod = 307,$/;"	e	enum:SpvOp_
SpvOpImageSparseSampleExplicitLod	lib/vulkan/spirv.h	/^    SpvOpImageSparseSampleExplicitLod = 306,$/;"	e	enum:SpvOp_
SpvOpImageSparseSampleImplicitLod	lib/vulkan/spirv.h	/^    SpvOpImageSparseSampleImplicitLod = 305,$/;"	e	enum:SpvOp_
SpvOpImageSparseSampleProjDrefExplicitLod	lib/vulkan/spirv.h	/^    SpvOpImageSparseSampleProjDrefExplicitLod = 312,$/;"	e	enum:SpvOp_
SpvOpImageSparseSampleProjDrefImplicitLod	lib/vulkan/spirv.h	/^    SpvOpImageSparseSampleProjDrefImplicitLod = 311,$/;"	e	enum:SpvOp_
SpvOpImageSparseSampleProjExplicitLod	lib/vulkan/spirv.h	/^    SpvOpImageSparseSampleProjExplicitLod = 310,$/;"	e	enum:SpvOp_
SpvOpImageSparseSampleProjImplicitLod	lib/vulkan/spirv.h	/^    SpvOpImageSparseSampleProjImplicitLod = 309,$/;"	e	enum:SpvOp_
SpvOpImageSparseTexelsResident	lib/vulkan/spirv.h	/^    SpvOpImageSparseTexelsResident = 316,$/;"	e	enum:SpvOp_
SpvOpImageTexelPointer	lib/vulkan/spirv.h	/^    SpvOpImageTexelPointer = 60,$/;"	e	enum:SpvOp_
SpvOpImageWrite	lib/vulkan/spirv.h	/^    SpvOpImageWrite = 99,$/;"	e	enum:SpvOp_
SpvOpInBoundsAccessChain	lib/vulkan/spirv.h	/^    SpvOpInBoundsAccessChain = 66,$/;"	e	enum:SpvOp_
SpvOpInBoundsPtrAccessChain	lib/vulkan/spirv.h	/^    SpvOpInBoundsPtrAccessChain = 70,$/;"	e	enum:SpvOp_
SpvOpIsFinite	lib/vulkan/spirv.h	/^    SpvOpIsFinite = 158,$/;"	e	enum:SpvOp_
SpvOpIsInf	lib/vulkan/spirv.h	/^    SpvOpIsInf = 157,$/;"	e	enum:SpvOp_
SpvOpIsNan	lib/vulkan/spirv.h	/^    SpvOpIsNan = 156,$/;"	e	enum:SpvOp_
SpvOpIsNormal	lib/vulkan/spirv.h	/^    SpvOpIsNormal = 159,$/;"	e	enum:SpvOp_
SpvOpIsValidEvent	lib/vulkan/spirv.h	/^    SpvOpIsValidEvent = 300,$/;"	e	enum:SpvOp_
SpvOpIsValidReserveId	lib/vulkan/spirv.h	/^    SpvOpIsValidReserveId = 282,$/;"	e	enum:SpvOp_
SpvOpKill	lib/vulkan/spirv.h	/^    SpvOpKill = 252,$/;"	e	enum:SpvOp_
SpvOpLabel	lib/vulkan/spirv.h	/^    SpvOpLabel = 248,$/;"	e	enum:SpvOp_
SpvOpLessOrGreater	lib/vulkan/spirv.h	/^    SpvOpLessOrGreater = 161,$/;"	e	enum:SpvOp_
SpvOpLifetimeStart	lib/vulkan/spirv.h	/^    SpvOpLifetimeStart = 256,$/;"	e	enum:SpvOp_
SpvOpLifetimeStop	lib/vulkan/spirv.h	/^    SpvOpLifetimeStop = 257,$/;"	e	enum:SpvOp_
SpvOpLine	lib/vulkan/spirv.h	/^    SpvOpLine = 8,$/;"	e	enum:SpvOp_
SpvOpLoad	lib/vulkan/spirv.h	/^    SpvOpLoad = 61,$/;"	e	enum:SpvOp_
SpvOpLogicalAnd	lib/vulkan/spirv.h	/^    SpvOpLogicalAnd = 167,$/;"	e	enum:SpvOp_
SpvOpLogicalEqual	lib/vulkan/spirv.h	/^    SpvOpLogicalEqual = 164,$/;"	e	enum:SpvOp_
SpvOpLogicalNot	lib/vulkan/spirv.h	/^    SpvOpLogicalNot = 168,$/;"	e	enum:SpvOp_
SpvOpLogicalNotEqual	lib/vulkan/spirv.h	/^    SpvOpLogicalNotEqual = 165,$/;"	e	enum:SpvOp_
SpvOpLogicalOr	lib/vulkan/spirv.h	/^    SpvOpLogicalOr = 166,$/;"	e	enum:SpvOp_
SpvOpLoopMerge	lib/vulkan/spirv.h	/^    SpvOpLoopMerge = 246,$/;"	e	enum:SpvOp_
SpvOpMatrixTimesMatrix	lib/vulkan/spirv.h	/^    SpvOpMatrixTimesMatrix = 146,$/;"	e	enum:SpvOp_
SpvOpMatrixTimesScalar	lib/vulkan/spirv.h	/^    SpvOpMatrixTimesScalar = 143,$/;"	e	enum:SpvOp_
SpvOpMatrixTimesVector	lib/vulkan/spirv.h	/^    SpvOpMatrixTimesVector = 145,$/;"	e	enum:SpvOp_
SpvOpMax	lib/vulkan/spirv.h	/^    SpvOpMax = 0x7fffffff,$/;"	e	enum:SpvOp_
SpvOpMemberDecorate	lib/vulkan/spirv.h	/^    SpvOpMemberDecorate = 72,$/;"	e	enum:SpvOp_
SpvOpMemberName	lib/vulkan/spirv.h	/^    SpvOpMemberName = 6,$/;"	e	enum:SpvOp_
SpvOpMemoryBarrier	lib/vulkan/spirv.h	/^    SpvOpMemoryBarrier = 225,$/;"	e	enum:SpvOp_
SpvOpMemoryModel	lib/vulkan/spirv.h	/^    SpvOpMemoryModel = 14,$/;"	e	enum:SpvOp_
SpvOpMemoryNamedBarrier	lib/vulkan/spirv.h	/^    SpvOpMemoryNamedBarrier = 329,$/;"	e	enum:SpvOp_
SpvOpModuleProcessed	lib/vulkan/spirv.h	/^    SpvOpModuleProcessed = 330,$/;"	e	enum:SpvOp_
SpvOpName	lib/vulkan/spirv.h	/^    SpvOpName = 5,$/;"	e	enum:SpvOp_
SpvOpNamedBarrierInitialize	lib/vulkan/spirv.h	/^    SpvOpNamedBarrierInitialize = 328,$/;"	e	enum:SpvOp_
SpvOpNoLine	lib/vulkan/spirv.h	/^    SpvOpNoLine = 317,$/;"	e	enum:SpvOp_
SpvOpNop	lib/vulkan/spirv.h	/^    SpvOpNop = 0,$/;"	e	enum:SpvOp_
SpvOpNot	lib/vulkan/spirv.h	/^    SpvOpNot = 200,$/;"	e	enum:SpvOp_
SpvOpOrdered	lib/vulkan/spirv.h	/^    SpvOpOrdered = 162,$/;"	e	enum:SpvOp_
SpvOpOuterProduct	lib/vulkan/spirv.h	/^    SpvOpOuterProduct = 147,$/;"	e	enum:SpvOp_
SpvOpPhi	lib/vulkan/spirv.h	/^    SpvOpPhi = 245,$/;"	e	enum:SpvOp_
SpvOpPtrAccessChain	lib/vulkan/spirv.h	/^    SpvOpPtrAccessChain = 67,$/;"	e	enum:SpvOp_
SpvOpPtrCastToGeneric	lib/vulkan/spirv.h	/^    SpvOpPtrCastToGeneric = 121,$/;"	e	enum:SpvOp_
SpvOpQuantizeToF16	lib/vulkan/spirv.h	/^    SpvOpQuantizeToF16 = 116,$/;"	e	enum:SpvOp_
SpvOpReadPipe	lib/vulkan/spirv.h	/^    SpvOpReadPipe = 274,$/;"	e	enum:SpvOp_
SpvOpReleaseEvent	lib/vulkan/spirv.h	/^    SpvOpReleaseEvent = 298,$/;"	e	enum:SpvOp_
SpvOpReserveReadPipePackets	lib/vulkan/spirv.h	/^    SpvOpReserveReadPipePackets = 278,$/;"	e	enum:SpvOp_
SpvOpReserveWritePipePackets	lib/vulkan/spirv.h	/^    SpvOpReserveWritePipePackets = 279,$/;"	e	enum:SpvOp_
SpvOpReservedReadPipe	lib/vulkan/spirv.h	/^    SpvOpReservedReadPipe = 276,$/;"	e	enum:SpvOp_
SpvOpReservedWritePipe	lib/vulkan/spirv.h	/^    SpvOpReservedWritePipe = 277,$/;"	e	enum:SpvOp_
SpvOpRetainEvent	lib/vulkan/spirv.h	/^    SpvOpRetainEvent = 297,$/;"	e	enum:SpvOp_
SpvOpReturn	lib/vulkan/spirv.h	/^    SpvOpReturn = 253,$/;"	e	enum:SpvOp_
SpvOpReturnValue	lib/vulkan/spirv.h	/^    SpvOpReturnValue = 254,$/;"	e	enum:SpvOp_
SpvOpSConvert	lib/vulkan/spirv.h	/^    SpvOpSConvert = 114,$/;"	e	enum:SpvOp_
SpvOpSDiv	lib/vulkan/spirv.h	/^    SpvOpSDiv = 135,$/;"	e	enum:SpvOp_
SpvOpSGreaterThan	lib/vulkan/spirv.h	/^    SpvOpSGreaterThan = 173,$/;"	e	enum:SpvOp_
SpvOpSGreaterThanEqual	lib/vulkan/spirv.h	/^    SpvOpSGreaterThanEqual = 175,$/;"	e	enum:SpvOp_
SpvOpSLessThan	lib/vulkan/spirv.h	/^    SpvOpSLessThan = 177,$/;"	e	enum:SpvOp_
SpvOpSLessThanEqual	lib/vulkan/spirv.h	/^    SpvOpSLessThanEqual = 179,$/;"	e	enum:SpvOp_
SpvOpSMod	lib/vulkan/spirv.h	/^    SpvOpSMod = 139,$/;"	e	enum:SpvOp_
SpvOpSMulExtended	lib/vulkan/spirv.h	/^    SpvOpSMulExtended = 152,$/;"	e	enum:SpvOp_
SpvOpSNegate	lib/vulkan/spirv.h	/^    SpvOpSNegate = 126,$/;"	e	enum:SpvOp_
SpvOpSRem	lib/vulkan/spirv.h	/^    SpvOpSRem = 138,$/;"	e	enum:SpvOp_
SpvOpSampledImage	lib/vulkan/spirv.h	/^    SpvOpSampledImage = 86,$/;"	e	enum:SpvOp_
SpvOpSatConvertSToU	lib/vulkan/spirv.h	/^    SpvOpSatConvertSToU = 118,$/;"	e	enum:SpvOp_
SpvOpSatConvertUToS	lib/vulkan/spirv.h	/^    SpvOpSatConvertUToS = 119,$/;"	e	enum:SpvOp_
SpvOpSelect	lib/vulkan/spirv.h	/^    SpvOpSelect = 169,$/;"	e	enum:SpvOp_
SpvOpSelectionMerge	lib/vulkan/spirv.h	/^    SpvOpSelectionMerge = 247,$/;"	e	enum:SpvOp_
SpvOpSetUserEventStatus	lib/vulkan/spirv.h	/^    SpvOpSetUserEventStatus = 301,$/;"	e	enum:SpvOp_
SpvOpShiftLeftLogical	lib/vulkan/spirv.h	/^    SpvOpShiftLeftLogical = 196,$/;"	e	enum:SpvOp_
SpvOpShiftRightArithmetic	lib/vulkan/spirv.h	/^    SpvOpShiftRightArithmetic = 195,$/;"	e	enum:SpvOp_
SpvOpShiftRightLogical	lib/vulkan/spirv.h	/^    SpvOpShiftRightLogical = 194,$/;"	e	enum:SpvOp_
SpvOpSignBitSet	lib/vulkan/spirv.h	/^    SpvOpSignBitSet = 160,$/;"	e	enum:SpvOp_
SpvOpSizeOf	lib/vulkan/spirv.h	/^    SpvOpSizeOf = 321,$/;"	e	enum:SpvOp_
SpvOpSource	lib/vulkan/spirv.h	/^    SpvOpSource = 3,$/;"	e	enum:SpvOp_
SpvOpSourceContinued	lib/vulkan/spirv.h	/^    SpvOpSourceContinued = 2,$/;"	e	enum:SpvOp_
SpvOpSourceExtension	lib/vulkan/spirv.h	/^    SpvOpSourceExtension = 4,$/;"	e	enum:SpvOp_
SpvOpSpecConstant	lib/vulkan/spirv.h	/^    SpvOpSpecConstant = 50,$/;"	e	enum:SpvOp_
SpvOpSpecConstantComposite	lib/vulkan/spirv.h	/^    SpvOpSpecConstantComposite = 51,$/;"	e	enum:SpvOp_
SpvOpSpecConstantFalse	lib/vulkan/spirv.h	/^    SpvOpSpecConstantFalse = 49,$/;"	e	enum:SpvOp_
SpvOpSpecConstantOp	lib/vulkan/spirv.h	/^    SpvOpSpecConstantOp = 52,$/;"	e	enum:SpvOp_
SpvOpSpecConstantTrue	lib/vulkan/spirv.h	/^    SpvOpSpecConstantTrue = 48,$/;"	e	enum:SpvOp_
SpvOpStore	lib/vulkan/spirv.h	/^    SpvOpStore = 62,$/;"	e	enum:SpvOp_
SpvOpString	lib/vulkan/spirv.h	/^    SpvOpString = 7,$/;"	e	enum:SpvOp_
SpvOpSwitch	lib/vulkan/spirv.h	/^    SpvOpSwitch = 251,$/;"	e	enum:SpvOp_
SpvOpTranspose	lib/vulkan/spirv.h	/^    SpvOpTranspose = 84,$/;"	e	enum:SpvOp_
SpvOpTypeArray	lib/vulkan/spirv.h	/^    SpvOpTypeArray = 28,$/;"	e	enum:SpvOp_
SpvOpTypeBool	lib/vulkan/spirv.h	/^    SpvOpTypeBool = 20,$/;"	e	enum:SpvOp_
SpvOpTypeDeviceEvent	lib/vulkan/spirv.h	/^    SpvOpTypeDeviceEvent = 35,$/;"	e	enum:SpvOp_
SpvOpTypeEvent	lib/vulkan/spirv.h	/^    SpvOpTypeEvent = 34,$/;"	e	enum:SpvOp_
SpvOpTypeFloat	lib/vulkan/spirv.h	/^    SpvOpTypeFloat = 22,$/;"	e	enum:SpvOp_
SpvOpTypeForwardPointer	lib/vulkan/spirv.h	/^    SpvOpTypeForwardPointer = 39,$/;"	e	enum:SpvOp_
SpvOpTypeFunction	lib/vulkan/spirv.h	/^    SpvOpTypeFunction = 33,$/;"	e	enum:SpvOp_
SpvOpTypeImage	lib/vulkan/spirv.h	/^    SpvOpTypeImage = 25,$/;"	e	enum:SpvOp_
SpvOpTypeInt	lib/vulkan/spirv.h	/^    SpvOpTypeInt = 21,$/;"	e	enum:SpvOp_
SpvOpTypeMatrix	lib/vulkan/spirv.h	/^    SpvOpTypeMatrix = 24,$/;"	e	enum:SpvOp_
SpvOpTypeNamedBarrier	lib/vulkan/spirv.h	/^    SpvOpTypeNamedBarrier = 327,$/;"	e	enum:SpvOp_
SpvOpTypeOpaque	lib/vulkan/spirv.h	/^    SpvOpTypeOpaque = 31,$/;"	e	enum:SpvOp_
SpvOpTypePipe	lib/vulkan/spirv.h	/^    SpvOpTypePipe = 38,$/;"	e	enum:SpvOp_
SpvOpTypePipeStorage	lib/vulkan/spirv.h	/^    SpvOpTypePipeStorage = 322,$/;"	e	enum:SpvOp_
SpvOpTypePointer	lib/vulkan/spirv.h	/^    SpvOpTypePointer = 32,$/;"	e	enum:SpvOp_
SpvOpTypeQueue	lib/vulkan/spirv.h	/^    SpvOpTypeQueue = 37,$/;"	e	enum:SpvOp_
SpvOpTypeReserveId	lib/vulkan/spirv.h	/^    SpvOpTypeReserveId = 36,$/;"	e	enum:SpvOp_
SpvOpTypeRuntimeArray	lib/vulkan/spirv.h	/^    SpvOpTypeRuntimeArray = 29,$/;"	e	enum:SpvOp_
SpvOpTypeSampledImage	lib/vulkan/spirv.h	/^    SpvOpTypeSampledImage = 27,$/;"	e	enum:SpvOp_
SpvOpTypeSampler	lib/vulkan/spirv.h	/^    SpvOpTypeSampler = 26,$/;"	e	enum:SpvOp_
SpvOpTypeStruct	lib/vulkan/spirv.h	/^    SpvOpTypeStruct = 30,$/;"	e	enum:SpvOp_
SpvOpTypeVector	lib/vulkan/spirv.h	/^    SpvOpTypeVector = 23,$/;"	e	enum:SpvOp_
SpvOpTypeVoid	lib/vulkan/spirv.h	/^    SpvOpTypeVoid = 19,$/;"	e	enum:SpvOp_
SpvOpUConvert	lib/vulkan/spirv.h	/^    SpvOpUConvert = 113,$/;"	e	enum:SpvOp_
SpvOpUDiv	lib/vulkan/spirv.h	/^    SpvOpUDiv = 134,$/;"	e	enum:SpvOp_
SpvOpUGreaterThan	lib/vulkan/spirv.h	/^    SpvOpUGreaterThan = 172,$/;"	e	enum:SpvOp_
SpvOpUGreaterThanEqual	lib/vulkan/spirv.h	/^    SpvOpUGreaterThanEqual = 174,$/;"	e	enum:SpvOp_
SpvOpULessThan	lib/vulkan/spirv.h	/^    SpvOpULessThan = 176,$/;"	e	enum:SpvOp_
SpvOpULessThanEqual	lib/vulkan/spirv.h	/^    SpvOpULessThanEqual = 178,$/;"	e	enum:SpvOp_
SpvOpUMod	lib/vulkan/spirv.h	/^    SpvOpUMod = 137,$/;"	e	enum:SpvOp_
SpvOpUMulExtended	lib/vulkan/spirv.h	/^    SpvOpUMulExtended = 151,$/;"	e	enum:SpvOp_
SpvOpUndef	lib/vulkan/spirv.h	/^    SpvOpUndef = 1,$/;"	e	enum:SpvOp_
SpvOpUnordered	lib/vulkan/spirv.h	/^    SpvOpUnordered = 163,$/;"	e	enum:SpvOp_
SpvOpUnreachable	lib/vulkan/spirv.h	/^    SpvOpUnreachable = 255,$/;"	e	enum:SpvOp_
SpvOpVariable	lib/vulkan/spirv.h	/^    SpvOpVariable = 59,$/;"	e	enum:SpvOp_
SpvOpVectorExtractDynamic	lib/vulkan/spirv.h	/^    SpvOpVectorExtractDynamic = 77,$/;"	e	enum:SpvOp_
SpvOpVectorInsertDynamic	lib/vulkan/spirv.h	/^    SpvOpVectorInsertDynamic = 78,$/;"	e	enum:SpvOp_
SpvOpVectorShuffle	lib/vulkan/spirv.h	/^    SpvOpVectorShuffle = 79,$/;"	e	enum:SpvOp_
SpvOpVectorTimesMatrix	lib/vulkan/spirv.h	/^    SpvOpVectorTimesMatrix = 144,$/;"	e	enum:SpvOp_
SpvOpVectorTimesScalar	lib/vulkan/spirv.h	/^    SpvOpVectorTimesScalar = 142,$/;"	e	enum:SpvOp_
SpvOpWritePipe	lib/vulkan/spirv.h	/^    SpvOpWritePipe = 275,$/;"	e	enum:SpvOp_
SpvOp_	lib/vulkan/spirv.h	/^typedef enum SpvOp_ {$/;"	g
SpvRevision	lib/vulkan/spirv.h	/^static const unsigned int SpvRevision = 2;$/;"	v
SpvSamplerAddressingMode	lib/vulkan/spirv.h	/^} SpvSamplerAddressingMode;$/;"	t	typeref:enum:SpvSamplerAddressingMode_
SpvSamplerAddressingModeClamp	lib/vulkan/spirv.h	/^    SpvSamplerAddressingModeClamp = 2,$/;"	e	enum:SpvSamplerAddressingMode_
SpvSamplerAddressingModeClampToEdge	lib/vulkan/spirv.h	/^    SpvSamplerAddressingModeClampToEdge = 1,$/;"	e	enum:SpvSamplerAddressingMode_
SpvSamplerAddressingModeMax	lib/vulkan/spirv.h	/^    SpvSamplerAddressingModeMax = 0x7fffffff,$/;"	e	enum:SpvSamplerAddressingMode_
SpvSamplerAddressingModeNone	lib/vulkan/spirv.h	/^    SpvSamplerAddressingModeNone = 0,$/;"	e	enum:SpvSamplerAddressingMode_
SpvSamplerAddressingModeRepeat	lib/vulkan/spirv.h	/^    SpvSamplerAddressingModeRepeat = 3,$/;"	e	enum:SpvSamplerAddressingMode_
SpvSamplerAddressingModeRepeatMirrored	lib/vulkan/spirv.h	/^    SpvSamplerAddressingModeRepeatMirrored = 4,$/;"	e	enum:SpvSamplerAddressingMode_
SpvSamplerAddressingMode_	lib/vulkan/spirv.h	/^typedef enum SpvSamplerAddressingMode_ {$/;"	g
SpvSamplerFilterMode	lib/vulkan/spirv.h	/^} SpvSamplerFilterMode;$/;"	t	typeref:enum:SpvSamplerFilterMode_
SpvSamplerFilterModeLinear	lib/vulkan/spirv.h	/^    SpvSamplerFilterModeLinear = 1,$/;"	e	enum:SpvSamplerFilterMode_
SpvSamplerFilterModeMax	lib/vulkan/spirv.h	/^    SpvSamplerFilterModeMax = 0x7fffffff,$/;"	e	enum:SpvSamplerFilterMode_
SpvSamplerFilterModeNearest	lib/vulkan/spirv.h	/^    SpvSamplerFilterModeNearest = 0,$/;"	e	enum:SpvSamplerFilterMode_
SpvSamplerFilterMode_	lib/vulkan/spirv.h	/^typedef enum SpvSamplerFilterMode_ {$/;"	g
SpvScope	lib/vulkan/spirv.h	/^} SpvScope;$/;"	t	typeref:enum:SpvScope_
SpvScopeCrossDevice	lib/vulkan/spirv.h	/^    SpvScopeCrossDevice = 0,$/;"	e	enum:SpvScope_
SpvScopeDevice	lib/vulkan/spirv.h	/^    SpvScopeDevice = 1,$/;"	e	enum:SpvScope_
SpvScopeInvocation	lib/vulkan/spirv.h	/^    SpvScopeInvocation = 4,$/;"	e	enum:SpvScope_
SpvScopeMax	lib/vulkan/spirv.h	/^    SpvScopeMax = 0x7fffffff,$/;"	e	enum:SpvScope_
SpvScopeSubgroup	lib/vulkan/spirv.h	/^    SpvScopeSubgroup = 3,$/;"	e	enum:SpvScope_
SpvScopeWorkgroup	lib/vulkan/spirv.h	/^    SpvScopeWorkgroup = 2,$/;"	e	enum:SpvScope_
SpvScope_	lib/vulkan/spirv.h	/^typedef enum SpvScope_ {$/;"	g
SpvSelectionControlDontFlattenMask	lib/vulkan/spirv.h	/^    SpvSelectionControlDontFlattenMask = 0x00000002,$/;"	e	enum:SpvSelectionControlMask_
SpvSelectionControlDontFlattenShift	lib/vulkan/spirv.h	/^    SpvSelectionControlDontFlattenShift = 1,$/;"	e	enum:SpvSelectionControlShift_
SpvSelectionControlFlattenMask	lib/vulkan/spirv.h	/^    SpvSelectionControlFlattenMask = 0x00000001,$/;"	e	enum:SpvSelectionControlMask_
SpvSelectionControlFlattenShift	lib/vulkan/spirv.h	/^    SpvSelectionControlFlattenShift = 0,$/;"	e	enum:SpvSelectionControlShift_
SpvSelectionControlMask	lib/vulkan/spirv.h	/^} SpvSelectionControlMask;$/;"	t	typeref:enum:SpvSelectionControlMask_
SpvSelectionControlMaskNone	lib/vulkan/spirv.h	/^    SpvSelectionControlMaskNone = 0,$/;"	e	enum:SpvSelectionControlMask_
SpvSelectionControlMask_	lib/vulkan/spirv.h	/^typedef enum SpvSelectionControlMask_ {$/;"	g
SpvSelectionControlMax	lib/vulkan/spirv.h	/^    SpvSelectionControlMax = 0x7fffffff,$/;"	e	enum:SpvSelectionControlShift_
SpvSelectionControlShift	lib/vulkan/spirv.h	/^} SpvSelectionControlShift;$/;"	t	typeref:enum:SpvSelectionControlShift_
SpvSelectionControlShift_	lib/vulkan/spirv.h	/^typedef enum SpvSelectionControlShift_ {$/;"	g
SpvSourceLanguage	lib/vulkan/spirv.h	/^} SpvSourceLanguage;$/;"	t	typeref:enum:SpvSourceLanguage_
SpvSourceLanguageESSL	lib/vulkan/spirv.h	/^    SpvSourceLanguageESSL = 1,$/;"	e	enum:SpvSourceLanguage_
SpvSourceLanguageGLSL	lib/vulkan/spirv.h	/^    SpvSourceLanguageGLSL = 2,$/;"	e	enum:SpvSourceLanguage_
SpvSourceLanguageMax	lib/vulkan/spirv.h	/^    SpvSourceLanguageMax = 0x7fffffff,$/;"	e	enum:SpvSourceLanguage_
SpvSourceLanguageOpenCL_C	lib/vulkan/spirv.h	/^    SpvSourceLanguageOpenCL_C = 3,$/;"	e	enum:SpvSourceLanguage_
SpvSourceLanguageOpenCL_CPP	lib/vulkan/spirv.h	/^    SpvSourceLanguageOpenCL_CPP = 4,$/;"	e	enum:SpvSourceLanguage_
SpvSourceLanguageUnknown	lib/vulkan/spirv.h	/^    SpvSourceLanguageUnknown = 0,$/;"	e	enum:SpvSourceLanguage_
SpvSourceLanguage_	lib/vulkan/spirv.h	/^typedef enum SpvSourceLanguage_ {$/;"	g
SpvStorageClass	lib/vulkan/spirv.h	/^} SpvStorageClass;$/;"	t	typeref:enum:SpvStorageClass_
SpvStorageClassAtomicCounter	lib/vulkan/spirv.h	/^    SpvStorageClassAtomicCounter = 10,$/;"	e	enum:SpvStorageClass_
SpvStorageClassCrossWorkgroup	lib/vulkan/spirv.h	/^    SpvStorageClassCrossWorkgroup = 5,$/;"	e	enum:SpvStorageClass_
SpvStorageClassFunction	lib/vulkan/spirv.h	/^    SpvStorageClassFunction = 7,$/;"	e	enum:SpvStorageClass_
SpvStorageClassGeneric	lib/vulkan/spirv.h	/^    SpvStorageClassGeneric = 8,$/;"	e	enum:SpvStorageClass_
SpvStorageClassImage	lib/vulkan/spirv.h	/^    SpvStorageClassImage = 11,$/;"	e	enum:SpvStorageClass_
SpvStorageClassInput	lib/vulkan/spirv.h	/^    SpvStorageClassInput = 1,$/;"	e	enum:SpvStorageClass_
SpvStorageClassMax	lib/vulkan/spirv.h	/^    SpvStorageClassMax = 0x7fffffff,$/;"	e	enum:SpvStorageClass_
SpvStorageClassOutput	lib/vulkan/spirv.h	/^    SpvStorageClassOutput = 3,$/;"	e	enum:SpvStorageClass_
SpvStorageClassPrivate	lib/vulkan/spirv.h	/^    SpvStorageClassPrivate = 6,$/;"	e	enum:SpvStorageClass_
SpvStorageClassPushConstant	lib/vulkan/spirv.h	/^    SpvStorageClassPushConstant = 9,$/;"	e	enum:SpvStorageClass_
SpvStorageClassUniform	lib/vulkan/spirv.h	/^    SpvStorageClassUniform = 2,$/;"	e	enum:SpvStorageClass_
SpvStorageClassUniformConstant	lib/vulkan/spirv.h	/^    SpvStorageClassUniformConstant = 0,$/;"	e	enum:SpvStorageClass_
SpvStorageClassWorkgroup	lib/vulkan/spirv.h	/^    SpvStorageClassWorkgroup = 4,$/;"	e	enum:SpvStorageClass_
SpvStorageClass_	lib/vulkan/spirv.h	/^typedef enum SpvStorageClass_ {$/;"	g
SpvVersion	lib/vulkan/spirv.h	/^static const unsigned int SpvVersion = 0x00010100;$/;"	v
SpvWordCountShift	lib/vulkan/spirv.h	/^static const unsigned int SpvWordCountShift = 16;$/;"	v
StorageClass	lib/vulkan/spirv.hpp	/^enum StorageClass {$/;"	g	namespace:spv
StorageClassAtomicCounter	lib/vulkan/spirv.hpp	/^    StorageClassAtomicCounter = 10,$/;"	e	enum:spv::StorageClass
StorageClassCrossWorkgroup	lib/vulkan/spirv.hpp	/^    StorageClassCrossWorkgroup = 5,$/;"	e	enum:spv::StorageClass
StorageClassFunction	lib/vulkan/spirv.hpp	/^    StorageClassFunction = 7,$/;"	e	enum:spv::StorageClass
StorageClassGeneric	lib/vulkan/spirv.hpp	/^    StorageClassGeneric = 8,$/;"	e	enum:spv::StorageClass
StorageClassImage	lib/vulkan/spirv.hpp	/^    StorageClassImage = 11,$/;"	e	enum:spv::StorageClass
StorageClassInput	lib/vulkan/spirv.hpp	/^    StorageClassInput = 1,$/;"	e	enum:spv::StorageClass
StorageClassMax	lib/vulkan/spirv.hpp	/^    StorageClassMax = 0x7fffffff,$/;"	e	enum:spv::StorageClass
StorageClassOutput	lib/vulkan/spirv.hpp	/^    StorageClassOutput = 3,$/;"	e	enum:spv::StorageClass
StorageClassPrivate	lib/vulkan/spirv.hpp	/^    StorageClassPrivate = 6,$/;"	e	enum:spv::StorageClass
StorageClassPushConstant	lib/vulkan/spirv.hpp	/^    StorageClassPushConstant = 9,$/;"	e	enum:spv::StorageClass
StorageClassUniform	lib/vulkan/spirv.hpp	/^    StorageClassUniform = 2,$/;"	e	enum:spv::StorageClass
StorageClassUniformConstant	lib/vulkan/spirv.hpp	/^    StorageClassUniformConstant = 0,$/;"	e	enum:spv::StorageClass
StorageClassWorkgroup	lib/vulkan/spirv.hpp	/^    StorageClassWorkgroup = 4,$/;"	e	enum:spv::StorageClass
Stub	lib/glm/detail/_swizzle.hpp	/^		struct Stub {};$/;"	s	struct:glm::detail::_swizzle_base2
SwapChainDesc	inc/vulkan_context.h	/^	struct SwapChainDesc {$/;"	s	class:VulkanContext
SwapChainDesc	inc/vulkan_manager.h	/^	struct SwapChainDesc {$/;"	s	class:VulkanManager
TARGET	Makefile	/^TARGET=$(BIN_DIR)\/myengine$/;"	m
TOSTRING	inc/macro.h	16;"	d
Task	inc/task_manager.h	/^class Task {$/;"	c
TaskManager	inc/task_manager.h	/^class TaskManager {$/;"	c
TaskManager	src/task_manager.cpp	/^TaskManager::TaskManager(): mNumThreads(std::thread::hardware_concurrency())$/;"	f	class:TaskManager
UBO	inc/vulkan_manager.h	/^	struct UBO {$/;"	s	class:VulkanManager
UnmapMemory	lib/vulkan/vk_layer.h	/^    PFN_vkUnmapMemory UnmapMemory;$/;"	m	struct:VkLayerDispatchTable_
UpdateDescriptorSets	lib/vulkan/vk_layer.h	/^    PFN_vkUpdateDescriptorSets UpdateDescriptorSets;$/;"	m	struct:VkLayerDispatchTable_
VKAPI_ATTR	lib/vulkan/vk_platform.h	51;"	d
VKAPI_ATTR	lib/vulkan/vk_platform.h	61;"	d
VKAPI_ATTR	lib/vulkan/vk_platform.h	66;"	d
VKAPI_CALL	lib/vulkan/vk_platform.h	52;"	d
VKAPI_CALL	lib/vulkan/vk_platform.h	62;"	d
VKAPI_CALL	lib/vulkan/vk_platform.h	67;"	d
VKAPI_PTR	lib/vulkan/vk_platform.h	53;"	d
VKAPI_PTR	lib/vulkan/vk_platform.h	63;"	d
VKAPI_PTR	lib/vulkan/vk_platform.h	68;"	d
VKICD_H	lib/vulkan/vk_icd.h	24;"	d
VK_ACCESS_COLOR_ATTACHMENT_READ_BIT	lib/vulkan/vulkan.h	/^    VK_ACCESS_COLOR_ATTACHMENT_READ_BIT = 0x00000080,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT	lib/vulkan/vulkan.h	/^    VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT = 0x00000100,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT	lib/vulkan/vulkan.h	/^    VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT = 0x00000200,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT	lib/vulkan/vulkan.h	/^    VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = 0x00000400,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_ACCESS_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_HOST_READ_BIT	lib/vulkan/vulkan.h	/^    VK_ACCESS_HOST_READ_BIT = 0x00002000,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_HOST_WRITE_BIT	lib/vulkan/vulkan.h	/^    VK_ACCESS_HOST_WRITE_BIT = 0x00004000,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_INDEX_READ_BIT	lib/vulkan/vulkan.h	/^    VK_ACCESS_INDEX_READ_BIT = 0x00000002,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_INDIRECT_COMMAND_READ_BIT	lib/vulkan/vulkan.h	/^    VK_ACCESS_INDIRECT_COMMAND_READ_BIT = 0x00000001,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_INPUT_ATTACHMENT_READ_BIT	lib/vulkan/vulkan.h	/^    VK_ACCESS_INPUT_ATTACHMENT_READ_BIT = 0x00000010,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_MEMORY_READ_BIT	lib/vulkan/vulkan.h	/^    VK_ACCESS_MEMORY_READ_BIT = 0x00008000,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_MEMORY_WRITE_BIT	lib/vulkan/vulkan.h	/^    VK_ACCESS_MEMORY_WRITE_BIT = 0x00010000,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_SHADER_READ_BIT	lib/vulkan/vulkan.h	/^    VK_ACCESS_SHADER_READ_BIT = 0x00000020,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_SHADER_WRITE_BIT	lib/vulkan/vulkan.h	/^    VK_ACCESS_SHADER_WRITE_BIT = 0x00000040,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_TRANSFER_READ_BIT	lib/vulkan/vulkan.h	/^    VK_ACCESS_TRANSFER_READ_BIT = 0x00000800,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_TRANSFER_WRITE_BIT	lib/vulkan/vulkan.h	/^    VK_ACCESS_TRANSFER_WRITE_BIT = 0x00001000,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_UNIFORM_READ_BIT	lib/vulkan/vulkan.h	/^    VK_ACCESS_UNIFORM_READ_BIT = 0x00000008,$/;"	e	enum:VkAccessFlagBits
VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT	lib/vulkan/vulkan.h	/^    VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT = 0x00000004,$/;"	e	enum:VkAccessFlagBits
VK_AMD_GCN_SHADER_EXTENSION_NAME	lib/vulkan/vulkan.h	3930;"	d
VK_AMD_GCN_SHADER_SPEC_VERSION	lib/vulkan/vulkan.h	3929;"	d
VK_AMD_RASTERIZATION_ORDER_EXTENSION_NAME	lib/vulkan/vulkan.h	3841;"	d
VK_AMD_RASTERIZATION_ORDER_SPEC_VERSION	lib/vulkan/vulkan.h	3840;"	d
VK_AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_EXTENSION_NAME	lib/vulkan/vulkan.h	3868;"	d
VK_AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_SPEC_VERSION	lib/vulkan/vulkan.h	3867;"	d
VK_AMD_SHADER_TRINARY_MINMAX_EXTENSION_NAME	lib/vulkan/vulkan.h	3863;"	d
VK_AMD_SHADER_TRINARY_MINMAX_SPEC_VERSION	lib/vulkan/vulkan.h	3862;"	d
VK_AMD_gcn_shader	lib/vulkan/vulkan.h	3928;"	d
VK_AMD_rasterization_order	lib/vulkan/vulkan.h	3839;"	d
VK_AMD_shader_explicit_vertex_parameter	lib/vulkan/vulkan.h	3866;"	d
VK_AMD_shader_trinary_minmax	lib/vulkan/vulkan.h	3861;"	d
VK_API_VERSION_1_0	lib/vulkan/vulkan.h	40;"	d
VK_ATTACHMENT_DESCRIPTION_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_ATTACHMENT_DESCRIPTION_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkAttachmentDescriptionFlagBits
VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT	lib/vulkan/vulkan.h	/^    VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT = 0x00000001,$/;"	e	enum:VkAttachmentDescriptionFlagBits
VK_ATTACHMENT_LOAD_OP_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_ATTACHMENT_LOAD_OP_BEGIN_RANGE = VK_ATTACHMENT_LOAD_OP_LOAD,$/;"	e	enum:VkAttachmentLoadOp
VK_ATTACHMENT_LOAD_OP_CLEAR	lib/vulkan/vulkan.h	/^    VK_ATTACHMENT_LOAD_OP_CLEAR = 1,$/;"	e	enum:VkAttachmentLoadOp
VK_ATTACHMENT_LOAD_OP_DONT_CARE	lib/vulkan/vulkan.h	/^    VK_ATTACHMENT_LOAD_OP_DONT_CARE = 2,$/;"	e	enum:VkAttachmentLoadOp
VK_ATTACHMENT_LOAD_OP_END_RANGE	lib/vulkan/vulkan.h	/^    VK_ATTACHMENT_LOAD_OP_END_RANGE = VK_ATTACHMENT_LOAD_OP_DONT_CARE,$/;"	e	enum:VkAttachmentLoadOp
VK_ATTACHMENT_LOAD_OP_LOAD	lib/vulkan/vulkan.h	/^    VK_ATTACHMENT_LOAD_OP_LOAD = 0,$/;"	e	enum:VkAttachmentLoadOp
VK_ATTACHMENT_LOAD_OP_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_ATTACHMENT_LOAD_OP_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkAttachmentLoadOp
VK_ATTACHMENT_LOAD_OP_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_ATTACHMENT_LOAD_OP_RANGE_SIZE = (VK_ATTACHMENT_LOAD_OP_DONT_CARE - VK_ATTACHMENT_LOAD_OP_LOAD + 1),$/;"	e	enum:VkAttachmentLoadOp
VK_ATTACHMENT_STORE_OP_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_ATTACHMENT_STORE_OP_BEGIN_RANGE = VK_ATTACHMENT_STORE_OP_STORE,$/;"	e	enum:VkAttachmentStoreOp
VK_ATTACHMENT_STORE_OP_DONT_CARE	lib/vulkan/vulkan.h	/^    VK_ATTACHMENT_STORE_OP_DONT_CARE = 1,$/;"	e	enum:VkAttachmentStoreOp
VK_ATTACHMENT_STORE_OP_END_RANGE	lib/vulkan/vulkan.h	/^    VK_ATTACHMENT_STORE_OP_END_RANGE = VK_ATTACHMENT_STORE_OP_DONT_CARE,$/;"	e	enum:VkAttachmentStoreOp
VK_ATTACHMENT_STORE_OP_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_ATTACHMENT_STORE_OP_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkAttachmentStoreOp
VK_ATTACHMENT_STORE_OP_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_ATTACHMENT_STORE_OP_RANGE_SIZE = (VK_ATTACHMENT_STORE_OP_DONT_CARE - VK_ATTACHMENT_STORE_OP_STORE + 1),$/;"	e	enum:VkAttachmentStoreOp
VK_ATTACHMENT_STORE_OP_STORE	lib/vulkan/vulkan.h	/^    VK_ATTACHMENT_STORE_OP_STORE = 0,$/;"	e	enum:VkAttachmentStoreOp
VK_ATTACHMENT_UNUSED	lib/vulkan/vulkan.h	99;"	d
VK_BLEND_FACTOR_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_BEGIN_RANGE = VK_BLEND_FACTOR_ZERO,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_CONSTANT_ALPHA	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_CONSTANT_ALPHA = 12,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_CONSTANT_COLOR	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_CONSTANT_COLOR = 10,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_DST_ALPHA	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_DST_ALPHA = 8,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_DST_COLOR	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_DST_COLOR = 4,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_END_RANGE	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_END_RANGE = VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ONE = 1,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA = 13,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR = 11,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA = 9,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR = 5,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA = 18,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR = 16,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA = 7,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR = 3,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_RANGE_SIZE = (VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA - VK_BLEND_FACTOR_ZERO + 1),$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_SRC1_ALPHA	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_SRC1_ALPHA = 17,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_SRC1_COLOR	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_SRC1_COLOR = 15,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_SRC_ALPHA	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_SRC_ALPHA = 6,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_SRC_ALPHA_SATURATE	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_SRC_ALPHA_SATURATE = 14,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_SRC_COLOR	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_SRC_COLOR = 2,$/;"	e	enum:VkBlendFactor
VK_BLEND_FACTOR_ZERO	lib/vulkan/vulkan.h	/^    VK_BLEND_FACTOR_ZERO = 0,$/;"	e	enum:VkBlendFactor
VK_BLEND_OP_ADD	lib/vulkan/vulkan.h	/^    VK_BLEND_OP_ADD = 0,$/;"	e	enum:VkBlendOp
VK_BLEND_OP_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_BLEND_OP_BEGIN_RANGE = VK_BLEND_OP_ADD,$/;"	e	enum:VkBlendOp
VK_BLEND_OP_END_RANGE	lib/vulkan/vulkan.h	/^    VK_BLEND_OP_END_RANGE = VK_BLEND_OP_MAX,$/;"	e	enum:VkBlendOp
VK_BLEND_OP_MAX	lib/vulkan/vulkan.h	/^    VK_BLEND_OP_MAX = 4,$/;"	e	enum:VkBlendOp
VK_BLEND_OP_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_BLEND_OP_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkBlendOp
VK_BLEND_OP_MIN	lib/vulkan/vulkan.h	/^    VK_BLEND_OP_MIN = 3,$/;"	e	enum:VkBlendOp
VK_BLEND_OP_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_BLEND_OP_RANGE_SIZE = (VK_BLEND_OP_MAX - VK_BLEND_OP_ADD + 1),$/;"	e	enum:VkBlendOp
VK_BLEND_OP_REVERSE_SUBTRACT	lib/vulkan/vulkan.h	/^    VK_BLEND_OP_REVERSE_SUBTRACT = 2,$/;"	e	enum:VkBlendOp
VK_BLEND_OP_SUBTRACT	lib/vulkan/vulkan.h	/^    VK_BLEND_OP_SUBTRACT = 1,$/;"	e	enum:VkBlendOp
VK_BORDER_COLOR_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_BORDER_COLOR_BEGIN_RANGE = VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_END_RANGE	lib/vulkan/vulkan.h	/^    VK_BORDER_COLOR_END_RANGE = VK_BORDER_COLOR_INT_OPAQUE_WHITE,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK	lib/vulkan/vulkan.h	/^    VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK = 2,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE	lib/vulkan/vulkan.h	/^    VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE = 4,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK	lib/vulkan/vulkan.h	/^    VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK = 0,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_INT_OPAQUE_BLACK	lib/vulkan/vulkan.h	/^    VK_BORDER_COLOR_INT_OPAQUE_BLACK = 3,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_INT_OPAQUE_WHITE	lib/vulkan/vulkan.h	/^    VK_BORDER_COLOR_INT_OPAQUE_WHITE = 5,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_INT_TRANSPARENT_BLACK	lib/vulkan/vulkan.h	/^    VK_BORDER_COLOR_INT_TRANSPARENT_BLACK = 1,$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_BORDER_COLOR_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkBorderColor
VK_BORDER_COLOR_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_BORDER_COLOR_RANGE_SIZE = (VK_BORDER_COLOR_INT_OPAQUE_WHITE - VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK + 1),$/;"	e	enum:VkBorderColor
VK_BUFFER_CREATE_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_BUFFER_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkBufferCreateFlagBits
VK_BUFFER_CREATE_SPARSE_ALIASED_BIT	lib/vulkan/vulkan.h	/^    VK_BUFFER_CREATE_SPARSE_ALIASED_BIT = 0x00000004,$/;"	e	enum:VkBufferCreateFlagBits
VK_BUFFER_CREATE_SPARSE_BINDING_BIT	lib/vulkan/vulkan.h	/^    VK_BUFFER_CREATE_SPARSE_BINDING_BIT = 0x00000001,$/;"	e	enum:VkBufferCreateFlagBits
VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT	lib/vulkan/vulkan.h	/^    VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT = 0x00000002,$/;"	e	enum:VkBufferCreateFlagBits
VK_BUFFER_USAGE_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_INDEX_BUFFER_BIT	lib/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_INDEX_BUFFER_BIT = 0x00000040,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT	lib/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT = 0x00000100,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_STORAGE_BUFFER_BIT	lib/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_STORAGE_BUFFER_BIT = 0x00000020,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT	lib/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT = 0x00000008,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_TRANSFER_DST_BIT	lib/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_TRANSFER_DST_BIT = 0x00000002,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_TRANSFER_SRC_BIT	lib/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_TRANSFER_SRC_BIT = 0x00000001,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT	lib/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT = 0x00000010,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT	lib/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT = 0x00000004,$/;"	e	enum:VkBufferUsageFlagBits
VK_BUFFER_USAGE_VERTEX_BUFFER_BIT	lib/vulkan/vulkan.h	/^    VK_BUFFER_USAGE_VERTEX_BUFFER_BIT = 0x00000080,$/;"	e	enum:VkBufferUsageFlagBits
VK_CALL_IPROC	inc/vulkan_manager.h	192;"	d
VK_CHECK_RESULT	inc/vulkan_manager.h	182;"	d
VK_COLORSPACE_SRGB_NONLINEAR_KHR	lib/vulkan/vulkan.h	3178;"	d
VK_COLOR_COMPONENT_A_BIT	lib/vulkan/vulkan.h	/^    VK_COLOR_COMPONENT_A_BIT = 0x00000008,$/;"	e	enum:VkColorComponentFlagBits
VK_COLOR_COMPONENT_B_BIT	lib/vulkan/vulkan.h	/^    VK_COLOR_COMPONENT_B_BIT = 0x00000004,$/;"	e	enum:VkColorComponentFlagBits
VK_COLOR_COMPONENT_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_COLOR_COMPONENT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkColorComponentFlagBits
VK_COLOR_COMPONENT_G_BIT	lib/vulkan/vulkan.h	/^    VK_COLOR_COMPONENT_G_BIT = 0x00000002,$/;"	e	enum:VkColorComponentFlagBits
VK_COLOR_COMPONENT_R_BIT	lib/vulkan/vulkan.h	/^    VK_COLOR_COMPONENT_R_BIT = 0x00000001,$/;"	e	enum:VkColorComponentFlagBits
VK_COLOR_SPACE_BEGIN_RANGE_KHR	lib/vulkan/vulkan.h	/^    VK_COLOR_SPACE_BEGIN_RANGE_KHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR,$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_END_RANGE_KHR	lib/vulkan/vulkan.h	/^    VK_COLOR_SPACE_END_RANGE_KHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR,$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_MAX_ENUM_KHR	lib/vulkan/vulkan.h	/^    VK_COLOR_SPACE_MAX_ENUM_KHR = 0x7FFFFFFF$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_RANGE_SIZE_KHR	lib/vulkan/vulkan.h	/^    VK_COLOR_SPACE_RANGE_SIZE_KHR = (VK_COLOR_SPACE_SRGB_NONLINEAR_KHR - VK_COLOR_SPACE_SRGB_NONLINEAR_KHR + 1),$/;"	e	enum:VkColorSpaceKHR
VK_COLOR_SPACE_SRGB_NONLINEAR_KHR	lib/vulkan/vulkan.h	/^    VK_COLOR_SPACE_SRGB_NONLINEAR_KHR = 0,$/;"	e	enum:VkColorSpaceKHR
VK_COMMAND_BUFFER_LEVEL_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_LEVEL_BEGIN_RANGE = VK_COMMAND_BUFFER_LEVEL_PRIMARY,$/;"	e	enum:VkCommandBufferLevel
VK_COMMAND_BUFFER_LEVEL_END_RANGE	lib/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_LEVEL_END_RANGE = VK_COMMAND_BUFFER_LEVEL_SECONDARY,$/;"	e	enum:VkCommandBufferLevel
VK_COMMAND_BUFFER_LEVEL_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_LEVEL_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkCommandBufferLevel
VK_COMMAND_BUFFER_LEVEL_PRIMARY	lib/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_LEVEL_PRIMARY = 0,$/;"	e	enum:VkCommandBufferLevel
VK_COMMAND_BUFFER_LEVEL_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_LEVEL_RANGE_SIZE = (VK_COMMAND_BUFFER_LEVEL_SECONDARY - VK_COMMAND_BUFFER_LEVEL_PRIMARY + 1),$/;"	e	enum:VkCommandBufferLevel
VK_COMMAND_BUFFER_LEVEL_SECONDARY	lib/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_LEVEL_SECONDARY = 1,$/;"	e	enum:VkCommandBufferLevel
VK_COMMAND_BUFFER_RESET_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_RESET_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkCommandBufferResetFlagBits
VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT	lib/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT = 0x00000001,$/;"	e	enum:VkCommandBufferResetFlagBits
VK_COMMAND_BUFFER_USAGE_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_USAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkCommandBufferUsageFlagBits
VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT	lib/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT = 0x00000001,$/;"	e	enum:VkCommandBufferUsageFlagBits
VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT	lib/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT = 0x00000002,$/;"	e	enum:VkCommandBufferUsageFlagBits
VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT	lib/vulkan/vulkan.h	/^    VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT = 0x00000004,$/;"	e	enum:VkCommandBufferUsageFlagBits
VK_COMMAND_POOL_CREATE_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_COMMAND_POOL_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkCommandPoolCreateFlagBits
VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT	lib/vulkan/vulkan.h	/^    VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT = 0x00000002,$/;"	e	enum:VkCommandPoolCreateFlagBits
VK_COMMAND_POOL_CREATE_TRANSIENT_BIT	lib/vulkan/vulkan.h	/^    VK_COMMAND_POOL_CREATE_TRANSIENT_BIT = 0x00000001,$/;"	e	enum:VkCommandPoolCreateFlagBits
VK_COMMAND_POOL_RESET_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_COMMAND_POOL_RESET_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkCommandPoolResetFlagBits
VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT	lib/vulkan/vulkan.h	/^    VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT = 0x00000001,$/;"	e	enum:VkCommandPoolResetFlagBits
VK_COMPARE_OP_ALWAYS	lib/vulkan/vulkan.h	/^    VK_COMPARE_OP_ALWAYS = 7,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_COMPARE_OP_BEGIN_RANGE = VK_COMPARE_OP_NEVER,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_END_RANGE	lib/vulkan/vulkan.h	/^    VK_COMPARE_OP_END_RANGE = VK_COMPARE_OP_ALWAYS,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_EQUAL	lib/vulkan/vulkan.h	/^    VK_COMPARE_OP_EQUAL = 2,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_GREATER	lib/vulkan/vulkan.h	/^    VK_COMPARE_OP_GREATER = 4,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_GREATER_OR_EQUAL	lib/vulkan/vulkan.h	/^    VK_COMPARE_OP_GREATER_OR_EQUAL = 6,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_LESS	lib/vulkan/vulkan.h	/^    VK_COMPARE_OP_LESS = 1,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_LESS_OR_EQUAL	lib/vulkan/vulkan.h	/^    VK_COMPARE_OP_LESS_OR_EQUAL = 3,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_COMPARE_OP_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_NEVER	lib/vulkan/vulkan.h	/^    VK_COMPARE_OP_NEVER = 0,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_NOT_EQUAL	lib/vulkan/vulkan.h	/^    VK_COMPARE_OP_NOT_EQUAL = 5,$/;"	e	enum:VkCompareOp
VK_COMPARE_OP_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_COMPARE_OP_RANGE_SIZE = (VK_COMPARE_OP_ALWAYS - VK_COMPARE_OP_NEVER + 1),$/;"	e	enum:VkCompareOp
VK_COMPONENT_SWIZZLE_A	lib/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_A = 6,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_B	lib/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_B = 5,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_BEGIN_RANGE = VK_COMPONENT_SWIZZLE_IDENTITY,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_END_RANGE	lib/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_END_RANGE = VK_COMPONENT_SWIZZLE_A,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_G	lib/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_G = 4,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_IDENTITY	lib/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_IDENTITY = 0,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_ONE	lib/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_ONE = 2,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_R	lib/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_R = 3,$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_RANGE_SIZE = (VK_COMPONENT_SWIZZLE_A - VK_COMPONENT_SWIZZLE_IDENTITY + 1),$/;"	e	enum:VkComponentSwizzle
VK_COMPONENT_SWIZZLE_ZERO	lib/vulkan/vulkan.h	/^    VK_COMPONENT_SWIZZLE_ZERO = 1,$/;"	e	enum:VkComponentSwizzle
VK_COMPOSITE_ALPHA_FLAG_BITS_MAX_ENUM_KHR	lib/vulkan/vulkan.h	/^    VK_COMPOSITE_ALPHA_FLAG_BITS_MAX_ENUM_KHR = 0x7FFFFFFF$/;"	e	enum:VkCompositeAlphaFlagBitsKHR
VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR	lib/vulkan/vulkan.h	/^    VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR = 0x00000008,$/;"	e	enum:VkCompositeAlphaFlagBitsKHR
VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR	lib/vulkan/vulkan.h	/^    VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR = 0x00000001,$/;"	e	enum:VkCompositeAlphaFlagBitsKHR
VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR	lib/vulkan/vulkan.h	/^    VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR = 0x00000004,$/;"	e	enum:VkCompositeAlphaFlagBitsKHR
VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR	lib/vulkan/vulkan.h	/^    VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR = 0x00000002,$/;"	e	enum:VkCompositeAlphaFlagBitsKHR
VK_CULL_MODE_BACK_BIT	lib/vulkan/vulkan.h	/^    VK_CULL_MODE_BACK_BIT = 0x00000002,$/;"	e	enum:VkCullModeFlagBits
VK_CULL_MODE_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_CULL_MODE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkCullModeFlagBits
VK_CULL_MODE_FRONT_AND_BACK	lib/vulkan/vulkan.h	/^    VK_CULL_MODE_FRONT_AND_BACK = 0x00000003,$/;"	e	enum:VkCullModeFlagBits
VK_CULL_MODE_FRONT_BIT	lib/vulkan/vulkan.h	/^    VK_CULL_MODE_FRONT_BIT = 0x00000001,$/;"	e	enum:VkCullModeFlagBits
VK_CULL_MODE_NONE	lib/vulkan/vulkan.h	/^    VK_CULL_MODE_NONE = 0,$/;"	e	enum:VkCullModeFlagBits
VK_DEBUG_REPORT_DEBUG_BIT_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_DEBUG_BIT_EXT = 0x00000010,$/;"	e	enum:VkDebugReportFlagBitsEXT
VK_DEBUG_REPORT_ERROR_BEGIN_RANGE_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_ERROR_BEGIN_RANGE_EXT = VK_DEBUG_REPORT_ERROR_NONE_EXT,$/;"	e	enum:VkDebugReportErrorEXT
VK_DEBUG_REPORT_ERROR_BIT_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_ERROR_BIT_EXT = 0x00000008,$/;"	e	enum:VkDebugReportFlagBitsEXT
VK_DEBUG_REPORT_ERROR_CALLBACK_REF_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_ERROR_CALLBACK_REF_EXT = 1,$/;"	e	enum:VkDebugReportErrorEXT
VK_DEBUG_REPORT_ERROR_END_RANGE_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_ERROR_END_RANGE_EXT = VK_DEBUG_REPORT_ERROR_CALLBACK_REF_EXT,$/;"	e	enum:VkDebugReportErrorEXT
VK_DEBUG_REPORT_ERROR_MAX_ENUM_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_ERROR_MAX_ENUM_EXT = 0x7FFFFFFF$/;"	e	enum:VkDebugReportErrorEXT
VK_DEBUG_REPORT_ERROR_NONE_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_ERROR_NONE_EXT = 0,$/;"	e	enum:VkDebugReportErrorEXT
VK_DEBUG_REPORT_ERROR_RANGE_SIZE_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_ERROR_RANGE_SIZE_EXT = (VK_DEBUG_REPORT_ERROR_CALLBACK_REF_EXT - VK_DEBUG_REPORT_ERROR_NONE_EXT + 1),$/;"	e	enum:VkDebugReportErrorEXT
VK_DEBUG_REPORT_FLAG_BITS_MAX_ENUM_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_FLAG_BITS_MAX_ENUM_EXT = 0x7FFFFFFF$/;"	e	enum:VkDebugReportFlagBitsEXT
VK_DEBUG_REPORT_INFORMATION_BIT_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_INFORMATION_BIT_EXT = 0x00000001,$/;"	e	enum:VkDebugReportFlagBitsEXT
VK_DEBUG_REPORT_OBJECT_TYPE_BEGIN_RANGE_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_BEGIN_RANGE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT = 9,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT = 13,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT = 6,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT = 25,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT = 28,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT = 22,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT = 23,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT = 20,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT = 3,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT = 8,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_END_RANGE_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_END_RANGE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT = 11,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT = 7,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT = 24,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT = 10,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT = 14,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT = 1,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_MAX_ENUM_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_MAX_ENUM_EXT = 0x7FFFFFFF$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT = 2,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT = 16,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT = 19,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT = 17,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT = 12,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT = 4,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_RANGE_SIZE_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_RANGE_SIZE_EXT = (VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT - VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT + 1),$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT = 18,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT = 21,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT = 5,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT = 15,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT = 26,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT = 27,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT = 0,$/;"	e	enum:VkDebugReportObjectTypeEXT
VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT = 0x00000004,$/;"	e	enum:VkDebugReportFlagBitsEXT
VK_DEBUG_REPORT_WARNING_BIT_EXT	lib/vulkan/vulkan.h	/^    VK_DEBUG_REPORT_WARNING_BIT_EXT = 0x00000002,$/;"	e	enum:VkDebugReportFlagBitsEXT
VK_DEFINE_HANDLE	lib/vulkan/vulkan.h	53;"	d
VK_DEFINE_NON_DISPATCHABLE_HANDLE	lib/vulkan/vulkan.h	57;"	d
VK_DEFINE_NON_DISPATCHABLE_HANDLE	lib/vulkan/vulkan.h	59;"	d
VK_DEPENDENCY_BY_REGION_BIT	lib/vulkan/vulkan.h	/^    VK_DEPENDENCY_BY_REGION_BIT = 0x00000001,$/;"	e	enum:VkDependencyFlagBits
VK_DEPENDENCY_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_DEPENDENCY_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkDependencyFlagBits
VK_DESCRIPTOR_POOL_CREATE_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_DESCRIPTOR_POOL_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkDescriptorPoolCreateFlagBits
VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT	lib/vulkan/vulkan.h	/^    VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT = 0x00000001,$/;"	e	enum:VkDescriptorPoolCreateFlagBits
VK_DESCRIPTOR_TYPE_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_BEGIN_RANGE = VK_DESCRIPTOR_TYPE_SAMPLER,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER	lib/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER = 1,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_END_RANGE	lib/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_END_RANGE = VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT	lib/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT = 10,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_RANGE_SIZE = (VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT - VK_DESCRIPTOR_TYPE_SAMPLER + 1),$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE	lib/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE = 2,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_SAMPLER	lib/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_SAMPLER = 0,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_STORAGE_BUFFER	lib/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_STORAGE_BUFFER = 7,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC	lib/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC = 9,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_STORAGE_IMAGE	lib/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_STORAGE_IMAGE = 3,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER	lib/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER = 5,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER	lib/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER = 6,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC	lib/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC = 8,$/;"	e	enum:VkDescriptorType
VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER	lib/vulkan/vulkan.h	/^    VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER = 4,$/;"	e	enum:VkDescriptorType
VK_DISPLAY_PLANE_ALPHA_FLAG_BITS_MAX_ENUM_KHR	lib/vulkan/vulkan.h	/^    VK_DISPLAY_PLANE_ALPHA_FLAG_BITS_MAX_ENUM_KHR = 0x7FFFFFFF$/;"	e	enum:VkDisplayPlaneAlphaFlagBitsKHR
VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR	lib/vulkan/vulkan.h	/^    VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR = 0x00000002,$/;"	e	enum:VkDisplayPlaneAlphaFlagBitsKHR
VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR	lib/vulkan/vulkan.h	/^    VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR = 0x00000001,$/;"	e	enum:VkDisplayPlaneAlphaFlagBitsKHR
VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR	lib/vulkan/vulkan.h	/^    VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR = 0x00000004,$/;"	e	enum:VkDisplayPlaneAlphaFlagBitsKHR
VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR	lib/vulkan/vulkan.h	/^    VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR = 0x00000008,$/;"	e	enum:VkDisplayPlaneAlphaFlagBitsKHR
VK_DYNAMIC_STATE_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_BEGIN_RANGE = VK_DYNAMIC_STATE_VIEWPORT,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_BLEND_CONSTANTS	lib/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_BLEND_CONSTANTS = 4,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_DEPTH_BIAS	lib/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_DEPTH_BIAS = 3,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_DEPTH_BOUNDS	lib/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_DEPTH_BOUNDS = 5,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_END_RANGE	lib/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_END_RANGE = VK_DYNAMIC_STATE_STENCIL_REFERENCE,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_LINE_WIDTH	lib/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_LINE_WIDTH = 2,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_RANGE_SIZE = (VK_DYNAMIC_STATE_STENCIL_REFERENCE - VK_DYNAMIC_STATE_VIEWPORT + 1),$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_SCISSOR	lib/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_SCISSOR = 1,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK	lib/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK = 6,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_STENCIL_REFERENCE	lib/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_STENCIL_REFERENCE = 8,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_STENCIL_WRITE_MASK	lib/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_STENCIL_WRITE_MASK = 7,$/;"	e	enum:VkDynamicState
VK_DYNAMIC_STATE_VIEWPORT	lib/vulkan/vulkan.h	/^    VK_DYNAMIC_STATE_VIEWPORT = 0,$/;"	e	enum:VkDynamicState
VK_ERROR_DEVICE_LOST	lib/vulkan/vulkan.h	/^    VK_ERROR_DEVICE_LOST = -4,$/;"	e	enum:VkResult
VK_ERROR_EXTENSION_NOT_PRESENT	lib/vulkan/vulkan.h	/^    VK_ERROR_EXTENSION_NOT_PRESENT = -7,$/;"	e	enum:VkResult
VK_ERROR_FEATURE_NOT_PRESENT	lib/vulkan/vulkan.h	/^    VK_ERROR_FEATURE_NOT_PRESENT = -8,$/;"	e	enum:VkResult
VK_ERROR_FORMAT_NOT_SUPPORTED	lib/vulkan/vulkan.h	/^    VK_ERROR_FORMAT_NOT_SUPPORTED = -11,$/;"	e	enum:VkResult
VK_ERROR_INCOMPATIBLE_DISPLAY_KHR	lib/vulkan/vulkan.h	/^    VK_ERROR_INCOMPATIBLE_DISPLAY_KHR = -1000003001,$/;"	e	enum:VkResult
VK_ERROR_INCOMPATIBLE_DRIVER	lib/vulkan/vulkan.h	/^    VK_ERROR_INCOMPATIBLE_DRIVER = -9,$/;"	e	enum:VkResult
VK_ERROR_INITIALIZATION_FAILED	lib/vulkan/vulkan.h	/^    VK_ERROR_INITIALIZATION_FAILED = -3,$/;"	e	enum:VkResult
VK_ERROR_INVALID_SHADER_NV	lib/vulkan/vulkan.h	/^    VK_ERROR_INVALID_SHADER_NV = -1000012000,$/;"	e	enum:VkResult
VK_ERROR_LAYER_NOT_PRESENT	lib/vulkan/vulkan.h	/^    VK_ERROR_LAYER_NOT_PRESENT = -6,$/;"	e	enum:VkResult
VK_ERROR_MEMORY_MAP_FAILED	lib/vulkan/vulkan.h	/^    VK_ERROR_MEMORY_MAP_FAILED = -5,$/;"	e	enum:VkResult
VK_ERROR_NATIVE_WINDOW_IN_USE_KHR	lib/vulkan/vulkan.h	/^    VK_ERROR_NATIVE_WINDOW_IN_USE_KHR = -1000000001,$/;"	e	enum:VkResult
VK_ERROR_OUT_OF_DATE_KHR	lib/vulkan/vulkan.h	/^    VK_ERROR_OUT_OF_DATE_KHR = -1000001004,$/;"	e	enum:VkResult
VK_ERROR_OUT_OF_DEVICE_MEMORY	lib/vulkan/vulkan.h	/^    VK_ERROR_OUT_OF_DEVICE_MEMORY = -2,$/;"	e	enum:VkResult
VK_ERROR_OUT_OF_HOST_MEMORY	lib/vulkan/vulkan.h	/^    VK_ERROR_OUT_OF_HOST_MEMORY = -1,$/;"	e	enum:VkResult
VK_ERROR_SURFACE_LOST_KHR	lib/vulkan/vulkan.h	/^    VK_ERROR_SURFACE_LOST_KHR = -1000000000,$/;"	e	enum:VkResult
VK_ERROR_TOO_MANY_OBJECTS	lib/vulkan/vulkan.h	/^    VK_ERROR_TOO_MANY_OBJECTS = -10,$/;"	e	enum:VkResult
VK_ERROR_VALIDATION_FAILED_EXT	lib/vulkan/vulkan.h	/^    VK_ERROR_VALIDATION_FAILED_EXT = -1000011001,$/;"	e	enum:VkResult
VK_EVENT_RESET	lib/vulkan/vulkan.h	/^    VK_EVENT_RESET = 4,$/;"	e	enum:VkResult
VK_EVENT_SET	lib/vulkan/vulkan.h	/^    VK_EVENT_SET = 3,$/;"	e	enum:VkResult
VK_EXT_DEBUG_MARKER_EXTENSION_NAME	lib/vulkan/vulkan.h	3873;"	d
VK_EXT_DEBUG_MARKER_SPEC_VERSION	lib/vulkan/vulkan.h	3872;"	d
VK_EXT_DEBUG_REPORT_EXTENSION_NAME	lib/vulkan/vulkan.h	3722;"	d
VK_EXT_DEBUG_REPORT_SPEC_VERSION	lib/vulkan/vulkan.h	3721;"	d
VK_EXT_debug_marker	lib/vulkan/vulkan.h	3871;"	d
VK_EXT_debug_report	lib/vulkan/vulkan.h	3718;"	d
VK_FALSE	lib/vulkan/vulkan.h	101;"	d
VK_FENCE_CREATE_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_FENCE_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkFenceCreateFlagBits
VK_FENCE_CREATE_SIGNALED_BIT	lib/vulkan/vulkan.h	/^    VK_FENCE_CREATE_SIGNALED_BIT = 0x00000001,$/;"	e	enum:VkFenceCreateFlagBits
VK_FILTER_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_FILTER_BEGIN_RANGE = VK_FILTER_NEAREST,$/;"	e	enum:VkFilter
VK_FILTER_CUBIC_IMG	lib/vulkan/vulkan.h	/^    VK_FILTER_CUBIC_IMG = 1000015000,$/;"	e	enum:VkFilter
VK_FILTER_END_RANGE	lib/vulkan/vulkan.h	/^    VK_FILTER_END_RANGE = VK_FILTER_LINEAR,$/;"	e	enum:VkFilter
VK_FILTER_LINEAR	lib/vulkan/vulkan.h	/^    VK_FILTER_LINEAR = 1,$/;"	e	enum:VkFilter
VK_FILTER_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_FILTER_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkFilter
VK_FILTER_NEAREST	lib/vulkan/vulkan.h	/^    VK_FILTER_NEAREST = 0,$/;"	e	enum:VkFilter
VK_FILTER_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_FILTER_RANGE_SIZE = (VK_FILTER_LINEAR - VK_FILTER_NEAREST + 1),$/;"	e	enum:VkFilter
VK_FORMAT_A1R5G5B5_UNORM_PACK16	lib/vulkan/vulkan.h	/^    VK_FORMAT_A1R5G5B5_UNORM_PACK16 = 8,$/;"	e	enum:VkFormat
VK_FORMAT_A2B10G10R10_SINT_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_A2B10G10R10_SINT_PACK32 = 69,$/;"	e	enum:VkFormat
VK_FORMAT_A2B10G10R10_SNORM_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_A2B10G10R10_SNORM_PACK32 = 65,$/;"	e	enum:VkFormat
VK_FORMAT_A2B10G10R10_SSCALED_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_A2B10G10R10_SSCALED_PACK32 = 67,$/;"	e	enum:VkFormat
VK_FORMAT_A2B10G10R10_UINT_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_A2B10G10R10_UINT_PACK32 = 68,$/;"	e	enum:VkFormat
VK_FORMAT_A2B10G10R10_UNORM_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_A2B10G10R10_UNORM_PACK32 = 64,$/;"	e	enum:VkFormat
VK_FORMAT_A2B10G10R10_USCALED_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_A2B10G10R10_USCALED_PACK32 = 66,$/;"	e	enum:VkFormat
VK_FORMAT_A2R10G10B10_SINT_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_A2R10G10B10_SINT_PACK32 = 63,$/;"	e	enum:VkFormat
VK_FORMAT_A2R10G10B10_SNORM_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_A2R10G10B10_SNORM_PACK32 = 59,$/;"	e	enum:VkFormat
VK_FORMAT_A2R10G10B10_SSCALED_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_A2R10G10B10_SSCALED_PACK32 = 61,$/;"	e	enum:VkFormat
VK_FORMAT_A2R10G10B10_UINT_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_A2R10G10B10_UINT_PACK32 = 62,$/;"	e	enum:VkFormat
VK_FORMAT_A2R10G10B10_UNORM_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_A2R10G10B10_UNORM_PACK32 = 58,$/;"	e	enum:VkFormat
VK_FORMAT_A2R10G10B10_USCALED_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_A2R10G10B10_USCALED_PACK32 = 60,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_SINT_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_A8B8G8R8_SINT_PACK32 = 56,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_SNORM_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_A8B8G8R8_SNORM_PACK32 = 52,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_SRGB_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_A8B8G8R8_SRGB_PACK32 = 57,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_SSCALED_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_A8B8G8R8_SSCALED_PACK32 = 54,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_UINT_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_A8B8G8R8_UINT_PACK32 = 55,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_UNORM_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_A8B8G8R8_UNORM_PACK32 = 51,$/;"	e	enum:VkFormat
VK_FORMAT_A8B8G8R8_USCALED_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_A8B8G8R8_USCALED_PACK32 = 53,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x10_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_10x10_SRGB_BLOCK = 180,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x10_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_10x10_UNORM_BLOCK = 179,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x5_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_10x5_SRGB_BLOCK = 174,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x5_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_10x5_UNORM_BLOCK = 173,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x6_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_10x6_SRGB_BLOCK = 176,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x6_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_10x6_UNORM_BLOCK = 175,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x8_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_10x8_SRGB_BLOCK = 178,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_10x8_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_10x8_UNORM_BLOCK = 177,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_12x10_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_12x10_SRGB_BLOCK = 182,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_12x10_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_12x10_UNORM_BLOCK = 181,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_12x12_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_12x12_SRGB_BLOCK = 184,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_12x12_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_12x12_UNORM_BLOCK = 183,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_4x4_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_4x4_SRGB_BLOCK = 158,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_4x4_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_4x4_UNORM_BLOCK = 157,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_5x4_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_5x4_SRGB_BLOCK = 160,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_5x4_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_5x4_UNORM_BLOCK = 159,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_5x5_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_5x5_SRGB_BLOCK = 162,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_5x5_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_5x5_UNORM_BLOCK = 161,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_6x5_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_6x5_SRGB_BLOCK = 164,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_6x5_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_6x5_UNORM_BLOCK = 163,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_6x6_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_6x6_SRGB_BLOCK = 166,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_6x6_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_6x6_UNORM_BLOCK = 165,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_8x5_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_8x5_SRGB_BLOCK = 168,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_8x5_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_8x5_UNORM_BLOCK = 167,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_8x6_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_8x6_SRGB_BLOCK = 170,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_8x6_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_8x6_UNORM_BLOCK = 169,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_8x8_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_8x8_SRGB_BLOCK = 172,$/;"	e	enum:VkFormat
VK_FORMAT_ASTC_8x8_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ASTC_8x8_UNORM_BLOCK = 171,$/;"	e	enum:VkFormat
VK_FORMAT_B10G11R11_UFLOAT_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_B10G11R11_UFLOAT_PACK32 = 122,$/;"	e	enum:VkFormat
VK_FORMAT_B4G4R4A4_UNORM_PACK16	lib/vulkan/vulkan.h	/^    VK_FORMAT_B4G4R4A4_UNORM_PACK16 = 3,$/;"	e	enum:VkFormat
VK_FORMAT_B5G5R5A1_UNORM_PACK16	lib/vulkan/vulkan.h	/^    VK_FORMAT_B5G5R5A1_UNORM_PACK16 = 7,$/;"	e	enum:VkFormat
VK_FORMAT_B5G6R5_UNORM_PACK16	lib/vulkan/vulkan.h	/^    VK_FORMAT_B5G6R5_UNORM_PACK16 = 5,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_SINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8A8_SINT = 49,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_SNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8A8_SNORM = 45,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_SRGB	lib/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8A8_SRGB = 50,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_SSCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8A8_SSCALED = 47,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8A8_UINT = 48,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_UNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8A8_UNORM = 44,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8A8_USCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8A8_USCALED = 46,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_SINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8_SINT = 35,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_SNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8_SNORM = 31,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_SRGB	lib/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8_SRGB = 36,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_SSCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8_SSCALED = 33,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8_UINT = 34,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_UNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8_UNORM = 30,$/;"	e	enum:VkFormat
VK_FORMAT_B8G8R8_USCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_B8G8R8_USCALED = 32,$/;"	e	enum:VkFormat
VK_FORMAT_BC1_RGBA_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_BC1_RGBA_SRGB_BLOCK = 134,$/;"	e	enum:VkFormat
VK_FORMAT_BC1_RGBA_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_BC1_RGBA_UNORM_BLOCK = 133,$/;"	e	enum:VkFormat
VK_FORMAT_BC1_RGB_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_BC1_RGB_SRGB_BLOCK = 132,$/;"	e	enum:VkFormat
VK_FORMAT_BC1_RGB_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_BC1_RGB_UNORM_BLOCK = 131,$/;"	e	enum:VkFormat
VK_FORMAT_BC2_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_BC2_SRGB_BLOCK = 136,$/;"	e	enum:VkFormat
VK_FORMAT_BC2_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_BC2_UNORM_BLOCK = 135,$/;"	e	enum:VkFormat
VK_FORMAT_BC3_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_BC3_SRGB_BLOCK = 138,$/;"	e	enum:VkFormat
VK_FORMAT_BC3_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_BC3_UNORM_BLOCK = 137,$/;"	e	enum:VkFormat
VK_FORMAT_BC4_SNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_BC4_SNORM_BLOCK = 140,$/;"	e	enum:VkFormat
VK_FORMAT_BC4_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_BC4_UNORM_BLOCK = 139,$/;"	e	enum:VkFormat
VK_FORMAT_BC5_SNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_BC5_SNORM_BLOCK = 142,$/;"	e	enum:VkFormat
VK_FORMAT_BC5_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_BC5_UNORM_BLOCK = 141,$/;"	e	enum:VkFormat
VK_FORMAT_BC6H_SFLOAT_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_BC6H_SFLOAT_BLOCK = 144,$/;"	e	enum:VkFormat
VK_FORMAT_BC6H_UFLOAT_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_BC6H_UFLOAT_BLOCK = 143,$/;"	e	enum:VkFormat
VK_FORMAT_BC7_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_BC7_SRGB_BLOCK = 146,$/;"	e	enum:VkFormat
VK_FORMAT_BC7_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_BC7_UNORM_BLOCK = 145,$/;"	e	enum:VkFormat
VK_FORMAT_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_FORMAT_BEGIN_RANGE = VK_FORMAT_UNDEFINED,$/;"	e	enum:VkFormat
VK_FORMAT_D16_UNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_D16_UNORM = 124,$/;"	e	enum:VkFormat
VK_FORMAT_D16_UNORM_S8_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_D16_UNORM_S8_UINT = 128,$/;"	e	enum:VkFormat
VK_FORMAT_D24_UNORM_S8_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_D24_UNORM_S8_UINT = 129,$/;"	e	enum:VkFormat
VK_FORMAT_D32_SFLOAT	lib/vulkan/vulkan.h	/^    VK_FORMAT_D32_SFLOAT = 126,$/;"	e	enum:VkFormat
VK_FORMAT_D32_SFLOAT_S8_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_D32_SFLOAT_S8_UINT = 130,$/;"	e	enum:VkFormat
VK_FORMAT_E5B9G9R9_UFLOAT_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 = 123,$/;"	e	enum:VkFormat
VK_FORMAT_EAC_R11G11_SNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_EAC_R11G11_SNORM_BLOCK = 156,$/;"	e	enum:VkFormat
VK_FORMAT_EAC_R11G11_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_EAC_R11G11_UNORM_BLOCK = 155,$/;"	e	enum:VkFormat
VK_FORMAT_EAC_R11_SNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_EAC_R11_SNORM_BLOCK = 154,$/;"	e	enum:VkFormat
VK_FORMAT_EAC_R11_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_EAC_R11_UNORM_BLOCK = 153,$/;"	e	enum:VkFormat
VK_FORMAT_END_RANGE	lib/vulkan/vulkan.h	/^    VK_FORMAT_END_RANGE = VK_FORMAT_ASTC_12x12_SRGB_BLOCK,$/;"	e	enum:VkFormat
VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK = 150,$/;"	e	enum:VkFormat
VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK = 149,$/;"	e	enum:VkFormat
VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK = 152,$/;"	e	enum:VkFormat
VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK = 151,$/;"	e	enum:VkFormat
VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK = 148,$/;"	e	enum:VkFormat
VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK	lib/vulkan/vulkan.h	/^    VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK = 147,$/;"	e	enum:VkFormat
VK_FORMAT_FEATURE_BLIT_DST_BIT	lib/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_BLIT_DST_BIT = 0x00000800,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_BLIT_SRC_BIT	lib/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_BLIT_SRC_BIT = 0x00000400,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT	lib/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT = 0x00000080,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT	lib/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT = 0x00000100,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT	lib/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT = 0x00000200,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT	lib/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT = 0x00000001,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG	lib/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG = 0x00002000,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT	lib/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT = 0x00001000,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT	lib/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT = 0x00000004,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT	lib/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT = 0x00000002,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT	lib/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT = 0x00000020,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT	lib/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT = 0x00000010,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT	lib/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT = 0x00000008,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT	lib/vulkan/vulkan.h	/^    VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT = 0x00000040,$/;"	e	enum:VkFormatFeatureFlagBits
VK_FORMAT_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_FORMAT_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_SFLOAT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16A16_SFLOAT = 97,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_SINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16A16_SINT = 96,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_SNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16A16_SNORM = 92,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_SSCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16A16_SSCALED = 94,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16A16_UINT = 95,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_UNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16A16_UNORM = 91,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16A16_USCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16A16_USCALED = 93,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_SFLOAT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16_SFLOAT = 90,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_SINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16_SINT = 89,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_SNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16_SNORM = 85,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_SSCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16_SSCALED = 87,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16_UINT = 88,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_UNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16_UNORM = 84,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16B16_USCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16B16_USCALED = 86,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_SFLOAT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16_SFLOAT = 83,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_SINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16_SINT = 82,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_SNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16_SNORM = 78,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_SSCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16_SSCALED = 80,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16_UINT = 81,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_UNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16_UNORM = 77,$/;"	e	enum:VkFormat
VK_FORMAT_R16G16_USCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16G16_USCALED = 79,$/;"	e	enum:VkFormat
VK_FORMAT_R16_SFLOAT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16_SFLOAT = 76,$/;"	e	enum:VkFormat
VK_FORMAT_R16_SINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16_SINT = 75,$/;"	e	enum:VkFormat
VK_FORMAT_R16_SNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16_SNORM = 71,$/;"	e	enum:VkFormat
VK_FORMAT_R16_SSCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16_SSCALED = 73,$/;"	e	enum:VkFormat
VK_FORMAT_R16_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16_UINT = 74,$/;"	e	enum:VkFormat
VK_FORMAT_R16_UNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16_UNORM = 70,$/;"	e	enum:VkFormat
VK_FORMAT_R16_USCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_R16_USCALED = 72,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32B32A32_SFLOAT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R32G32B32A32_SFLOAT = 109,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32B32A32_SINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R32G32B32A32_SINT = 108,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32B32A32_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R32G32B32A32_UINT = 107,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32B32_SFLOAT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R32G32B32_SFLOAT = 106,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32B32_SINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R32G32B32_SINT = 105,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32B32_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R32G32B32_UINT = 104,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32_SFLOAT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R32G32_SFLOAT = 103,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32_SINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R32G32_SINT = 102,$/;"	e	enum:VkFormat
VK_FORMAT_R32G32_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R32G32_UINT = 101,$/;"	e	enum:VkFormat
VK_FORMAT_R32_SFLOAT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R32_SFLOAT = 100,$/;"	e	enum:VkFormat
VK_FORMAT_R32_SINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R32_SINT = 99,$/;"	e	enum:VkFormat
VK_FORMAT_R32_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R32_UINT = 98,$/;"	e	enum:VkFormat
VK_FORMAT_R4G4B4A4_UNORM_PACK16	lib/vulkan/vulkan.h	/^    VK_FORMAT_R4G4B4A4_UNORM_PACK16 = 2,$/;"	e	enum:VkFormat
VK_FORMAT_R4G4_UNORM_PACK8	lib/vulkan/vulkan.h	/^    VK_FORMAT_R4G4_UNORM_PACK8 = 1,$/;"	e	enum:VkFormat
VK_FORMAT_R5G5B5A1_UNORM_PACK16	lib/vulkan/vulkan.h	/^    VK_FORMAT_R5G5B5A1_UNORM_PACK16 = 6,$/;"	e	enum:VkFormat
VK_FORMAT_R5G6B5_UNORM_PACK16	lib/vulkan/vulkan.h	/^    VK_FORMAT_R5G6B5_UNORM_PACK16 = 4,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64B64A64_SFLOAT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R64G64B64A64_SFLOAT = 121,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64B64A64_SINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R64G64B64A64_SINT = 120,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64B64A64_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R64G64B64A64_UINT = 119,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64B64_SFLOAT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R64G64B64_SFLOAT = 118,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64B64_SINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R64G64B64_SINT = 117,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64B64_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R64G64B64_UINT = 116,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64_SFLOAT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R64G64_SFLOAT = 115,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64_SINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R64G64_SINT = 114,$/;"	e	enum:VkFormat
VK_FORMAT_R64G64_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R64G64_UINT = 113,$/;"	e	enum:VkFormat
VK_FORMAT_R64_SFLOAT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R64_SFLOAT = 112,$/;"	e	enum:VkFormat
VK_FORMAT_R64_SINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R64_SINT = 111,$/;"	e	enum:VkFormat
VK_FORMAT_R64_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R64_UINT = 110,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_SINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8A8_SINT = 42,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_SNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8A8_SNORM = 38,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_SRGB	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8A8_SRGB = 43,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_SSCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8A8_SSCALED = 40,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8A8_UINT = 41,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_UNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8A8_UNORM = 37,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8A8_USCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8A8_USCALED = 39,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_SINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8_SINT = 28,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_SNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8_SNORM = 24,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_SRGB	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8_SRGB = 29,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_SSCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8_SSCALED = 26,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8_UINT = 27,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_UNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8_UNORM = 23,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8B8_USCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8B8_USCALED = 25,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_SINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8_SINT = 21,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_SNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8_SNORM = 17,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_SRGB	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8_SRGB = 22,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_SSCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8_SSCALED = 19,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8_UINT = 20,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_UNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8_UNORM = 16,$/;"	e	enum:VkFormat
VK_FORMAT_R8G8_USCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8G8_USCALED = 18,$/;"	e	enum:VkFormat
VK_FORMAT_R8_SINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8_SINT = 14,$/;"	e	enum:VkFormat
VK_FORMAT_R8_SNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8_SNORM = 10,$/;"	e	enum:VkFormat
VK_FORMAT_R8_SRGB	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8_SRGB = 15,$/;"	e	enum:VkFormat
VK_FORMAT_R8_SSCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8_SSCALED = 12,$/;"	e	enum:VkFormat
VK_FORMAT_R8_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8_UINT = 13,$/;"	e	enum:VkFormat
VK_FORMAT_R8_UNORM	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8_UNORM = 9,$/;"	e	enum:VkFormat
VK_FORMAT_R8_USCALED	lib/vulkan/vulkan.h	/^    VK_FORMAT_R8_USCALED = 11,$/;"	e	enum:VkFormat
VK_FORMAT_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_FORMAT_RANGE_SIZE = (VK_FORMAT_ASTC_12x12_SRGB_BLOCK - VK_FORMAT_UNDEFINED + 1),$/;"	e	enum:VkFormat
VK_FORMAT_S8_UINT	lib/vulkan/vulkan.h	/^    VK_FORMAT_S8_UINT = 127,$/;"	e	enum:VkFormat
VK_FORMAT_UNDEFINED	lib/vulkan/vulkan.h	/^    VK_FORMAT_UNDEFINED = 0,$/;"	e	enum:VkFormat
VK_FORMAT_X8_D24_UNORM_PACK32	lib/vulkan/vulkan.h	/^    VK_FORMAT_X8_D24_UNORM_PACK32 = 125,$/;"	e	enum:VkFormat
VK_FRONT_FACE_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_FRONT_FACE_BEGIN_RANGE = VK_FRONT_FACE_COUNTER_CLOCKWISE,$/;"	e	enum:VkFrontFace
VK_FRONT_FACE_CLOCKWISE	lib/vulkan/vulkan.h	/^    VK_FRONT_FACE_CLOCKWISE = 1,$/;"	e	enum:VkFrontFace
VK_FRONT_FACE_COUNTER_CLOCKWISE	lib/vulkan/vulkan.h	/^    VK_FRONT_FACE_COUNTER_CLOCKWISE = 0,$/;"	e	enum:VkFrontFace
VK_FRONT_FACE_END_RANGE	lib/vulkan/vulkan.h	/^    VK_FRONT_FACE_END_RANGE = VK_FRONT_FACE_CLOCKWISE,$/;"	e	enum:VkFrontFace
VK_FRONT_FACE_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_FRONT_FACE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkFrontFace
VK_FRONT_FACE_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_FRONT_FACE_RANGE_SIZE = (VK_FRONT_FACE_CLOCKWISE - VK_FRONT_FACE_COUNTER_CLOCKWISE + 1),$/;"	e	enum:VkFrontFace
VK_HEADER_VERSION	lib/vulkan/vulkan.h	46;"	d
VK_ICD_WSI_PLATFORM_DISPLAY	lib/vulkan/vk_icd.h	/^    VK_ICD_WSI_PLATFORM_DISPLAY$/;"	e	enum:__anon43
VK_ICD_WSI_PLATFORM_MIR	lib/vulkan/vk_icd.h	/^    VK_ICD_WSI_PLATFORM_MIR,$/;"	e	enum:__anon43
VK_ICD_WSI_PLATFORM_WAYLAND	lib/vulkan/vk_icd.h	/^    VK_ICD_WSI_PLATFORM_WAYLAND,$/;"	e	enum:__anon43
VK_ICD_WSI_PLATFORM_WIN32	lib/vulkan/vk_icd.h	/^    VK_ICD_WSI_PLATFORM_WIN32,$/;"	e	enum:__anon43
VK_ICD_WSI_PLATFORM_XCB	lib/vulkan/vk_icd.h	/^    VK_ICD_WSI_PLATFORM_XCB,$/;"	e	enum:__anon43
VK_ICD_WSI_PLATFORM_XLIB	lib/vulkan/vk_icd.h	/^    VK_ICD_WSI_PLATFORM_XLIB,$/;"	e	enum:__anon43
VK_IMAGE_ASPECT_COLOR_BIT	lib/vulkan/vulkan.h	/^    VK_IMAGE_ASPECT_COLOR_BIT = 0x00000001,$/;"	e	enum:VkImageAspectFlagBits
VK_IMAGE_ASPECT_DEPTH_BIT	lib/vulkan/vulkan.h	/^    VK_IMAGE_ASPECT_DEPTH_BIT = 0x00000002,$/;"	e	enum:VkImageAspectFlagBits
VK_IMAGE_ASPECT_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_IMAGE_ASPECT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkImageAspectFlagBits
VK_IMAGE_ASPECT_METADATA_BIT	lib/vulkan/vulkan.h	/^    VK_IMAGE_ASPECT_METADATA_BIT = 0x00000008,$/;"	e	enum:VkImageAspectFlagBits
VK_IMAGE_ASPECT_STENCIL_BIT	lib/vulkan/vulkan.h	/^    VK_IMAGE_ASPECT_STENCIL_BIT = 0x00000004,$/;"	e	enum:VkImageAspectFlagBits
VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT	lib/vulkan/vulkan.h	/^    VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT = 0x00000010,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_IMAGE_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT	lib/vulkan/vulkan.h	/^    VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT = 0x00000008,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_SPARSE_ALIASED_BIT	lib/vulkan/vulkan.h	/^    VK_IMAGE_CREATE_SPARSE_ALIASED_BIT = 0x00000004,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_SPARSE_BINDING_BIT	lib/vulkan/vulkan.h	/^    VK_IMAGE_CREATE_SPARSE_BINDING_BIT = 0x00000001,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT	lib/vulkan/vulkan.h	/^    VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT = 0x00000002,$/;"	e	enum:VkImageCreateFlagBits
VK_IMAGE_LAYOUT_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_BEGIN_RANGE = VK_IMAGE_LAYOUT_UNDEFINED,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL	lib/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL = 2,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL	lib/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL = 3,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL	lib/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL = 4,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_END_RANGE	lib/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_END_RANGE = VK_IMAGE_LAYOUT_PREINITIALIZED,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_GENERAL	lib/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_GENERAL = 1,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_PREINITIALIZED	lib/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_PREINITIALIZED = 8,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_PRESENT_SRC_KHR	lib/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_PRESENT_SRC_KHR = 1000001002,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_RANGE_SIZE = (VK_IMAGE_LAYOUT_PREINITIALIZED - VK_IMAGE_LAYOUT_UNDEFINED + 1),$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL	lib/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL = 5,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL	lib/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL = 7,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL	lib/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL = 6,$/;"	e	enum:VkImageLayout
VK_IMAGE_LAYOUT_UNDEFINED	lib/vulkan/vulkan.h	/^    VK_IMAGE_LAYOUT_UNDEFINED = 0,$/;"	e	enum:VkImageLayout
VK_IMAGE_TILING_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_IMAGE_TILING_BEGIN_RANGE = VK_IMAGE_TILING_OPTIMAL,$/;"	e	enum:VkImageTiling
VK_IMAGE_TILING_END_RANGE	lib/vulkan/vulkan.h	/^    VK_IMAGE_TILING_END_RANGE = VK_IMAGE_TILING_LINEAR,$/;"	e	enum:VkImageTiling
VK_IMAGE_TILING_LINEAR	lib/vulkan/vulkan.h	/^    VK_IMAGE_TILING_LINEAR = 1,$/;"	e	enum:VkImageTiling
VK_IMAGE_TILING_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_IMAGE_TILING_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkImageTiling
VK_IMAGE_TILING_OPTIMAL	lib/vulkan/vulkan.h	/^    VK_IMAGE_TILING_OPTIMAL = 0,$/;"	e	enum:VkImageTiling
VK_IMAGE_TILING_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_IMAGE_TILING_RANGE_SIZE = (VK_IMAGE_TILING_LINEAR - VK_IMAGE_TILING_OPTIMAL + 1),$/;"	e	enum:VkImageTiling
VK_IMAGE_TYPE_1D	lib/vulkan/vulkan.h	/^    VK_IMAGE_TYPE_1D = 0,$/;"	e	enum:VkImageType
VK_IMAGE_TYPE_2D	lib/vulkan/vulkan.h	/^    VK_IMAGE_TYPE_2D = 1,$/;"	e	enum:VkImageType
VK_IMAGE_TYPE_3D	lib/vulkan/vulkan.h	/^    VK_IMAGE_TYPE_3D = 2,$/;"	e	enum:VkImageType
VK_IMAGE_TYPE_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_IMAGE_TYPE_BEGIN_RANGE = VK_IMAGE_TYPE_1D,$/;"	e	enum:VkImageType
VK_IMAGE_TYPE_END_RANGE	lib/vulkan/vulkan.h	/^    VK_IMAGE_TYPE_END_RANGE = VK_IMAGE_TYPE_3D,$/;"	e	enum:VkImageType
VK_IMAGE_TYPE_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_IMAGE_TYPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkImageType
VK_IMAGE_TYPE_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_IMAGE_TYPE_RANGE_SIZE = (VK_IMAGE_TYPE_3D - VK_IMAGE_TYPE_1D + 1),$/;"	e	enum:VkImageType
VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT	lib/vulkan/vulkan.h	/^    VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT = 0x00000010,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT	lib/vulkan/vulkan.h	/^    VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT = 0x00000020,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_IMAGE_USAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT	lib/vulkan/vulkan.h	/^    VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT = 0x00000080,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_SAMPLED_BIT	lib/vulkan/vulkan.h	/^    VK_IMAGE_USAGE_SAMPLED_BIT = 0x00000004,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_STORAGE_BIT	lib/vulkan/vulkan.h	/^    VK_IMAGE_USAGE_STORAGE_BIT = 0x00000008,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_TRANSFER_DST_BIT	lib/vulkan/vulkan.h	/^    VK_IMAGE_USAGE_TRANSFER_DST_BIT = 0x00000002,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_TRANSFER_SRC_BIT	lib/vulkan/vulkan.h	/^    VK_IMAGE_USAGE_TRANSFER_SRC_BIT = 0x00000001,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT	lib/vulkan/vulkan.h	/^    VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT = 0x00000040,$/;"	e	enum:VkImageUsageFlagBits
VK_IMAGE_VIEW_TYPE_1D	lib/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_1D = 0,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_1D_ARRAY	lib/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_1D_ARRAY = 4,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_2D	lib/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_2D = 1,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_2D_ARRAY	lib/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_2D_ARRAY = 5,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_3D	lib/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_3D = 2,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_BEGIN_RANGE = VK_IMAGE_VIEW_TYPE_1D,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_CUBE	lib/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_CUBE = 3,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_CUBE_ARRAY	lib/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_CUBE_ARRAY = 6,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_END_RANGE	lib/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_END_RANGE = VK_IMAGE_VIEW_TYPE_CUBE_ARRAY,$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkImageViewType
VK_IMAGE_VIEW_TYPE_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_IMAGE_VIEW_TYPE_RANGE_SIZE = (VK_IMAGE_VIEW_TYPE_CUBE_ARRAY - VK_IMAGE_VIEW_TYPE_1D + 1),$/;"	e	enum:VkImageViewType
VK_IMG_FILTER_CUBIC_EXTENSION_NAME	lib/vulkan/vulkan.h	3836;"	d
VK_IMG_FILTER_CUBIC_SPEC_VERSION	lib/vulkan/vulkan.h	3835;"	d
VK_IMG_filter_cubic	lib/vulkan/vulkan.h	3834;"	d
VK_INCOMPLETE	lib/vulkan/vulkan.h	/^    VK_INCOMPLETE = 5,$/;"	e	enum:VkResult
VK_INDEX_TYPE_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_INDEX_TYPE_BEGIN_RANGE = VK_INDEX_TYPE_UINT16,$/;"	e	enum:VkIndexType
VK_INDEX_TYPE_END_RANGE	lib/vulkan/vulkan.h	/^    VK_INDEX_TYPE_END_RANGE = VK_INDEX_TYPE_UINT32,$/;"	e	enum:VkIndexType
VK_INDEX_TYPE_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_INDEX_TYPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkIndexType
VK_INDEX_TYPE_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_INDEX_TYPE_RANGE_SIZE = (VK_INDEX_TYPE_UINT32 - VK_INDEX_TYPE_UINT16 + 1),$/;"	e	enum:VkIndexType
VK_INDEX_TYPE_UINT16	lib/vulkan/vulkan.h	/^    VK_INDEX_TYPE_UINT16 = 0,$/;"	e	enum:VkIndexType
VK_INDEX_TYPE_UINT32	lib/vulkan/vulkan.h	/^    VK_INDEX_TYPE_UINT32 = 1,$/;"	e	enum:VkIndexType
VK_INTERNAL_ALLOCATION_TYPE_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_INTERNAL_ALLOCATION_TYPE_BEGIN_RANGE = VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE,$/;"	e	enum:VkInternalAllocationType
VK_INTERNAL_ALLOCATION_TYPE_END_RANGE	lib/vulkan/vulkan.h	/^    VK_INTERNAL_ALLOCATION_TYPE_END_RANGE = VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE,$/;"	e	enum:VkInternalAllocationType
VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE	lib/vulkan/vulkan.h	/^    VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE = 0,$/;"	e	enum:VkInternalAllocationType
VK_INTERNAL_ALLOCATION_TYPE_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_INTERNAL_ALLOCATION_TYPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkInternalAllocationType
VK_INTERNAL_ALLOCATION_TYPE_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_INTERNAL_ALLOCATION_TYPE_RANGE_SIZE = (VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE - VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE + 1),$/;"	e	enum:VkInternalAllocationType
VK_KHR_ANDROID_SURFACE_EXTENSION_NAME	lib/vulkan/vulkan.h	3656;"	d
VK_KHR_ANDROID_SURFACE_SPEC_VERSION	lib/vulkan/vulkan.h	3655;"	d
VK_KHR_DISPLAY_EXTENSION_NAME	lib/vulkan/vulkan.h	3362;"	d
VK_KHR_DISPLAY_SPEC_VERSION	lib/vulkan/vulkan.h	3361;"	d
VK_KHR_DISPLAY_SWAPCHAIN_EXTENSION_NAME	lib/vulkan/vulkan.h	3487;"	d
VK_KHR_DISPLAY_SWAPCHAIN_SPEC_VERSION	lib/vulkan/vulkan.h	3486;"	d
VK_KHR_MIR_SURFACE_EXTENSION_NAME	lib/vulkan/vulkan.h	3621;"	d
VK_KHR_MIR_SURFACE_SPEC_VERSION	lib/vulkan/vulkan.h	3620;"	d
VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_EXTENSION_NAME	lib/vulkan/vulkan.h	3715;"	d
VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_SPEC_VERSION	lib/vulkan/vulkan.h	3714;"	d
VK_KHR_SURFACE_EXTENSION_NAME	lib/vulkan/vulkan.h	3177;"	d
VK_KHR_SURFACE_SPEC_VERSION	lib/vulkan/vulkan.h	3176;"	d
VK_KHR_SWAPCHAIN_EXTENSION_NAME	lib/vulkan/vulkan.h	3283;"	d
VK_KHR_SWAPCHAIN_SPEC_VERSION	lib/vulkan/vulkan.h	3282;"	d
VK_KHR_WAYLAND_SURFACE_EXTENSION_NAME	lib/vulkan/vulkan.h	3586;"	d
VK_KHR_WAYLAND_SURFACE_SPEC_VERSION	lib/vulkan/vulkan.h	3585;"	d
VK_KHR_WIN32_SURFACE_EXTENSION_NAME	lib/vulkan/vulkan.h	3684;"	d
VK_KHR_WIN32_SURFACE_SPEC_VERSION	lib/vulkan/vulkan.h	3683;"	d
VK_KHR_XCB_SURFACE_EXTENSION_NAME	lib/vulkan/vulkan.h	3550;"	d
VK_KHR_XCB_SURFACE_SPEC_VERSION	lib/vulkan/vulkan.h	3549;"	d
VK_KHR_XLIB_SURFACE_EXTENSION_NAME	lib/vulkan/vulkan.h	3514;"	d
VK_KHR_XLIB_SURFACE_SPEC_VERSION	lib/vulkan/vulkan.h	3513;"	d
VK_KHR_android_surface	lib/vulkan/vulkan.h	3652;"	d
VK_KHR_display	lib/vulkan/vulkan.h	3357;"	d
VK_KHR_display_swapchain	lib/vulkan/vulkan.h	3485;"	d
VK_KHR_mir_surface	lib/vulkan/vulkan.h	3617;"	d
VK_KHR_sampler_mirror_clamp_to_edge	lib/vulkan/vulkan.h	3713;"	d
VK_KHR_surface	lib/vulkan/vulkan.h	3173;"	d
VK_KHR_swapchain	lib/vulkan/vulkan.h	3279;"	d
VK_KHR_wayland_surface	lib/vulkan/vulkan.h	3582;"	d
VK_KHR_win32_surface	lib/vulkan/vulkan.h	3680;"	d
VK_KHR_xcb_surface	lib/vulkan/vulkan.h	3546;"	d
VK_KHR_xlib_surface	lib/vulkan/vulkan.h	3510;"	d
VK_LAYER_EXPORT	lib/vulkan/vk_layer.h	31;"	d
VK_LAYER_EXPORT	lib/vulkan/vk_layer.h	33;"	d
VK_LAYER_EXPORT	lib/vulkan/vk_layer.h	35;"	d
VK_LAYER_LINK_INFO	lib/vulkan/vk_layer.h	/^    VK_LAYER_LINK_INFO = 0,$/;"	e	enum:VkLayerFunction_
VK_LOADER_DATA	lib/vulkan/vk_icd.h	/^} VK_LOADER_DATA;$/;"	t	typeref:union:__anon42
VK_LOADER_DATA_CALLBACK	lib/vulkan/vk_layer.h	/^    VK_LOADER_DATA_CALLBACK = 1$/;"	e	enum:VkLayerFunction_
VK_LOD_CLAMP_NONE	lib/vulkan/vulkan.h	95;"	d
VK_LOGIC_OP_AND	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_AND = 1,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_AND_INVERTED	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_AND_INVERTED = 4,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_AND_REVERSE	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_AND_REVERSE = 2,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_BEGIN_RANGE = VK_LOGIC_OP_CLEAR,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_CLEAR	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_CLEAR = 0,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_COPY	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_COPY = 3,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_COPY_INVERTED	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_COPY_INVERTED = 12,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_END_RANGE	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_END_RANGE = VK_LOGIC_OP_SET,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_EQUIVALENT	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_EQUIVALENT = 9,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_INVERT	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_INVERT = 10,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_NAND	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_NAND = 14,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_NOR	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_NOR = 8,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_NO_OP	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_NO_OP = 5,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_OR	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_OR = 7,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_OR_INVERTED	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_OR_INVERTED = 13,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_OR_REVERSE	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_OR_REVERSE = 11,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_RANGE_SIZE = (VK_LOGIC_OP_SET - VK_LOGIC_OP_CLEAR + 1),$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_SET	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_SET = 15,$/;"	e	enum:VkLogicOp
VK_LOGIC_OP_XOR	lib/vulkan/vulkan.h	/^    VK_LOGIC_OP_XOR = 6,$/;"	e	enum:VkLogicOp
VK_MAKE_VERSION	lib/vulkan/vulkan.h	33;"	d
VK_MAX_DESCRIPTION_SIZE	lib/vulkan/vulkan.h	109;"	d
VK_MAX_EXTENSION_NAME_SIZE	lib/vulkan/vulkan.h	108;"	d
VK_MAX_MEMORY_HEAPS	lib/vulkan/vulkan.h	107;"	d
VK_MAX_MEMORY_TYPES	lib/vulkan/vulkan.h	106;"	d
VK_MAX_PHYSICAL_DEVICE_NAME_SIZE	lib/vulkan/vulkan.h	104;"	d
VK_MEMORY_HEAP_DEVICE_LOCAL_BIT	lib/vulkan/vulkan.h	/^    VK_MEMORY_HEAP_DEVICE_LOCAL_BIT = 0x00000001,$/;"	e	enum:VkMemoryHeapFlagBits
VK_MEMORY_HEAP_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_MEMORY_HEAP_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkMemoryHeapFlagBits
VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT	lib/vulkan/vulkan.h	/^    VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT = 0x00000001,$/;"	e	enum:VkMemoryPropertyFlagBits
VK_MEMORY_PROPERTY_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_MEMORY_PROPERTY_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkMemoryPropertyFlagBits
VK_MEMORY_PROPERTY_HOST_CACHED_BIT	lib/vulkan/vulkan.h	/^    VK_MEMORY_PROPERTY_HOST_CACHED_BIT = 0x00000008,$/;"	e	enum:VkMemoryPropertyFlagBits
VK_MEMORY_PROPERTY_HOST_COHERENT_BIT	lib/vulkan/vulkan.h	/^    VK_MEMORY_PROPERTY_HOST_COHERENT_BIT = 0x00000004,$/;"	e	enum:VkMemoryPropertyFlagBits
VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT	lib/vulkan/vulkan.h	/^    VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT = 0x00000002,$/;"	e	enum:VkMemoryPropertyFlagBits
VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT	lib/vulkan/vulkan.h	/^    VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT = 0x00000010,$/;"	e	enum:VkMemoryPropertyFlagBits
VK_NOT_READY	lib/vulkan/vulkan.h	/^    VK_NOT_READY = 1,$/;"	e	enum:VkResult
VK_NULL_HANDLE	lib/vulkan/vulkan.h	49;"	d
VK_NV_DEDICATED_ALLOCATION_EXTENSION_NAME	lib/vulkan/vulkan.h	3935;"	d
VK_NV_DEDICATED_ALLOCATION_SPEC_VERSION	lib/vulkan/vulkan.h	3934;"	d
VK_NV_GLSL_SHADER_EXTENSION_NAME	lib/vulkan/vulkan.h	3831;"	d
VK_NV_GLSL_SHADER_SPEC_VERSION	lib/vulkan/vulkan.h	3830;"	d
VK_NV_dedicated_allocation	lib/vulkan/vulkan.h	3933;"	d
VK_NV_glsl_shader	lib/vulkan/vulkan.h	3829;"	d
VK_PHYSICAL_DEVICE_TYPE_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_BEGIN_RANGE = VK_PHYSICAL_DEVICE_TYPE_OTHER,$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_CPU	lib/vulkan/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_CPU = 4,$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU	lib/vulkan/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU = 2,$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_END_RANGE	lib/vulkan/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_END_RANGE = VK_PHYSICAL_DEVICE_TYPE_CPU,$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU	lib/vulkan/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU = 1,$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_OTHER	lib/vulkan/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_OTHER = 0,$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_RANGE_SIZE = (VK_PHYSICAL_DEVICE_TYPE_CPU - VK_PHYSICAL_DEVICE_TYPE_OTHER + 1),$/;"	e	enum:VkPhysicalDeviceType
VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU	lib/vulkan/vulkan.h	/^    VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU = 3,$/;"	e	enum:VkPhysicalDeviceType
VK_PIPELINE_BIND_POINT_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_PIPELINE_BIND_POINT_BEGIN_RANGE = VK_PIPELINE_BIND_POINT_GRAPHICS,$/;"	e	enum:VkPipelineBindPoint
VK_PIPELINE_BIND_POINT_COMPUTE	lib/vulkan/vulkan.h	/^    VK_PIPELINE_BIND_POINT_COMPUTE = 1,$/;"	e	enum:VkPipelineBindPoint
VK_PIPELINE_BIND_POINT_END_RANGE	lib/vulkan/vulkan.h	/^    VK_PIPELINE_BIND_POINT_END_RANGE = VK_PIPELINE_BIND_POINT_COMPUTE,$/;"	e	enum:VkPipelineBindPoint
VK_PIPELINE_BIND_POINT_GRAPHICS	lib/vulkan/vulkan.h	/^    VK_PIPELINE_BIND_POINT_GRAPHICS = 0,$/;"	e	enum:VkPipelineBindPoint
VK_PIPELINE_BIND_POINT_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_PIPELINE_BIND_POINT_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkPipelineBindPoint
VK_PIPELINE_BIND_POINT_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_PIPELINE_BIND_POINT_RANGE_SIZE = (VK_PIPELINE_BIND_POINT_COMPUTE - VK_PIPELINE_BIND_POINT_GRAPHICS + 1),$/;"	e	enum:VkPipelineBindPoint
VK_PIPELINE_CACHE_HEADER_VERSION_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_PIPELINE_CACHE_HEADER_VERSION_BEGIN_RANGE = VK_PIPELINE_CACHE_HEADER_VERSION_ONE,$/;"	e	enum:VkPipelineCacheHeaderVersion
VK_PIPELINE_CACHE_HEADER_VERSION_END_RANGE	lib/vulkan/vulkan.h	/^    VK_PIPELINE_CACHE_HEADER_VERSION_END_RANGE = VK_PIPELINE_CACHE_HEADER_VERSION_ONE,$/;"	e	enum:VkPipelineCacheHeaderVersion
VK_PIPELINE_CACHE_HEADER_VERSION_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_PIPELINE_CACHE_HEADER_VERSION_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkPipelineCacheHeaderVersion
VK_PIPELINE_CACHE_HEADER_VERSION_ONE	lib/vulkan/vulkan.h	/^    VK_PIPELINE_CACHE_HEADER_VERSION_ONE = 1,$/;"	e	enum:VkPipelineCacheHeaderVersion
VK_PIPELINE_CACHE_HEADER_VERSION_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_PIPELINE_CACHE_HEADER_VERSION_RANGE_SIZE = (VK_PIPELINE_CACHE_HEADER_VERSION_ONE - VK_PIPELINE_CACHE_HEADER_VERSION_ONE + 1),$/;"	e	enum:VkPipelineCacheHeaderVersion
VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT = 0x00000002,$/;"	e	enum:VkPipelineCreateFlagBits
VK_PIPELINE_CREATE_DERIVATIVE_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_CREATE_DERIVATIVE_BIT = 0x00000004,$/;"	e	enum:VkPipelineCreateFlagBits
VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT = 0x00000001,$/;"	e	enum:VkPipelineCreateFlagBits
VK_PIPELINE_CREATE_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_PIPELINE_CREATE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkPipelineCreateFlagBits
VK_PIPELINE_STAGE_ALL_COMMANDS_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_ALL_COMMANDS_BIT = 0x00010000,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT = 0x00008000,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT = 0x00002000,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT = 0x00000400,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT = 0x00000800,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT = 0x00000002,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT = 0x00000100,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT = 0x00000080,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT = 0x00000040,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_HOST_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_HOST_BIT = 0x00004000,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT = 0x00000200,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT = 0x00000010,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT = 0x00000020,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT = 0x00000001,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_TRANSFER_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_TRANSFER_BIT = 0x00001000,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_VERTEX_INPUT_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_VERTEX_INPUT_BIT = 0x00000004,$/;"	e	enum:VkPipelineStageFlagBits
VK_PIPELINE_STAGE_VERTEX_SHADER_BIT	lib/vulkan/vulkan.h	/^    VK_PIPELINE_STAGE_VERTEX_SHADER_BIT = 0x00000008,$/;"	e	enum:VkPipelineStageFlagBits
VK_PLATFORM_H_	lib/vulkan/vk_platform.h	22;"	d
VK_POLYGON_MODE_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_POLYGON_MODE_BEGIN_RANGE = VK_POLYGON_MODE_FILL,$/;"	e	enum:VkPolygonMode
VK_POLYGON_MODE_END_RANGE	lib/vulkan/vulkan.h	/^    VK_POLYGON_MODE_END_RANGE = VK_POLYGON_MODE_POINT,$/;"	e	enum:VkPolygonMode
VK_POLYGON_MODE_FILL	lib/vulkan/vulkan.h	/^    VK_POLYGON_MODE_FILL = 0,$/;"	e	enum:VkPolygonMode
VK_POLYGON_MODE_LINE	lib/vulkan/vulkan.h	/^    VK_POLYGON_MODE_LINE = 1,$/;"	e	enum:VkPolygonMode
VK_POLYGON_MODE_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_POLYGON_MODE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkPolygonMode
VK_POLYGON_MODE_POINT	lib/vulkan/vulkan.h	/^    VK_POLYGON_MODE_POINT = 2,$/;"	e	enum:VkPolygonMode
VK_POLYGON_MODE_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_POLYGON_MODE_RANGE_SIZE = (VK_POLYGON_MODE_POINT - VK_POLYGON_MODE_FILL + 1),$/;"	e	enum:VkPolygonMode
VK_PRESENT_MODE_BEGIN_RANGE_KHR	lib/vulkan/vulkan.h	/^    VK_PRESENT_MODE_BEGIN_RANGE_KHR = VK_PRESENT_MODE_IMMEDIATE_KHR,$/;"	e	enum:VkPresentModeKHR
VK_PRESENT_MODE_END_RANGE_KHR	lib/vulkan/vulkan.h	/^    VK_PRESENT_MODE_END_RANGE_KHR = VK_PRESENT_MODE_FIFO_RELAXED_KHR,$/;"	e	enum:VkPresentModeKHR
VK_PRESENT_MODE_FIFO_KHR	lib/vulkan/vulkan.h	/^    VK_PRESENT_MODE_FIFO_KHR = 2,$/;"	e	enum:VkPresentModeKHR
VK_PRESENT_MODE_FIFO_RELAXED_KHR	lib/vulkan/vulkan.h	/^    VK_PRESENT_MODE_FIFO_RELAXED_KHR = 3,$/;"	e	enum:VkPresentModeKHR
VK_PRESENT_MODE_IMMEDIATE_KHR	lib/vulkan/vulkan.h	/^    VK_PRESENT_MODE_IMMEDIATE_KHR = 0,$/;"	e	enum:VkPresentModeKHR
VK_PRESENT_MODE_MAILBOX_KHR	lib/vulkan/vulkan.h	/^    VK_PRESENT_MODE_MAILBOX_KHR = 1,$/;"	e	enum:VkPresentModeKHR
VK_PRESENT_MODE_MAX_ENUM_KHR	lib/vulkan/vulkan.h	/^    VK_PRESENT_MODE_MAX_ENUM_KHR = 0x7FFFFFFF$/;"	e	enum:VkPresentModeKHR
VK_PRESENT_MODE_RANGE_SIZE_KHR	lib/vulkan/vulkan.h	/^    VK_PRESENT_MODE_RANGE_SIZE_KHR = (VK_PRESENT_MODE_FIFO_RELAXED_KHR - VK_PRESENT_MODE_IMMEDIATE_KHR + 1),$/;"	e	enum:VkPresentModeKHR
VK_PRIMITIVE_TOPOLOGY_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_BEGIN_RANGE = VK_PRIMITIVE_TOPOLOGY_POINT_LIST,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_END_RANGE	lib/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_END_RANGE = VK_PRIMITIVE_TOPOLOGY_PATCH_LIST,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_LINE_LIST	lib/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_LINE_LIST = 1,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY	lib/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY = 6,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_LINE_STRIP	lib/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_LINE_STRIP = 2,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY	lib/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY = 7,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_PATCH_LIST	lib/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_PATCH_LIST = 10,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_POINT_LIST	lib/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_POINT_LIST = 0,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_RANGE_SIZE = (VK_PRIMITIVE_TOPOLOGY_PATCH_LIST - VK_PRIMITIVE_TOPOLOGY_POINT_LIST + 1),$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN	lib/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN = 5,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST	lib/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST = 3,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY	lib/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY = 8,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP	lib/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP = 4,$/;"	e	enum:VkPrimitiveTopology
VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY	lib/vulkan/vulkan.h	/^    VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY = 9,$/;"	e	enum:VkPrimitiveTopology
VK_QUERY_CONTROL_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_QUERY_CONTROL_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkQueryControlFlagBits
VK_QUERY_CONTROL_PRECISE_BIT	lib/vulkan/vulkan.h	/^    VK_QUERY_CONTROL_PRECISE_BIT = 0x00000001,$/;"	e	enum:VkQueryControlFlagBits
VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT	lib/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT = 0x00000020,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT	lib/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT = 0x00000040,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT	lib/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT = 0x00000400,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT	lib/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT = 0x00000080,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT	lib/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT = 0x00000008,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT	lib/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT = 0x00000010,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT	lib/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT = 0x00000002,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT	lib/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT = 0x00000001,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT	lib/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT = 0x00000100,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT	lib/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT = 0x00000200,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT	lib/vulkan/vulkan.h	/^    VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT = 0x00000004,$/;"	e	enum:VkQueryPipelineStatisticFlagBits
VK_QUERY_RESULT_64_BIT	lib/vulkan/vulkan.h	/^    VK_QUERY_RESULT_64_BIT = 0x00000001,$/;"	e	enum:VkQueryResultFlagBits
VK_QUERY_RESULT_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_QUERY_RESULT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkQueryResultFlagBits
VK_QUERY_RESULT_PARTIAL_BIT	lib/vulkan/vulkan.h	/^    VK_QUERY_RESULT_PARTIAL_BIT = 0x00000008,$/;"	e	enum:VkQueryResultFlagBits
VK_QUERY_RESULT_WAIT_BIT	lib/vulkan/vulkan.h	/^    VK_QUERY_RESULT_WAIT_BIT = 0x00000002,$/;"	e	enum:VkQueryResultFlagBits
VK_QUERY_RESULT_WITH_AVAILABILITY_BIT	lib/vulkan/vulkan.h	/^    VK_QUERY_RESULT_WITH_AVAILABILITY_BIT = 0x00000004,$/;"	e	enum:VkQueryResultFlagBits
VK_QUERY_TYPE_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_QUERY_TYPE_BEGIN_RANGE = VK_QUERY_TYPE_OCCLUSION,$/;"	e	enum:VkQueryType
VK_QUERY_TYPE_END_RANGE	lib/vulkan/vulkan.h	/^    VK_QUERY_TYPE_END_RANGE = VK_QUERY_TYPE_TIMESTAMP,$/;"	e	enum:VkQueryType
VK_QUERY_TYPE_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_QUERY_TYPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkQueryType
VK_QUERY_TYPE_OCCLUSION	lib/vulkan/vulkan.h	/^    VK_QUERY_TYPE_OCCLUSION = 0,$/;"	e	enum:VkQueryType
VK_QUERY_TYPE_PIPELINE_STATISTICS	lib/vulkan/vulkan.h	/^    VK_QUERY_TYPE_PIPELINE_STATISTICS = 1,$/;"	e	enum:VkQueryType
VK_QUERY_TYPE_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_QUERY_TYPE_RANGE_SIZE = (VK_QUERY_TYPE_TIMESTAMP - VK_QUERY_TYPE_OCCLUSION + 1),$/;"	e	enum:VkQueryType
VK_QUERY_TYPE_TIMESTAMP	lib/vulkan/vulkan.h	/^    VK_QUERY_TYPE_TIMESTAMP = 2,$/;"	e	enum:VkQueryType
VK_QUEUE_COMPUTE_BIT	lib/vulkan/vulkan.h	/^    VK_QUEUE_COMPUTE_BIT = 0x00000002,$/;"	e	enum:VkQueueFlagBits
VK_QUEUE_FAMILY_IGNORED	lib/vulkan/vulkan.h	102;"	d
VK_QUEUE_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_QUEUE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkQueueFlagBits
VK_QUEUE_GRAPHICS_BIT	lib/vulkan/vulkan.h	/^    VK_QUEUE_GRAPHICS_BIT = 0x00000001,$/;"	e	enum:VkQueueFlagBits
VK_QUEUE_SPARSE_BINDING_BIT	lib/vulkan/vulkan.h	/^    VK_QUEUE_SPARSE_BINDING_BIT = 0x00000008,$/;"	e	enum:VkQueueFlagBits
VK_QUEUE_TRANSFER_BIT	lib/vulkan/vulkan.h	/^    VK_QUEUE_TRANSFER_BIT = 0x00000004,$/;"	e	enum:VkQueueFlagBits
VK_RASTERIZATION_ORDER_BEGIN_RANGE_AMD	lib/vulkan/vulkan.h	/^    VK_RASTERIZATION_ORDER_BEGIN_RANGE_AMD = VK_RASTERIZATION_ORDER_STRICT_AMD,$/;"	e	enum:VkRasterizationOrderAMD
VK_RASTERIZATION_ORDER_END_RANGE_AMD	lib/vulkan/vulkan.h	/^    VK_RASTERIZATION_ORDER_END_RANGE_AMD = VK_RASTERIZATION_ORDER_RELAXED_AMD,$/;"	e	enum:VkRasterizationOrderAMD
VK_RASTERIZATION_ORDER_MAX_ENUM_AMD	lib/vulkan/vulkan.h	/^    VK_RASTERIZATION_ORDER_MAX_ENUM_AMD = 0x7FFFFFFF$/;"	e	enum:VkRasterizationOrderAMD
VK_RASTERIZATION_ORDER_RANGE_SIZE_AMD	lib/vulkan/vulkan.h	/^    VK_RASTERIZATION_ORDER_RANGE_SIZE_AMD = (VK_RASTERIZATION_ORDER_RELAXED_AMD - VK_RASTERIZATION_ORDER_STRICT_AMD + 1),$/;"	e	enum:VkRasterizationOrderAMD
VK_RASTERIZATION_ORDER_RELAXED_AMD	lib/vulkan/vulkan.h	/^    VK_RASTERIZATION_ORDER_RELAXED_AMD = 1,$/;"	e	enum:VkRasterizationOrderAMD
VK_RASTERIZATION_ORDER_STRICT_AMD	lib/vulkan/vulkan.h	/^    VK_RASTERIZATION_ORDER_STRICT_AMD = 0,$/;"	e	enum:VkRasterizationOrderAMD
VK_REMAINING_ARRAY_LAYERS	lib/vulkan/vulkan.h	97;"	d
VK_REMAINING_MIP_LEVELS	lib/vulkan/vulkan.h	96;"	d
VK_RESULT_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_RESULT_BEGIN_RANGE = VK_ERROR_FORMAT_NOT_SUPPORTED,$/;"	e	enum:VkResult
VK_RESULT_END_RANGE	lib/vulkan/vulkan.h	/^    VK_RESULT_END_RANGE = VK_INCOMPLETE,$/;"	e	enum:VkResult
VK_RESULT_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_RESULT_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkResult
VK_RESULT_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_RESULT_RANGE_SIZE = (VK_INCOMPLETE - VK_ERROR_FORMAT_NOT_SUPPORTED + 1),$/;"	e	enum:VkResult
VK_SAMPLER_ADDRESS_MODE_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_BEGIN_RANGE = VK_SAMPLER_ADDRESS_MODE_REPEAT,$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER	lib/vulkan/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER = 3,$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE	lib/vulkan/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE = 2,$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_ADDRESS_MODE_END_RANGE	lib/vulkan/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_END_RANGE = VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER,$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_ADDRESS_MODE_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT	lib/vulkan/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT = 1,$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE	lib/vulkan/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE = 4,$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_ADDRESS_MODE_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_RANGE_SIZE = (VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER - VK_SAMPLER_ADDRESS_MODE_REPEAT + 1),$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_ADDRESS_MODE_REPEAT	lib/vulkan/vulkan.h	/^    VK_SAMPLER_ADDRESS_MODE_REPEAT = 0,$/;"	e	enum:VkSamplerAddressMode
VK_SAMPLER_MIPMAP_MODE_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_SAMPLER_MIPMAP_MODE_BEGIN_RANGE = VK_SAMPLER_MIPMAP_MODE_NEAREST,$/;"	e	enum:VkSamplerMipmapMode
VK_SAMPLER_MIPMAP_MODE_END_RANGE	lib/vulkan/vulkan.h	/^    VK_SAMPLER_MIPMAP_MODE_END_RANGE = VK_SAMPLER_MIPMAP_MODE_LINEAR,$/;"	e	enum:VkSamplerMipmapMode
VK_SAMPLER_MIPMAP_MODE_LINEAR	lib/vulkan/vulkan.h	/^    VK_SAMPLER_MIPMAP_MODE_LINEAR = 1,$/;"	e	enum:VkSamplerMipmapMode
VK_SAMPLER_MIPMAP_MODE_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_SAMPLER_MIPMAP_MODE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkSamplerMipmapMode
VK_SAMPLER_MIPMAP_MODE_NEAREST	lib/vulkan/vulkan.h	/^    VK_SAMPLER_MIPMAP_MODE_NEAREST = 0,$/;"	e	enum:VkSamplerMipmapMode
VK_SAMPLER_MIPMAP_MODE_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_SAMPLER_MIPMAP_MODE_RANGE_SIZE = (VK_SAMPLER_MIPMAP_MODE_LINEAR - VK_SAMPLER_MIPMAP_MODE_NEAREST + 1),$/;"	e	enum:VkSamplerMipmapMode
VK_SAMPLE_COUNT_16_BIT	lib/vulkan/vulkan.h	/^    VK_SAMPLE_COUNT_16_BIT = 0x00000010,$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_1_BIT	lib/vulkan/vulkan.h	/^    VK_SAMPLE_COUNT_1_BIT = 0x00000001,$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_2_BIT	lib/vulkan/vulkan.h	/^    VK_SAMPLE_COUNT_2_BIT = 0x00000002,$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_32_BIT	lib/vulkan/vulkan.h	/^    VK_SAMPLE_COUNT_32_BIT = 0x00000020,$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_4_BIT	lib/vulkan/vulkan.h	/^    VK_SAMPLE_COUNT_4_BIT = 0x00000004,$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_64_BIT	lib/vulkan/vulkan.h	/^    VK_SAMPLE_COUNT_64_BIT = 0x00000040,$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_8_BIT	lib/vulkan/vulkan.h	/^    VK_SAMPLE_COUNT_8_BIT = 0x00000008,$/;"	e	enum:VkSampleCountFlagBits
VK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkSampleCountFlagBits
VK_SDK_PLATFORM_H	lib/vulkan/vk_sdk_platform.h	23;"	d
VK_SHADER_STAGE_ALL	lib/vulkan/vulkan.h	/^    VK_SHADER_STAGE_ALL = 0x7FFFFFFF,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_ALL_GRAPHICS	lib/vulkan/vulkan.h	/^    VK_SHADER_STAGE_ALL_GRAPHICS = 0x0000001F,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_COMPUTE_BIT	lib/vulkan/vulkan.h	/^    VK_SHADER_STAGE_COMPUTE_BIT = 0x00000020,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_SHADER_STAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_FRAGMENT_BIT	lib/vulkan/vulkan.h	/^    VK_SHADER_STAGE_FRAGMENT_BIT = 0x00000010,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_GEOMETRY_BIT	lib/vulkan/vulkan.h	/^    VK_SHADER_STAGE_GEOMETRY_BIT = 0x00000008,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT	lib/vulkan/vulkan.h	/^    VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT = 0x00000002,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT	lib/vulkan/vulkan.h	/^    VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT = 0x00000004,$/;"	e	enum:VkShaderStageFlagBits
VK_SHADER_STAGE_VERTEX_BIT	lib/vulkan/vulkan.h	/^    VK_SHADER_STAGE_VERTEX_BIT = 0x00000001,$/;"	e	enum:VkShaderStageFlagBits
VK_SHARING_MODE_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_SHARING_MODE_BEGIN_RANGE = VK_SHARING_MODE_EXCLUSIVE,$/;"	e	enum:VkSharingMode
VK_SHARING_MODE_CONCURRENT	lib/vulkan/vulkan.h	/^    VK_SHARING_MODE_CONCURRENT = 1,$/;"	e	enum:VkSharingMode
VK_SHARING_MODE_END_RANGE	lib/vulkan/vulkan.h	/^    VK_SHARING_MODE_END_RANGE = VK_SHARING_MODE_CONCURRENT,$/;"	e	enum:VkSharingMode
VK_SHARING_MODE_EXCLUSIVE	lib/vulkan/vulkan.h	/^    VK_SHARING_MODE_EXCLUSIVE = 0,$/;"	e	enum:VkSharingMode
VK_SHARING_MODE_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_SHARING_MODE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkSharingMode
VK_SHARING_MODE_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_SHARING_MODE_RANGE_SIZE = (VK_SHARING_MODE_CONCURRENT - VK_SHARING_MODE_EXCLUSIVE + 1),$/;"	e	enum:VkSharingMode
VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT	lib/vulkan/vulkan.h	/^    VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT = 0x00000002,$/;"	e	enum:VkSparseImageFormatFlagBits
VK_SPARSE_IMAGE_FORMAT_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_SPARSE_IMAGE_FORMAT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkSparseImageFormatFlagBits
VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT	lib/vulkan/vulkan.h	/^    VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT = 0x00000004,$/;"	e	enum:VkSparseImageFormatFlagBits
VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT	lib/vulkan/vulkan.h	/^    VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT = 0x00000001,$/;"	e	enum:VkSparseImageFormatFlagBits
VK_SPARSE_MEMORY_BIND_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_SPARSE_MEMORY_BIND_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkSparseMemoryBindFlagBits
VK_SPARSE_MEMORY_BIND_METADATA_BIT	lib/vulkan/vulkan.h	/^    VK_SPARSE_MEMORY_BIND_METADATA_BIT = 0x00000001,$/;"	e	enum:VkSparseMemoryBindFlagBits
VK_STENCIL_FACE_BACK_BIT	lib/vulkan/vulkan.h	/^    VK_STENCIL_FACE_BACK_BIT = 0x00000002,$/;"	e	enum:VkStencilFaceFlagBits
VK_STENCIL_FACE_FLAG_BITS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_STENCIL_FACE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkStencilFaceFlagBits
VK_STENCIL_FACE_FRONT_BIT	lib/vulkan/vulkan.h	/^    VK_STENCIL_FACE_FRONT_BIT = 0x00000001,$/;"	e	enum:VkStencilFaceFlagBits
VK_STENCIL_FRONT_AND_BACK	lib/vulkan/vulkan.h	/^    VK_STENCIL_FRONT_AND_BACK = 0x00000003,$/;"	e	enum:VkStencilFaceFlagBits
VK_STENCIL_OP_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_STENCIL_OP_BEGIN_RANGE = VK_STENCIL_OP_KEEP,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_DECREMENT_AND_CLAMP	lib/vulkan/vulkan.h	/^    VK_STENCIL_OP_DECREMENT_AND_CLAMP = 4,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_DECREMENT_AND_WRAP	lib/vulkan/vulkan.h	/^    VK_STENCIL_OP_DECREMENT_AND_WRAP = 7,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_END_RANGE	lib/vulkan/vulkan.h	/^    VK_STENCIL_OP_END_RANGE = VK_STENCIL_OP_DECREMENT_AND_WRAP,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_INCREMENT_AND_CLAMP	lib/vulkan/vulkan.h	/^    VK_STENCIL_OP_INCREMENT_AND_CLAMP = 3,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_INCREMENT_AND_WRAP	lib/vulkan/vulkan.h	/^    VK_STENCIL_OP_INCREMENT_AND_WRAP = 6,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_INVERT	lib/vulkan/vulkan.h	/^    VK_STENCIL_OP_INVERT = 5,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_KEEP	lib/vulkan/vulkan.h	/^    VK_STENCIL_OP_KEEP = 0,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_STENCIL_OP_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_STENCIL_OP_RANGE_SIZE = (VK_STENCIL_OP_DECREMENT_AND_WRAP - VK_STENCIL_OP_KEEP + 1),$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_REPLACE	lib/vulkan/vulkan.h	/^    VK_STENCIL_OP_REPLACE = 2,$/;"	e	enum:VkStencilOp
VK_STENCIL_OP_ZERO	lib/vulkan/vulkan.h	/^    VK_STENCIL_OP_ZERO = 1,$/;"	e	enum:VkStencilOp
VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR = 1000008000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_APPLICATION_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_APPLICATION_INFO = 0,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_BEGIN_RANGE = VK_STRUCTURE_TYPE_APPLICATION_INFO,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BIND_SPARSE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_BIND_SPARSE_INFO = 7,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO = 12,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER = 44,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO = 13,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO = 40,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO = 42,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO = 41,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO = 39,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO = 29,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET = 36,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT = 1000022002,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT = 1000022000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT = 1000022001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT = 1000011000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT	lib/vulkan/vulkan.h	3723;"	d
VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV = 1000026001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV = 1000026000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV = 1000026002,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO = 33,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO = 34,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO = 32,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO = 3,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO = 2,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR = 1000002000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR = 1000003000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR = 1000002001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_END_RANGE	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_END_RANGE = VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_EVENT_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_EVENT_CREATE_INFO = 10,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_FENCE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_FENCE_CREATE_INFO = 8,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO = 37,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO = 28,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO = 14,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER = 45,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO = 15,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO = 1,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO = 48,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO = 47,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE = 6,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO = 5,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MEMORY_BARRIER	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_MEMORY_BARRIER = 46,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_MIR_SURFACE_CREATE_INFO_KHR	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_MIR_SURFACE_CREATE_INFO_KHR = 1000007000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO = 17,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO = 26,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO = 25,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO = 27,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO = 20,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO = 30,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO = 24,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO = 23,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD = 1000018000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO = 18,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO = 21,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO = 19,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO = 22,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_PRESENT_INFO_KHR	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_PRESENT_INFO_KHR = 1000001001,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO = 11,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_RANGE_SIZE = (VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO - VK_STRUCTURE_TYPE_APPLICATION_INFO + 1),$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO = 43,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO = 38,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO = 31,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO = 9,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO = 16,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SUBMIT_INFO	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_SUBMIT_INFO = 4,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR = 1000001000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR = 1000006000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR = 1000009000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET = 35,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR = 1000005000,$/;"	e	enum:VkStructureType
VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR	lib/vulkan/vulkan.h	/^    VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR = 1000004000,$/;"	e	enum:VkStructureType
VK_SUBOPTIMAL_KHR	lib/vulkan/vulkan.h	/^    VK_SUBOPTIMAL_KHR = 1000001003,$/;"	e	enum:VkResult
VK_SUBPASS_CONTENTS_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_SUBPASS_CONTENTS_BEGIN_RANGE = VK_SUBPASS_CONTENTS_INLINE,$/;"	e	enum:VkSubpassContents
VK_SUBPASS_CONTENTS_END_RANGE	lib/vulkan/vulkan.h	/^    VK_SUBPASS_CONTENTS_END_RANGE = VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS,$/;"	e	enum:VkSubpassContents
VK_SUBPASS_CONTENTS_INLINE	lib/vulkan/vulkan.h	/^    VK_SUBPASS_CONTENTS_INLINE = 0,$/;"	e	enum:VkSubpassContents
VK_SUBPASS_CONTENTS_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_SUBPASS_CONTENTS_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkSubpassContents
VK_SUBPASS_CONTENTS_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_SUBPASS_CONTENTS_RANGE_SIZE = (VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS - VK_SUBPASS_CONTENTS_INLINE + 1),$/;"	e	enum:VkSubpassContents
VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS	lib/vulkan/vulkan.h	/^    VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS = 1,$/;"	e	enum:VkSubpassContents
VK_SUBPASS_EXTERNAL	lib/vulkan/vulkan.h	103;"	d
VK_SUCCESS	lib/vulkan/vulkan.h	/^    VK_SUCCESS = 0,$/;"	e	enum:VkResult
VK_SURFACE_TRANSFORM_FLAG_BITS_MAX_ENUM_KHR	lib/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_FLAG_BITS_MAX_ENUM_KHR = 0x7FFFFFFF$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR	lib/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR = 0x00000010,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR	lib/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR = 0x00000040,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR	lib/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR = 0x00000080,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR	lib/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR = 0x00000020,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR	lib/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR = 0x00000001,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR	lib/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR = 0x00000100,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR	lib/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR = 0x00000004,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR	lib/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR = 0x00000008,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR	lib/vulkan/vulkan.h	/^    VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR = 0x00000002,$/;"	e	enum:VkSurfaceTransformFlagBitsKHR
VK_SYSTEM_ALLOCATION_SCOPE_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_BEGIN_RANGE = VK_SYSTEM_ALLOCATION_SCOPE_COMMAND,$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_CACHE	lib/vulkan/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_CACHE = 2,$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_COMMAND	lib/vulkan/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_COMMAND = 0,$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_DEVICE	lib/vulkan/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_DEVICE = 3,$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_END_RANGE	lib/vulkan/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_END_RANGE = VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE,$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE	lib/vulkan/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE = 4,$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_OBJECT	lib/vulkan/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_OBJECT = 1,$/;"	e	enum:VkSystemAllocationScope
VK_SYSTEM_ALLOCATION_SCOPE_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_SYSTEM_ALLOCATION_SCOPE_RANGE_SIZE = (VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE - VK_SYSTEM_ALLOCATION_SCOPE_COMMAND + 1),$/;"	e	enum:VkSystemAllocationScope
VK_TIMEOUT	lib/vulkan/vulkan.h	/^    VK_TIMEOUT = 2,$/;"	e	enum:VkResult
VK_TRUE	lib/vulkan/vulkan.h	100;"	d
VK_UUID_SIZE	lib/vulkan/vulkan.h	105;"	d
VK_VERSION_1_0	lib/vulkan/vulkan.h	30;"	d
VK_VERSION_MAJOR	lib/vulkan/vulkan.h	42;"	d
VK_VERSION_MINOR	lib/vulkan/vulkan.h	43;"	d
VK_VERSION_PATCH	lib/vulkan/vulkan.h	44;"	d
VK_VERTEX_INPUT_RATE_BEGIN_RANGE	lib/vulkan/vulkan.h	/^    VK_VERTEX_INPUT_RATE_BEGIN_RANGE = VK_VERTEX_INPUT_RATE_VERTEX,$/;"	e	enum:VkVertexInputRate
VK_VERTEX_INPUT_RATE_END_RANGE	lib/vulkan/vulkan.h	/^    VK_VERTEX_INPUT_RATE_END_RANGE = VK_VERTEX_INPUT_RATE_INSTANCE,$/;"	e	enum:VkVertexInputRate
VK_VERTEX_INPUT_RATE_INSTANCE	lib/vulkan/vulkan.h	/^    VK_VERTEX_INPUT_RATE_INSTANCE = 1,$/;"	e	enum:VkVertexInputRate
VK_VERTEX_INPUT_RATE_MAX_ENUM	lib/vulkan/vulkan.h	/^    VK_VERTEX_INPUT_RATE_MAX_ENUM = 0x7FFFFFFF$/;"	e	enum:VkVertexInputRate
VK_VERTEX_INPUT_RATE_RANGE_SIZE	lib/vulkan/vulkan.h	/^    VK_VERTEX_INPUT_RATE_RANGE_SIZE = (VK_VERTEX_INPUT_RATE_INSTANCE - VK_VERTEX_INPUT_RATE_VERTEX + 1),$/;"	e	enum:VkVertexInputRate
VK_VERTEX_INPUT_RATE_VERTEX	lib/vulkan/vulkan.h	/^    VK_VERTEX_INPUT_RATE_VERTEX = 0,$/;"	e	enum:VkVertexInputRate
VK_WHOLE_SIZE	lib/vulkan/vulkan.h	98;"	d
VPATH	Makefile	/^VPATH=inc:src:lib$/;"	m
VULKAN_H_	lib/vulkan/vulkan.h	2;"	d
VULKAN_LIB_PATH	Makefile	/^VULKAN_LIB_PATH := $(VULKAN_SDK_DIR)\/lib$/;"	m
VULKAN_SDK_DIR	Makefile	/^VULKAN_SDK_DIR := \/home\/al\/VulkanSDK\/1.0.21.1\/x86_64$/;"	m
Version	lib/vulkan/spirv.hpp	/^static const unsigned int Version = 0x00010100;$/;"	m	namespace:spv
Vertex	inc/quad.h	/^	struct Vertex {$/;"	s	class:Quad
Vertex	inc/vulkan_manager.h	/^	struct Vertex {$/;"	s	class:VulkanManager
VkAccessFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkAccessFlagBits {$/;"	g
VkAccessFlagBits	lib/vulkan/vulkan.h	/^} VkAccessFlagBits;$/;"	t	typeref:enum:VkAccessFlagBits
VkAccessFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkAccessFlags;$/;"	t
VkAllocationCallbacks	lib/vulkan/vulkan.h	/^typedef struct VkAllocationCallbacks {$/;"	s
VkAllocationCallbacks	lib/vulkan/vulkan.h	/^} VkAllocationCallbacks;$/;"	t	typeref:struct:VkAllocationCallbacks
VkAndroidSurfaceCreateFlagsKHR	lib/vulkan/vulkan.h	/^typedef VkFlags VkAndroidSurfaceCreateFlagsKHR;$/;"	t
VkAndroidSurfaceCreateInfoKHR	lib/vulkan/vulkan.h	/^typedef struct VkAndroidSurfaceCreateInfoKHR {$/;"	s
VkAndroidSurfaceCreateInfoKHR	lib/vulkan/vulkan.h	/^} VkAndroidSurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkAndroidSurfaceCreateInfoKHR
VkApplicationInfo	lib/vulkan/vulkan.h	/^typedef struct VkApplicationInfo {$/;"	s
VkApplicationInfo	lib/vulkan/vulkan.h	/^} VkApplicationInfo;$/;"	t	typeref:struct:VkApplicationInfo
VkAttachmentDescription	lib/vulkan/vulkan.h	/^typedef struct VkAttachmentDescription {$/;"	s
VkAttachmentDescription	lib/vulkan/vulkan.h	/^} VkAttachmentDescription;$/;"	t	typeref:struct:VkAttachmentDescription
VkAttachmentDescriptionFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkAttachmentDescriptionFlagBits {$/;"	g
VkAttachmentDescriptionFlagBits	lib/vulkan/vulkan.h	/^} VkAttachmentDescriptionFlagBits;$/;"	t	typeref:enum:VkAttachmentDescriptionFlagBits
VkAttachmentDescriptionFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkAttachmentDescriptionFlags;$/;"	t
VkAttachmentLoadOp	lib/vulkan/vulkan.h	/^typedef enum VkAttachmentLoadOp {$/;"	g
VkAttachmentLoadOp	lib/vulkan/vulkan.h	/^} VkAttachmentLoadOp;$/;"	t	typeref:enum:VkAttachmentLoadOp
VkAttachmentReference	lib/vulkan/vulkan.h	/^typedef struct VkAttachmentReference {$/;"	s
VkAttachmentReference	lib/vulkan/vulkan.h	/^} VkAttachmentReference;$/;"	t	typeref:struct:VkAttachmentReference
VkAttachmentStoreOp	lib/vulkan/vulkan.h	/^typedef enum VkAttachmentStoreOp {$/;"	g
VkAttachmentStoreOp	lib/vulkan/vulkan.h	/^} VkAttachmentStoreOp;$/;"	t	typeref:enum:VkAttachmentStoreOp
VkBindSparseInfo	lib/vulkan/vulkan.h	/^typedef struct VkBindSparseInfo {$/;"	s
VkBindSparseInfo	lib/vulkan/vulkan.h	/^} VkBindSparseInfo;$/;"	t	typeref:struct:VkBindSparseInfo
VkBlendFactor	lib/vulkan/vulkan.h	/^typedef enum VkBlendFactor {$/;"	g
VkBlendFactor	lib/vulkan/vulkan.h	/^} VkBlendFactor;$/;"	t	typeref:enum:VkBlendFactor
VkBlendOp	lib/vulkan/vulkan.h	/^typedef enum VkBlendOp {$/;"	g
VkBlendOp	lib/vulkan/vulkan.h	/^} VkBlendOp;$/;"	t	typeref:enum:VkBlendOp
VkBool32	lib/vulkan/vulkan.h	/^typedef uint32_t VkBool32;$/;"	t
VkBorderColor	lib/vulkan/vulkan.h	/^typedef enum VkBorderColor {$/;"	g
VkBorderColor	lib/vulkan/vulkan.h	/^} VkBorderColor;$/;"	t	typeref:enum:VkBorderColor
VkBufferCopy	lib/vulkan/vulkan.h	/^typedef struct VkBufferCopy {$/;"	s
VkBufferCopy	lib/vulkan/vulkan.h	/^} VkBufferCopy;$/;"	t	typeref:struct:VkBufferCopy
VkBufferCreateFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkBufferCreateFlagBits {$/;"	g
VkBufferCreateFlagBits	lib/vulkan/vulkan.h	/^} VkBufferCreateFlagBits;$/;"	t	typeref:enum:VkBufferCreateFlagBits
VkBufferCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkBufferCreateFlags;$/;"	t
VkBufferCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkBufferCreateInfo {$/;"	s
VkBufferCreateInfo	lib/vulkan/vulkan.h	/^} VkBufferCreateInfo;$/;"	t	typeref:struct:VkBufferCreateInfo
VkBufferImageCopy	lib/vulkan/vulkan.h	/^typedef struct VkBufferImageCopy {$/;"	s
VkBufferImageCopy	lib/vulkan/vulkan.h	/^} VkBufferImageCopy;$/;"	t	typeref:struct:VkBufferImageCopy
VkBufferMemoryBarrier	lib/vulkan/vulkan.h	/^typedef struct VkBufferMemoryBarrier {$/;"	s
VkBufferMemoryBarrier	lib/vulkan/vulkan.h	/^} VkBufferMemoryBarrier;$/;"	t	typeref:struct:VkBufferMemoryBarrier
VkBufferUsageFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkBufferUsageFlagBits {$/;"	g
VkBufferUsageFlagBits	lib/vulkan/vulkan.h	/^} VkBufferUsageFlagBits;$/;"	t	typeref:enum:VkBufferUsageFlagBits
VkBufferUsageFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkBufferUsageFlags;$/;"	t
VkBufferViewCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkBufferViewCreateFlags;$/;"	t
VkBufferViewCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkBufferViewCreateInfo {$/;"	s
VkBufferViewCreateInfo	lib/vulkan/vulkan.h	/^} VkBufferViewCreateInfo;$/;"	t	typeref:struct:VkBufferViewCreateInfo
VkClearAttachment	lib/vulkan/vulkan.h	/^typedef struct VkClearAttachment {$/;"	s
VkClearAttachment	lib/vulkan/vulkan.h	/^} VkClearAttachment;$/;"	t	typeref:struct:VkClearAttachment
VkClearColorValue	lib/vulkan/vulkan.h	/^typedef union VkClearColorValue {$/;"	u
VkClearColorValue	lib/vulkan/vulkan.h	/^} VkClearColorValue;$/;"	t	typeref:union:VkClearColorValue
VkClearDepthStencilValue	lib/vulkan/vulkan.h	/^typedef struct VkClearDepthStencilValue {$/;"	s
VkClearDepthStencilValue	lib/vulkan/vulkan.h	/^} VkClearDepthStencilValue;$/;"	t	typeref:struct:VkClearDepthStencilValue
VkClearRect	lib/vulkan/vulkan.h	/^typedef struct VkClearRect {$/;"	s
VkClearRect	lib/vulkan/vulkan.h	/^} VkClearRect;$/;"	t	typeref:struct:VkClearRect
VkClearValue	lib/vulkan/vulkan.h	/^typedef union VkClearValue {$/;"	u
VkClearValue	lib/vulkan/vulkan.h	/^} VkClearValue;$/;"	t	typeref:union:VkClearValue
VkColorComponentFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkColorComponentFlagBits {$/;"	g
VkColorComponentFlagBits	lib/vulkan/vulkan.h	/^} VkColorComponentFlagBits;$/;"	t	typeref:enum:VkColorComponentFlagBits
VkColorComponentFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkColorComponentFlags;$/;"	t
VkColorSpaceKHR	lib/vulkan/vulkan.h	/^typedef enum VkColorSpaceKHR {$/;"	g
VkColorSpaceKHR	lib/vulkan/vulkan.h	/^} VkColorSpaceKHR;$/;"	t	typeref:enum:VkColorSpaceKHR
VkCommandBufferAllocateInfo	lib/vulkan/vulkan.h	/^typedef struct VkCommandBufferAllocateInfo {$/;"	s
VkCommandBufferAllocateInfo	lib/vulkan/vulkan.h	/^} VkCommandBufferAllocateInfo;$/;"	t	typeref:struct:VkCommandBufferAllocateInfo
VkCommandBufferBeginInfo	lib/vulkan/vulkan.h	/^typedef struct VkCommandBufferBeginInfo {$/;"	s
VkCommandBufferBeginInfo	lib/vulkan/vulkan.h	/^} VkCommandBufferBeginInfo;$/;"	t	typeref:struct:VkCommandBufferBeginInfo
VkCommandBufferInheritanceInfo	lib/vulkan/vulkan.h	/^typedef struct VkCommandBufferInheritanceInfo {$/;"	s
VkCommandBufferInheritanceInfo	lib/vulkan/vulkan.h	/^} VkCommandBufferInheritanceInfo;$/;"	t	typeref:struct:VkCommandBufferInheritanceInfo
VkCommandBufferLevel	lib/vulkan/vulkan.h	/^typedef enum VkCommandBufferLevel {$/;"	g
VkCommandBufferLevel	lib/vulkan/vulkan.h	/^} VkCommandBufferLevel;$/;"	t	typeref:enum:VkCommandBufferLevel
VkCommandBufferResetFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkCommandBufferResetFlagBits {$/;"	g
VkCommandBufferResetFlagBits	lib/vulkan/vulkan.h	/^} VkCommandBufferResetFlagBits;$/;"	t	typeref:enum:VkCommandBufferResetFlagBits
VkCommandBufferResetFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkCommandBufferResetFlags;$/;"	t
VkCommandBufferUsageFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkCommandBufferUsageFlagBits {$/;"	g
VkCommandBufferUsageFlagBits	lib/vulkan/vulkan.h	/^} VkCommandBufferUsageFlagBits;$/;"	t	typeref:enum:VkCommandBufferUsageFlagBits
VkCommandBufferUsageFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkCommandBufferUsageFlags;$/;"	t
VkCommandPoolCreateFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkCommandPoolCreateFlagBits {$/;"	g
VkCommandPoolCreateFlagBits	lib/vulkan/vulkan.h	/^} VkCommandPoolCreateFlagBits;$/;"	t	typeref:enum:VkCommandPoolCreateFlagBits
VkCommandPoolCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkCommandPoolCreateFlags;$/;"	t
VkCommandPoolCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkCommandPoolCreateInfo {$/;"	s
VkCommandPoolCreateInfo	lib/vulkan/vulkan.h	/^} VkCommandPoolCreateInfo;$/;"	t	typeref:struct:VkCommandPoolCreateInfo
VkCommandPoolResetFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkCommandPoolResetFlagBits {$/;"	g
VkCommandPoolResetFlagBits	lib/vulkan/vulkan.h	/^} VkCommandPoolResetFlagBits;$/;"	t	typeref:enum:VkCommandPoolResetFlagBits
VkCommandPoolResetFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkCommandPoolResetFlags;$/;"	t
VkCompareOp	lib/vulkan/vulkan.h	/^typedef enum VkCompareOp {$/;"	g
VkCompareOp	lib/vulkan/vulkan.h	/^} VkCompareOp;$/;"	t	typeref:enum:VkCompareOp
VkComponentMapping	lib/vulkan/vulkan.h	/^typedef struct VkComponentMapping {$/;"	s
VkComponentMapping	lib/vulkan/vulkan.h	/^} VkComponentMapping;$/;"	t	typeref:struct:VkComponentMapping
VkComponentSwizzle	lib/vulkan/vulkan.h	/^typedef enum VkComponentSwizzle {$/;"	g
VkComponentSwizzle	lib/vulkan/vulkan.h	/^} VkComponentSwizzle;$/;"	t	typeref:enum:VkComponentSwizzle
VkCompositeAlphaFlagBitsKHR	lib/vulkan/vulkan.h	/^typedef enum VkCompositeAlphaFlagBitsKHR {$/;"	g
VkCompositeAlphaFlagBitsKHR	lib/vulkan/vulkan.h	/^} VkCompositeAlphaFlagBitsKHR;$/;"	t	typeref:enum:VkCompositeAlphaFlagBitsKHR
VkCompositeAlphaFlagsKHR	lib/vulkan/vulkan.h	/^typedef VkFlags VkCompositeAlphaFlagsKHR;$/;"	t
VkComputePipelineCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkComputePipelineCreateInfo {$/;"	s
VkComputePipelineCreateInfo	lib/vulkan/vulkan.h	/^} VkComputePipelineCreateInfo;$/;"	t	typeref:struct:VkComputePipelineCreateInfo
VkCopyDescriptorSet	lib/vulkan/vulkan.h	/^typedef struct VkCopyDescriptorSet {$/;"	s
VkCopyDescriptorSet	lib/vulkan/vulkan.h	/^} VkCopyDescriptorSet;$/;"	t	typeref:struct:VkCopyDescriptorSet
VkCullModeFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkCullModeFlagBits {$/;"	g
VkCullModeFlagBits	lib/vulkan/vulkan.h	/^} VkCullModeFlagBits;$/;"	t	typeref:enum:VkCullModeFlagBits
VkCullModeFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkCullModeFlags;$/;"	t
VkDebugMarkerMarkerInfoEXT	lib/vulkan/vulkan.h	/^typedef struct VkDebugMarkerMarkerInfoEXT {$/;"	s
VkDebugMarkerMarkerInfoEXT	lib/vulkan/vulkan.h	/^} VkDebugMarkerMarkerInfoEXT;$/;"	t	typeref:struct:VkDebugMarkerMarkerInfoEXT
VkDebugMarkerObjectNameInfoEXT	lib/vulkan/vulkan.h	/^typedef struct VkDebugMarkerObjectNameInfoEXT {$/;"	s
VkDebugMarkerObjectNameInfoEXT	lib/vulkan/vulkan.h	/^} VkDebugMarkerObjectNameInfoEXT;$/;"	t	typeref:struct:VkDebugMarkerObjectNameInfoEXT
VkDebugMarkerObjectTagInfoEXT	lib/vulkan/vulkan.h	/^typedef struct VkDebugMarkerObjectTagInfoEXT {$/;"	s
VkDebugMarkerObjectTagInfoEXT	lib/vulkan/vulkan.h	/^} VkDebugMarkerObjectTagInfoEXT;$/;"	t	typeref:struct:VkDebugMarkerObjectTagInfoEXT
VkDebugReportCallbackCreateInfoEXT	lib/vulkan/vulkan.h	/^typedef struct VkDebugReportCallbackCreateInfoEXT {$/;"	s
VkDebugReportCallbackCreateInfoEXT	lib/vulkan/vulkan.h	/^} VkDebugReportCallbackCreateInfoEXT;$/;"	t	typeref:struct:VkDebugReportCallbackCreateInfoEXT
VkDebugReportErrorEXT	lib/vulkan/vulkan.h	/^typedef enum VkDebugReportErrorEXT {$/;"	g
VkDebugReportErrorEXT	lib/vulkan/vulkan.h	/^} VkDebugReportErrorEXT;$/;"	t	typeref:enum:VkDebugReportErrorEXT
VkDebugReportFlagBitsEXT	lib/vulkan/vulkan.h	/^typedef enum VkDebugReportFlagBitsEXT {$/;"	g
VkDebugReportFlagBitsEXT	lib/vulkan/vulkan.h	/^} VkDebugReportFlagBitsEXT;$/;"	t	typeref:enum:VkDebugReportFlagBitsEXT
VkDebugReportFlagsEXT	lib/vulkan/vulkan.h	/^typedef VkFlags VkDebugReportFlagsEXT;$/;"	t
VkDebugReportObjectTypeEXT	lib/vulkan/vulkan.h	/^typedef enum VkDebugReportObjectTypeEXT {$/;"	g
VkDebugReportObjectTypeEXT	lib/vulkan/vulkan.h	/^} VkDebugReportObjectTypeEXT;$/;"	t	typeref:enum:VkDebugReportObjectTypeEXT
VkDedicatedAllocationBufferCreateInfoNV	lib/vulkan/vulkan.h	/^typedef struct VkDedicatedAllocationBufferCreateInfoNV {$/;"	s
VkDedicatedAllocationBufferCreateInfoNV	lib/vulkan/vulkan.h	/^} VkDedicatedAllocationBufferCreateInfoNV;$/;"	t	typeref:struct:VkDedicatedAllocationBufferCreateInfoNV
VkDedicatedAllocationImageCreateInfoNV	lib/vulkan/vulkan.h	/^typedef struct VkDedicatedAllocationImageCreateInfoNV {$/;"	s
VkDedicatedAllocationImageCreateInfoNV	lib/vulkan/vulkan.h	/^} VkDedicatedAllocationImageCreateInfoNV;$/;"	t	typeref:struct:VkDedicatedAllocationImageCreateInfoNV
VkDedicatedAllocationMemoryAllocateInfoNV	lib/vulkan/vulkan.h	/^typedef struct VkDedicatedAllocationMemoryAllocateInfoNV {$/;"	s
VkDedicatedAllocationMemoryAllocateInfoNV	lib/vulkan/vulkan.h	/^} VkDedicatedAllocationMemoryAllocateInfoNV;$/;"	t	typeref:struct:VkDedicatedAllocationMemoryAllocateInfoNV
VkDependencyFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkDependencyFlagBits {$/;"	g
VkDependencyFlagBits	lib/vulkan/vulkan.h	/^} VkDependencyFlagBits;$/;"	t	typeref:enum:VkDependencyFlagBits
VkDependencyFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkDependencyFlags;$/;"	t
VkDescriptorBufferInfo	lib/vulkan/vulkan.h	/^typedef struct VkDescriptorBufferInfo {$/;"	s
VkDescriptorBufferInfo	lib/vulkan/vulkan.h	/^} VkDescriptorBufferInfo;$/;"	t	typeref:struct:VkDescriptorBufferInfo
VkDescriptorImageInfo	lib/vulkan/vulkan.h	/^typedef struct VkDescriptorImageInfo {$/;"	s
VkDescriptorImageInfo	lib/vulkan/vulkan.h	/^} VkDescriptorImageInfo;$/;"	t	typeref:struct:VkDescriptorImageInfo
VkDescriptorPoolCreateFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkDescriptorPoolCreateFlagBits {$/;"	g
VkDescriptorPoolCreateFlagBits	lib/vulkan/vulkan.h	/^} VkDescriptorPoolCreateFlagBits;$/;"	t	typeref:enum:VkDescriptorPoolCreateFlagBits
VkDescriptorPoolCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkDescriptorPoolCreateFlags;$/;"	t
VkDescriptorPoolCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkDescriptorPoolCreateInfo {$/;"	s
VkDescriptorPoolCreateInfo	lib/vulkan/vulkan.h	/^} VkDescriptorPoolCreateInfo;$/;"	t	typeref:struct:VkDescriptorPoolCreateInfo
VkDescriptorPoolResetFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkDescriptorPoolResetFlags;$/;"	t
VkDescriptorPoolSize	lib/vulkan/vulkan.h	/^typedef struct VkDescriptorPoolSize {$/;"	s
VkDescriptorPoolSize	lib/vulkan/vulkan.h	/^} VkDescriptorPoolSize;$/;"	t	typeref:struct:VkDescriptorPoolSize
VkDescriptorSetAllocateInfo	lib/vulkan/vulkan.h	/^typedef struct VkDescriptorSetAllocateInfo {$/;"	s
VkDescriptorSetAllocateInfo	lib/vulkan/vulkan.h	/^} VkDescriptorSetAllocateInfo;$/;"	t	typeref:struct:VkDescriptorSetAllocateInfo
VkDescriptorSetLayoutBinding	lib/vulkan/vulkan.h	/^typedef struct VkDescriptorSetLayoutBinding {$/;"	s
VkDescriptorSetLayoutBinding	lib/vulkan/vulkan.h	/^} VkDescriptorSetLayoutBinding;$/;"	t	typeref:struct:VkDescriptorSetLayoutBinding
VkDescriptorSetLayoutCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkDescriptorSetLayoutCreateFlags;$/;"	t
VkDescriptorSetLayoutCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkDescriptorSetLayoutCreateInfo {$/;"	s
VkDescriptorSetLayoutCreateInfo	lib/vulkan/vulkan.h	/^} VkDescriptorSetLayoutCreateInfo;$/;"	t	typeref:struct:VkDescriptorSetLayoutCreateInfo
VkDescriptorType	lib/vulkan/vulkan.h	/^typedef enum VkDescriptorType {$/;"	g
VkDescriptorType	lib/vulkan/vulkan.h	/^} VkDescriptorType;$/;"	t	typeref:enum:VkDescriptorType
VkDeviceCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkDeviceCreateFlags;$/;"	t
VkDeviceCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkDeviceCreateInfo {$/;"	s
VkDeviceCreateInfo	lib/vulkan/vulkan.h	/^} VkDeviceCreateInfo;$/;"	t	typeref:struct:VkDeviceCreateInfo
VkDeviceQueueCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkDeviceQueueCreateFlags;$/;"	t
VkDeviceQueueCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkDeviceQueueCreateInfo {$/;"	s
VkDeviceQueueCreateInfo	lib/vulkan/vulkan.h	/^} VkDeviceQueueCreateInfo;$/;"	t	typeref:struct:VkDeviceQueueCreateInfo
VkDeviceSize	lib/vulkan/vulkan.h	/^typedef uint64_t VkDeviceSize;$/;"	t
VkDispatchIndirectCommand	lib/vulkan/vulkan.h	/^typedef struct VkDispatchIndirectCommand {$/;"	s
VkDispatchIndirectCommand	lib/vulkan/vulkan.h	/^} VkDispatchIndirectCommand;$/;"	t	typeref:struct:VkDispatchIndirectCommand
VkDisplayModeCreateFlagsKHR	lib/vulkan/vulkan.h	/^typedef VkFlags VkDisplayModeCreateFlagsKHR;$/;"	t
VkDisplayModeCreateInfoKHR	lib/vulkan/vulkan.h	/^typedef struct VkDisplayModeCreateInfoKHR {$/;"	s
VkDisplayModeCreateInfoKHR	lib/vulkan/vulkan.h	/^} VkDisplayModeCreateInfoKHR;$/;"	t	typeref:struct:VkDisplayModeCreateInfoKHR
VkDisplayModeParametersKHR	lib/vulkan/vulkan.h	/^typedef struct VkDisplayModeParametersKHR {$/;"	s
VkDisplayModeParametersKHR	lib/vulkan/vulkan.h	/^} VkDisplayModeParametersKHR;$/;"	t	typeref:struct:VkDisplayModeParametersKHR
VkDisplayModePropertiesKHR	lib/vulkan/vulkan.h	/^typedef struct VkDisplayModePropertiesKHR {$/;"	s
VkDisplayModePropertiesKHR	lib/vulkan/vulkan.h	/^} VkDisplayModePropertiesKHR;$/;"	t	typeref:struct:VkDisplayModePropertiesKHR
VkDisplayPlaneAlphaFlagBitsKHR	lib/vulkan/vulkan.h	/^typedef enum VkDisplayPlaneAlphaFlagBitsKHR {$/;"	g
VkDisplayPlaneAlphaFlagBitsKHR	lib/vulkan/vulkan.h	/^} VkDisplayPlaneAlphaFlagBitsKHR;$/;"	t	typeref:enum:VkDisplayPlaneAlphaFlagBitsKHR
VkDisplayPlaneAlphaFlagsKHR	lib/vulkan/vulkan.h	/^typedef VkFlags VkDisplayPlaneAlphaFlagsKHR;$/;"	t
VkDisplayPlaneCapabilitiesKHR	lib/vulkan/vulkan.h	/^typedef struct VkDisplayPlaneCapabilitiesKHR {$/;"	s
VkDisplayPlaneCapabilitiesKHR	lib/vulkan/vulkan.h	/^} VkDisplayPlaneCapabilitiesKHR;$/;"	t	typeref:struct:VkDisplayPlaneCapabilitiesKHR
VkDisplayPlanePropertiesKHR	lib/vulkan/vulkan.h	/^typedef struct VkDisplayPlanePropertiesKHR {$/;"	s
VkDisplayPlanePropertiesKHR	lib/vulkan/vulkan.h	/^} VkDisplayPlanePropertiesKHR;$/;"	t	typeref:struct:VkDisplayPlanePropertiesKHR
VkDisplayPresentInfoKHR	lib/vulkan/vulkan.h	/^typedef struct VkDisplayPresentInfoKHR {$/;"	s
VkDisplayPresentInfoKHR	lib/vulkan/vulkan.h	/^} VkDisplayPresentInfoKHR;$/;"	t	typeref:struct:VkDisplayPresentInfoKHR
VkDisplayPropertiesKHR	lib/vulkan/vulkan.h	/^typedef struct VkDisplayPropertiesKHR {$/;"	s
VkDisplayPropertiesKHR	lib/vulkan/vulkan.h	/^} VkDisplayPropertiesKHR;$/;"	t	typeref:struct:VkDisplayPropertiesKHR
VkDisplaySurfaceCreateFlagsKHR	lib/vulkan/vulkan.h	/^typedef VkFlags VkDisplaySurfaceCreateFlagsKHR;$/;"	t
VkDisplaySurfaceCreateInfoKHR	lib/vulkan/vulkan.h	/^typedef struct VkDisplaySurfaceCreateInfoKHR {$/;"	s
VkDisplaySurfaceCreateInfoKHR	lib/vulkan/vulkan.h	/^} VkDisplaySurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkDisplaySurfaceCreateInfoKHR
VkDrawIndexedIndirectCommand	lib/vulkan/vulkan.h	/^typedef struct VkDrawIndexedIndirectCommand {$/;"	s
VkDrawIndexedIndirectCommand	lib/vulkan/vulkan.h	/^} VkDrawIndexedIndirectCommand;$/;"	t	typeref:struct:VkDrawIndexedIndirectCommand
VkDrawIndirectCommand	lib/vulkan/vulkan.h	/^typedef struct VkDrawIndirectCommand {$/;"	s
VkDrawIndirectCommand	lib/vulkan/vulkan.h	/^} VkDrawIndirectCommand;$/;"	t	typeref:struct:VkDrawIndirectCommand
VkDynamicState	lib/vulkan/vulkan.h	/^typedef enum VkDynamicState {$/;"	g
VkDynamicState	lib/vulkan/vulkan.h	/^} VkDynamicState;$/;"	t	typeref:enum:VkDynamicState
VkEventCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkEventCreateFlags;$/;"	t
VkEventCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkEventCreateInfo {$/;"	s
VkEventCreateInfo	lib/vulkan/vulkan.h	/^} VkEventCreateInfo;$/;"	t	typeref:struct:VkEventCreateInfo
VkExtensionProperties	lib/vulkan/vulkan.h	/^typedef struct VkExtensionProperties {$/;"	s
VkExtensionProperties	lib/vulkan/vulkan.h	/^} VkExtensionProperties;$/;"	t	typeref:struct:VkExtensionProperties
VkExtent2D	lib/vulkan/vulkan.h	/^typedef struct VkExtent2D {$/;"	s
VkExtent2D	lib/vulkan/vulkan.h	/^} VkExtent2D;$/;"	t	typeref:struct:VkExtent2D
VkExtent3D	lib/vulkan/vulkan.h	/^typedef struct VkExtent3D {$/;"	s
VkExtent3D	lib/vulkan/vulkan.h	/^} VkExtent3D;$/;"	t	typeref:struct:VkExtent3D
VkFenceCreateFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkFenceCreateFlagBits {$/;"	g
VkFenceCreateFlagBits	lib/vulkan/vulkan.h	/^} VkFenceCreateFlagBits;$/;"	t	typeref:enum:VkFenceCreateFlagBits
VkFenceCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkFenceCreateFlags;$/;"	t
VkFenceCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkFenceCreateInfo {$/;"	s
VkFenceCreateInfo	lib/vulkan/vulkan.h	/^} VkFenceCreateInfo;$/;"	t	typeref:struct:VkFenceCreateInfo
VkFilter	lib/vulkan/vulkan.h	/^typedef enum VkFilter {$/;"	g
VkFilter	lib/vulkan/vulkan.h	/^} VkFilter;$/;"	t	typeref:enum:VkFilter
VkFlags	lib/vulkan/vulkan.h	/^typedef uint32_t VkFlags;$/;"	t
VkFormat	lib/vulkan/vulkan.h	/^typedef enum VkFormat {$/;"	g
VkFormat	lib/vulkan/vulkan.h	/^} VkFormat;$/;"	t	typeref:enum:VkFormat
VkFormatFeatureFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkFormatFeatureFlagBits {$/;"	g
VkFormatFeatureFlagBits	lib/vulkan/vulkan.h	/^} VkFormatFeatureFlagBits;$/;"	t	typeref:enum:VkFormatFeatureFlagBits
VkFormatFeatureFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkFormatFeatureFlags;$/;"	t
VkFormatProperties	lib/vulkan/vulkan.h	/^typedef struct VkFormatProperties {$/;"	s
VkFormatProperties	lib/vulkan/vulkan.h	/^} VkFormatProperties;$/;"	t	typeref:struct:VkFormatProperties
VkFramebufferCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkFramebufferCreateFlags;$/;"	t
VkFramebufferCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkFramebufferCreateInfo {$/;"	s
VkFramebufferCreateInfo	lib/vulkan/vulkan.h	/^} VkFramebufferCreateInfo;$/;"	t	typeref:struct:VkFramebufferCreateInfo
VkFrontFace	lib/vulkan/vulkan.h	/^typedef enum VkFrontFace {$/;"	g
VkFrontFace	lib/vulkan/vulkan.h	/^} VkFrontFace;$/;"	t	typeref:enum:VkFrontFace
VkGraphicsPipelineCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkGraphicsPipelineCreateInfo {$/;"	s
VkGraphicsPipelineCreateInfo	lib/vulkan/vulkan.h	/^} VkGraphicsPipelineCreateInfo;$/;"	t	typeref:struct:VkGraphicsPipelineCreateInfo
VkIcdSurfaceBase	lib/vulkan/vk_icd.h	/^} VkIcdSurfaceBase;$/;"	t	typeref:struct:__anon44
VkIcdSurfaceDisplay	lib/vulkan/vk_icd.h	/^} VkIcdSurfaceDisplay;$/;"	t	typeref:struct:__anon50
VkIcdSurfaceMir	lib/vulkan/vk_icd.h	/^} VkIcdSurfaceMir;$/;"	t	typeref:struct:__anon45
VkIcdSurfaceWayland	lib/vulkan/vk_icd.h	/^} VkIcdSurfaceWayland;$/;"	t	typeref:struct:__anon46
VkIcdSurfaceWin32	lib/vulkan/vk_icd.h	/^} VkIcdSurfaceWin32;$/;"	t	typeref:struct:__anon47
VkIcdSurfaceXcb	lib/vulkan/vk_icd.h	/^} VkIcdSurfaceXcb;$/;"	t	typeref:struct:__anon48
VkIcdSurfaceXlib	lib/vulkan/vk_icd.h	/^} VkIcdSurfaceXlib;$/;"	t	typeref:struct:__anon49
VkIcdWsiPlatform	lib/vulkan/vk_icd.h	/^} VkIcdWsiPlatform;$/;"	t	typeref:enum:__anon43
VkImageAspectFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkImageAspectFlagBits {$/;"	g
VkImageAspectFlagBits	lib/vulkan/vulkan.h	/^} VkImageAspectFlagBits;$/;"	t	typeref:enum:VkImageAspectFlagBits
VkImageAspectFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkImageAspectFlags;$/;"	t
VkImageBlit	lib/vulkan/vulkan.h	/^typedef struct VkImageBlit {$/;"	s
VkImageBlit	lib/vulkan/vulkan.h	/^} VkImageBlit;$/;"	t	typeref:struct:VkImageBlit
VkImageCopy	lib/vulkan/vulkan.h	/^typedef struct VkImageCopy {$/;"	s
VkImageCopy	lib/vulkan/vulkan.h	/^} VkImageCopy;$/;"	t	typeref:struct:VkImageCopy
VkImageCreateFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkImageCreateFlagBits {$/;"	g
VkImageCreateFlagBits	lib/vulkan/vulkan.h	/^} VkImageCreateFlagBits;$/;"	t	typeref:enum:VkImageCreateFlagBits
VkImageCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkImageCreateFlags;$/;"	t
VkImageCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkImageCreateInfo {$/;"	s
VkImageCreateInfo	lib/vulkan/vulkan.h	/^} VkImageCreateInfo;$/;"	t	typeref:struct:VkImageCreateInfo
VkImageFormatProperties	lib/vulkan/vulkan.h	/^typedef struct VkImageFormatProperties {$/;"	s
VkImageFormatProperties	lib/vulkan/vulkan.h	/^} VkImageFormatProperties;$/;"	t	typeref:struct:VkImageFormatProperties
VkImageLayout	lib/vulkan/vulkan.h	/^typedef enum VkImageLayout {$/;"	g
VkImageLayout	lib/vulkan/vulkan.h	/^} VkImageLayout;$/;"	t	typeref:enum:VkImageLayout
VkImageMemoryBarrier	lib/vulkan/vulkan.h	/^typedef struct VkImageMemoryBarrier {$/;"	s
VkImageMemoryBarrier	lib/vulkan/vulkan.h	/^} VkImageMemoryBarrier;$/;"	t	typeref:struct:VkImageMemoryBarrier
VkImageResolve	lib/vulkan/vulkan.h	/^typedef struct VkImageResolve {$/;"	s
VkImageResolve	lib/vulkan/vulkan.h	/^} VkImageResolve;$/;"	t	typeref:struct:VkImageResolve
VkImageSubresource	lib/vulkan/vulkan.h	/^typedef struct VkImageSubresource {$/;"	s
VkImageSubresource	lib/vulkan/vulkan.h	/^} VkImageSubresource;$/;"	t	typeref:struct:VkImageSubresource
VkImageSubresourceLayers	lib/vulkan/vulkan.h	/^typedef struct VkImageSubresourceLayers {$/;"	s
VkImageSubresourceLayers	lib/vulkan/vulkan.h	/^} VkImageSubresourceLayers;$/;"	t	typeref:struct:VkImageSubresourceLayers
VkImageSubresourceRange	lib/vulkan/vulkan.h	/^typedef struct VkImageSubresourceRange {$/;"	s
VkImageSubresourceRange	lib/vulkan/vulkan.h	/^} VkImageSubresourceRange;$/;"	t	typeref:struct:VkImageSubresourceRange
VkImageTiling	lib/vulkan/vulkan.h	/^typedef enum VkImageTiling {$/;"	g
VkImageTiling	lib/vulkan/vulkan.h	/^} VkImageTiling;$/;"	t	typeref:enum:VkImageTiling
VkImageType	lib/vulkan/vulkan.h	/^typedef enum VkImageType {$/;"	g
VkImageType	lib/vulkan/vulkan.h	/^} VkImageType;$/;"	t	typeref:enum:VkImageType
VkImageUsageFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkImageUsageFlagBits {$/;"	g
VkImageUsageFlagBits	lib/vulkan/vulkan.h	/^} VkImageUsageFlagBits;$/;"	t	typeref:enum:VkImageUsageFlagBits
VkImageUsageFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkImageUsageFlags;$/;"	t
VkImageViewCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkImageViewCreateFlags;$/;"	t
VkImageViewCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkImageViewCreateInfo {$/;"	s
VkImageViewCreateInfo	lib/vulkan/vulkan.h	/^} VkImageViewCreateInfo;$/;"	t	typeref:struct:VkImageViewCreateInfo
VkImageViewType	lib/vulkan/vulkan.h	/^typedef enum VkImageViewType {$/;"	g
VkImageViewType	lib/vulkan/vulkan.h	/^} VkImageViewType;$/;"	t	typeref:enum:VkImageViewType
VkIndexType	lib/vulkan/vulkan.h	/^typedef enum VkIndexType {$/;"	g
VkIndexType	lib/vulkan/vulkan.h	/^} VkIndexType;$/;"	t	typeref:enum:VkIndexType
VkInstanceCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkInstanceCreateFlags;$/;"	t
VkInstanceCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkInstanceCreateInfo {$/;"	s
VkInstanceCreateInfo	lib/vulkan/vulkan.h	/^} VkInstanceCreateInfo;$/;"	t	typeref:struct:VkInstanceCreateInfo
VkInternalAllocationType	lib/vulkan/vulkan.h	/^typedef enum VkInternalAllocationType {$/;"	g
VkInternalAllocationType	lib/vulkan/vulkan.h	/^} VkInternalAllocationType;$/;"	t	typeref:enum:VkInternalAllocationType
VkLayerDeviceCreateInfo	lib/vulkan/vk_layer.h	/^} VkLayerDeviceCreateInfo;$/;"	t	typeref:struct:__anon53
VkLayerDeviceInfo	lib/vulkan/vk_layer.h	/^} VkLayerDeviceInfo;$/;"	t	typeref:struct:VkLayerDeviceInfo_
VkLayerDeviceInfo_	lib/vulkan/vk_layer.h	/^typedef struct VkLayerDeviceInfo_ {$/;"	s
VkLayerDeviceLink	lib/vulkan/vk_layer.h	/^} VkLayerDeviceLink;$/;"	t	typeref:struct:VkLayerDeviceLink_
VkLayerDeviceLink_	lib/vulkan/vk_layer.h	/^typedef struct VkLayerDeviceLink_ {$/;"	s
VkLayerDispatchTable	lib/vulkan/vk_layer.h	/^} VkLayerDispatchTable;$/;"	t	typeref:struct:VkLayerDispatchTable_
VkLayerDispatchTable_	lib/vulkan/vk_layer.h	/^typedef struct VkLayerDispatchTable_ {$/;"	s
VkLayerFunction	lib/vulkan/vk_layer.h	/^} VkLayerFunction;$/;"	t	typeref:enum:VkLayerFunction_
VkLayerFunction_	lib/vulkan/vk_layer.h	/^typedef enum VkLayerFunction_ {$/;"	g
VkLayerInstanceCreateInfo	lib/vulkan/vk_layer.h	/^} VkLayerInstanceCreateInfo;$/;"	t	typeref:struct:__anon51
VkLayerInstanceDispatchTable	lib/vulkan/vk_layer.h	/^} VkLayerInstanceDispatchTable;$/;"	t	typeref:struct:VkLayerInstanceDispatchTable_
VkLayerInstanceDispatchTable_	lib/vulkan/vk_layer.h	/^typedef struct VkLayerInstanceDispatchTable_ {$/;"	s
VkLayerInstanceLink	lib/vulkan/vk_layer.h	/^} VkLayerInstanceLink;$/;"	t	typeref:struct:VkLayerInstanceLink_
VkLayerInstanceLink_	lib/vulkan/vk_layer.h	/^typedef struct VkLayerInstanceLink_ {$/;"	s
VkLayerProperties	lib/vulkan/vulkan.h	/^typedef struct VkLayerProperties {$/;"	s
VkLayerProperties	lib/vulkan/vulkan.h	/^} VkLayerProperties;$/;"	t	typeref:struct:VkLayerProperties
VkLogicOp	lib/vulkan/vulkan.h	/^typedef enum VkLogicOp {$/;"	g
VkLogicOp	lib/vulkan/vulkan.h	/^} VkLogicOp;$/;"	t	typeref:enum:VkLogicOp
VkMappedMemoryRange	lib/vulkan/vulkan.h	/^typedef struct VkMappedMemoryRange {$/;"	s
VkMappedMemoryRange	lib/vulkan/vulkan.h	/^} VkMappedMemoryRange;$/;"	t	typeref:struct:VkMappedMemoryRange
VkMemoryAllocateInfo	lib/vulkan/vulkan.h	/^typedef struct VkMemoryAllocateInfo {$/;"	s
VkMemoryAllocateInfo	lib/vulkan/vulkan.h	/^} VkMemoryAllocateInfo;$/;"	t	typeref:struct:VkMemoryAllocateInfo
VkMemoryBarrier	lib/vulkan/vulkan.h	/^typedef struct VkMemoryBarrier {$/;"	s
VkMemoryBarrier	lib/vulkan/vulkan.h	/^} VkMemoryBarrier;$/;"	t	typeref:struct:VkMemoryBarrier
VkMemoryHeap	lib/vulkan/vulkan.h	/^typedef struct VkMemoryHeap {$/;"	s
VkMemoryHeap	lib/vulkan/vulkan.h	/^} VkMemoryHeap;$/;"	t	typeref:struct:VkMemoryHeap
VkMemoryHeapFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkMemoryHeapFlagBits {$/;"	g
VkMemoryHeapFlagBits	lib/vulkan/vulkan.h	/^} VkMemoryHeapFlagBits;$/;"	t	typeref:enum:VkMemoryHeapFlagBits
VkMemoryHeapFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkMemoryHeapFlags;$/;"	t
VkMemoryMapFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkMemoryMapFlags;$/;"	t
VkMemoryPropertyFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkMemoryPropertyFlagBits {$/;"	g
VkMemoryPropertyFlagBits	lib/vulkan/vulkan.h	/^} VkMemoryPropertyFlagBits;$/;"	t	typeref:enum:VkMemoryPropertyFlagBits
VkMemoryPropertyFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkMemoryPropertyFlags;$/;"	t
VkMemoryRequirements	lib/vulkan/vulkan.h	/^typedef struct VkMemoryRequirements {$/;"	s
VkMemoryRequirements	lib/vulkan/vulkan.h	/^} VkMemoryRequirements;$/;"	t	typeref:struct:VkMemoryRequirements
VkMemoryType	lib/vulkan/vulkan.h	/^typedef struct VkMemoryType {$/;"	s
VkMemoryType	lib/vulkan/vulkan.h	/^} VkMemoryType;$/;"	t	typeref:struct:VkMemoryType
VkMirSurfaceCreateFlagsKHR	lib/vulkan/vulkan.h	/^typedef VkFlags VkMirSurfaceCreateFlagsKHR;$/;"	t
VkMirSurfaceCreateInfoKHR	lib/vulkan/vulkan.h	/^typedef struct VkMirSurfaceCreateInfoKHR {$/;"	s
VkMirSurfaceCreateInfoKHR	lib/vulkan/vulkan.h	/^} VkMirSurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkMirSurfaceCreateInfoKHR
VkOffset2D	lib/vulkan/vulkan.h	/^typedef struct VkOffset2D {$/;"	s
VkOffset2D	lib/vulkan/vulkan.h	/^} VkOffset2D;$/;"	t	typeref:struct:VkOffset2D
VkOffset3D	lib/vulkan/vulkan.h	/^typedef struct VkOffset3D {$/;"	s
VkOffset3D	lib/vulkan/vulkan.h	/^} VkOffset3D;$/;"	t	typeref:struct:VkOffset3D
VkPhysicalDeviceFeatures	lib/vulkan/vulkan.h	/^typedef struct VkPhysicalDeviceFeatures {$/;"	s
VkPhysicalDeviceFeatures	lib/vulkan/vulkan.h	/^} VkPhysicalDeviceFeatures;$/;"	t	typeref:struct:VkPhysicalDeviceFeatures
VkPhysicalDeviceLimits	lib/vulkan/vulkan.h	/^typedef struct VkPhysicalDeviceLimits {$/;"	s
VkPhysicalDeviceLimits	lib/vulkan/vulkan.h	/^} VkPhysicalDeviceLimits;$/;"	t	typeref:struct:VkPhysicalDeviceLimits
VkPhysicalDeviceMemoryProperties	lib/vulkan/vulkan.h	/^typedef struct VkPhysicalDeviceMemoryProperties {$/;"	s
VkPhysicalDeviceMemoryProperties	lib/vulkan/vulkan.h	/^} VkPhysicalDeviceMemoryProperties;$/;"	t	typeref:struct:VkPhysicalDeviceMemoryProperties
VkPhysicalDeviceProperties	lib/vulkan/vulkan.h	/^typedef struct VkPhysicalDeviceProperties {$/;"	s
VkPhysicalDeviceProperties	lib/vulkan/vulkan.h	/^} VkPhysicalDeviceProperties;$/;"	t	typeref:struct:VkPhysicalDeviceProperties
VkPhysicalDeviceSparseProperties	lib/vulkan/vulkan.h	/^typedef struct VkPhysicalDeviceSparseProperties {$/;"	s
VkPhysicalDeviceSparseProperties	lib/vulkan/vulkan.h	/^} VkPhysicalDeviceSparseProperties;$/;"	t	typeref:struct:VkPhysicalDeviceSparseProperties
VkPhysicalDeviceType	lib/vulkan/vulkan.h	/^typedef enum VkPhysicalDeviceType {$/;"	g
VkPhysicalDeviceType	lib/vulkan/vulkan.h	/^} VkPhysicalDeviceType;$/;"	t	typeref:enum:VkPhysicalDeviceType
VkPipelineBindPoint	lib/vulkan/vulkan.h	/^typedef enum VkPipelineBindPoint {$/;"	g
VkPipelineBindPoint	lib/vulkan/vulkan.h	/^} VkPipelineBindPoint;$/;"	t	typeref:enum:VkPipelineBindPoint
VkPipelineCacheCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkPipelineCacheCreateFlags;$/;"	t
VkPipelineCacheCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkPipelineCacheCreateInfo {$/;"	s
VkPipelineCacheCreateInfo	lib/vulkan/vulkan.h	/^} VkPipelineCacheCreateInfo;$/;"	t	typeref:struct:VkPipelineCacheCreateInfo
VkPipelineCacheHeaderVersion	lib/vulkan/vulkan.h	/^typedef enum VkPipelineCacheHeaderVersion {$/;"	g
VkPipelineCacheHeaderVersion	lib/vulkan/vulkan.h	/^} VkPipelineCacheHeaderVersion;$/;"	t	typeref:enum:VkPipelineCacheHeaderVersion
VkPipelineColorBlendAttachmentState	lib/vulkan/vulkan.h	/^typedef struct VkPipelineColorBlendAttachmentState {$/;"	s
VkPipelineColorBlendAttachmentState	lib/vulkan/vulkan.h	/^} VkPipelineColorBlendAttachmentState;$/;"	t	typeref:struct:VkPipelineColorBlendAttachmentState
VkPipelineColorBlendStateCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkPipelineColorBlendStateCreateFlags;$/;"	t
VkPipelineColorBlendStateCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkPipelineColorBlendStateCreateInfo {$/;"	s
VkPipelineColorBlendStateCreateInfo	lib/vulkan/vulkan.h	/^} VkPipelineColorBlendStateCreateInfo;$/;"	t	typeref:struct:VkPipelineColorBlendStateCreateInfo
VkPipelineCreateFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkPipelineCreateFlagBits {$/;"	g
VkPipelineCreateFlagBits	lib/vulkan/vulkan.h	/^} VkPipelineCreateFlagBits;$/;"	t	typeref:enum:VkPipelineCreateFlagBits
VkPipelineCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkPipelineCreateFlags;$/;"	t
VkPipelineDepthStencilStateCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkPipelineDepthStencilStateCreateFlags;$/;"	t
VkPipelineDepthStencilStateCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkPipelineDepthStencilStateCreateInfo {$/;"	s
VkPipelineDepthStencilStateCreateInfo	lib/vulkan/vulkan.h	/^} VkPipelineDepthStencilStateCreateInfo;$/;"	t	typeref:struct:VkPipelineDepthStencilStateCreateInfo
VkPipelineDynamicStateCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkPipelineDynamicStateCreateFlags;$/;"	t
VkPipelineDynamicStateCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkPipelineDynamicStateCreateInfo {$/;"	s
VkPipelineDynamicStateCreateInfo	lib/vulkan/vulkan.h	/^} VkPipelineDynamicStateCreateInfo;$/;"	t	typeref:struct:VkPipelineDynamicStateCreateInfo
VkPipelineInputAssemblyStateCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkPipelineInputAssemblyStateCreateFlags;$/;"	t
VkPipelineInputAssemblyStateCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkPipelineInputAssemblyStateCreateInfo {$/;"	s
VkPipelineInputAssemblyStateCreateInfo	lib/vulkan/vulkan.h	/^} VkPipelineInputAssemblyStateCreateInfo;$/;"	t	typeref:struct:VkPipelineInputAssemblyStateCreateInfo
VkPipelineLayoutCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkPipelineLayoutCreateFlags;$/;"	t
VkPipelineLayoutCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkPipelineLayoutCreateInfo {$/;"	s
VkPipelineLayoutCreateInfo	lib/vulkan/vulkan.h	/^} VkPipelineLayoutCreateInfo;$/;"	t	typeref:struct:VkPipelineLayoutCreateInfo
VkPipelineMultisampleStateCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkPipelineMultisampleStateCreateFlags;$/;"	t
VkPipelineMultisampleStateCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkPipelineMultisampleStateCreateInfo {$/;"	s
VkPipelineMultisampleStateCreateInfo	lib/vulkan/vulkan.h	/^} VkPipelineMultisampleStateCreateInfo;$/;"	t	typeref:struct:VkPipelineMultisampleStateCreateInfo
VkPipelineRasterizationStateCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkPipelineRasterizationStateCreateFlags;$/;"	t
VkPipelineRasterizationStateCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkPipelineRasterizationStateCreateInfo {$/;"	s
VkPipelineRasterizationStateCreateInfo	lib/vulkan/vulkan.h	/^} VkPipelineRasterizationStateCreateInfo;$/;"	t	typeref:struct:VkPipelineRasterizationStateCreateInfo
VkPipelineRasterizationStateRasterizationOrderAMD	lib/vulkan/vulkan.h	/^typedef struct VkPipelineRasterizationStateRasterizationOrderAMD {$/;"	s
VkPipelineRasterizationStateRasterizationOrderAMD	lib/vulkan/vulkan.h	/^} VkPipelineRasterizationStateRasterizationOrderAMD;$/;"	t	typeref:struct:VkPipelineRasterizationStateRasterizationOrderAMD
VkPipelineShaderStageCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkPipelineShaderStageCreateFlags;$/;"	t
VkPipelineShaderStageCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkPipelineShaderStageCreateInfo {$/;"	s
VkPipelineShaderStageCreateInfo	lib/vulkan/vulkan.h	/^} VkPipelineShaderStageCreateInfo;$/;"	t	typeref:struct:VkPipelineShaderStageCreateInfo
VkPipelineStageFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkPipelineStageFlagBits {$/;"	g
VkPipelineStageFlagBits	lib/vulkan/vulkan.h	/^} VkPipelineStageFlagBits;$/;"	t	typeref:enum:VkPipelineStageFlagBits
VkPipelineStageFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkPipelineStageFlags;$/;"	t
VkPipelineTessellationStateCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkPipelineTessellationStateCreateFlags;$/;"	t
VkPipelineTessellationStateCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkPipelineTessellationStateCreateInfo {$/;"	s
VkPipelineTessellationStateCreateInfo	lib/vulkan/vulkan.h	/^} VkPipelineTessellationStateCreateInfo;$/;"	t	typeref:struct:VkPipelineTessellationStateCreateInfo
VkPipelineVertexInputStateCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkPipelineVertexInputStateCreateFlags;$/;"	t
VkPipelineVertexInputStateCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkPipelineVertexInputStateCreateInfo {$/;"	s
VkPipelineVertexInputStateCreateInfo	lib/vulkan/vulkan.h	/^} VkPipelineVertexInputStateCreateInfo;$/;"	t	typeref:struct:VkPipelineVertexInputStateCreateInfo
VkPipelineViewportStateCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkPipelineViewportStateCreateFlags;$/;"	t
VkPipelineViewportStateCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkPipelineViewportStateCreateInfo {$/;"	s
VkPipelineViewportStateCreateInfo	lib/vulkan/vulkan.h	/^} VkPipelineViewportStateCreateInfo;$/;"	t	typeref:struct:VkPipelineViewportStateCreateInfo
VkPolygonMode	lib/vulkan/vulkan.h	/^typedef enum VkPolygonMode {$/;"	g
VkPolygonMode	lib/vulkan/vulkan.h	/^} VkPolygonMode;$/;"	t	typeref:enum:VkPolygonMode
VkPresentInfoKHR	lib/vulkan/vulkan.h	/^typedef struct VkPresentInfoKHR {$/;"	s
VkPresentInfoKHR	lib/vulkan/vulkan.h	/^} VkPresentInfoKHR;$/;"	t	typeref:struct:VkPresentInfoKHR
VkPresentModeKHR	lib/vulkan/vulkan.h	/^typedef enum VkPresentModeKHR {$/;"	g
VkPresentModeKHR	lib/vulkan/vulkan.h	/^} VkPresentModeKHR;$/;"	t	typeref:enum:VkPresentModeKHR
VkPrimitiveTopology	lib/vulkan/vulkan.h	/^typedef enum VkPrimitiveTopology {$/;"	g
VkPrimitiveTopology	lib/vulkan/vulkan.h	/^} VkPrimitiveTopology;$/;"	t	typeref:enum:VkPrimitiveTopology
VkPushConstantRange	lib/vulkan/vulkan.h	/^typedef struct VkPushConstantRange {$/;"	s
VkPushConstantRange	lib/vulkan/vulkan.h	/^} VkPushConstantRange;$/;"	t	typeref:struct:VkPushConstantRange
VkQueryControlFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkQueryControlFlagBits {$/;"	g
VkQueryControlFlagBits	lib/vulkan/vulkan.h	/^} VkQueryControlFlagBits;$/;"	t	typeref:enum:VkQueryControlFlagBits
VkQueryControlFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkQueryControlFlags;$/;"	t
VkQueryPipelineStatisticFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkQueryPipelineStatisticFlagBits {$/;"	g
VkQueryPipelineStatisticFlagBits	lib/vulkan/vulkan.h	/^} VkQueryPipelineStatisticFlagBits;$/;"	t	typeref:enum:VkQueryPipelineStatisticFlagBits
VkQueryPipelineStatisticFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkQueryPipelineStatisticFlags;$/;"	t
VkQueryPoolCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkQueryPoolCreateFlags;$/;"	t
VkQueryPoolCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkQueryPoolCreateInfo {$/;"	s
VkQueryPoolCreateInfo	lib/vulkan/vulkan.h	/^} VkQueryPoolCreateInfo;$/;"	t	typeref:struct:VkQueryPoolCreateInfo
VkQueryResultFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkQueryResultFlagBits {$/;"	g
VkQueryResultFlagBits	lib/vulkan/vulkan.h	/^} VkQueryResultFlagBits;$/;"	t	typeref:enum:VkQueryResultFlagBits
VkQueryResultFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkQueryResultFlags;$/;"	t
VkQueryType	lib/vulkan/vulkan.h	/^typedef enum VkQueryType {$/;"	g
VkQueryType	lib/vulkan/vulkan.h	/^} VkQueryType;$/;"	t	typeref:enum:VkQueryType
VkQueueFamilyProperties	lib/vulkan/vulkan.h	/^typedef struct VkQueueFamilyProperties {$/;"	s
VkQueueFamilyProperties	lib/vulkan/vulkan.h	/^} VkQueueFamilyProperties;$/;"	t	typeref:struct:VkQueueFamilyProperties
VkQueueFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkQueueFlagBits {$/;"	g
VkQueueFlagBits	lib/vulkan/vulkan.h	/^} VkQueueFlagBits;$/;"	t	typeref:enum:VkQueueFlagBits
VkQueueFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkQueueFlags;$/;"	t
VkRasterizationOrderAMD	lib/vulkan/vulkan.h	/^typedef enum VkRasterizationOrderAMD {$/;"	g
VkRasterizationOrderAMD	lib/vulkan/vulkan.h	/^} VkRasterizationOrderAMD;$/;"	t	typeref:enum:VkRasterizationOrderAMD
VkRect2D	lib/vulkan/vulkan.h	/^typedef struct VkRect2D {$/;"	s
VkRect2D	lib/vulkan/vulkan.h	/^} VkRect2D;$/;"	t	typeref:struct:VkRect2D
VkRenderPassBeginInfo	lib/vulkan/vulkan.h	/^typedef struct VkRenderPassBeginInfo {$/;"	s
VkRenderPassBeginInfo	lib/vulkan/vulkan.h	/^} VkRenderPassBeginInfo;$/;"	t	typeref:struct:VkRenderPassBeginInfo
VkRenderPassCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkRenderPassCreateFlags;$/;"	t
VkRenderPassCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkRenderPassCreateInfo {$/;"	s
VkRenderPassCreateInfo	lib/vulkan/vulkan.h	/^} VkRenderPassCreateInfo;$/;"	t	typeref:struct:VkRenderPassCreateInfo
VkResult	lib/vulkan/vulkan.h	/^typedef enum VkResult {$/;"	g
VkResult	lib/vulkan/vulkan.h	/^} VkResult;$/;"	t	typeref:enum:VkResult
VkSampleCountFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkSampleCountFlagBits {$/;"	g
VkSampleCountFlagBits	lib/vulkan/vulkan.h	/^} VkSampleCountFlagBits;$/;"	t	typeref:enum:VkSampleCountFlagBits
VkSampleCountFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkSampleCountFlags;$/;"	t
VkSampleMask	lib/vulkan/vulkan.h	/^typedef uint32_t VkSampleMask;$/;"	t
VkSamplerAddressMode	lib/vulkan/vulkan.h	/^typedef enum VkSamplerAddressMode {$/;"	g
VkSamplerAddressMode	lib/vulkan/vulkan.h	/^} VkSamplerAddressMode;$/;"	t	typeref:enum:VkSamplerAddressMode
VkSamplerCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkSamplerCreateFlags;$/;"	t
VkSamplerCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkSamplerCreateInfo {$/;"	s
VkSamplerCreateInfo	lib/vulkan/vulkan.h	/^} VkSamplerCreateInfo;$/;"	t	typeref:struct:VkSamplerCreateInfo
VkSamplerMipmapMode	lib/vulkan/vulkan.h	/^typedef enum VkSamplerMipmapMode {$/;"	g
VkSamplerMipmapMode	lib/vulkan/vulkan.h	/^} VkSamplerMipmapMode;$/;"	t	typeref:enum:VkSamplerMipmapMode
VkSemaphoreCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkSemaphoreCreateFlags;$/;"	t
VkSemaphoreCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkSemaphoreCreateInfo {$/;"	s
VkSemaphoreCreateInfo	lib/vulkan/vulkan.h	/^} VkSemaphoreCreateInfo;$/;"	t	typeref:struct:VkSemaphoreCreateInfo
VkShaderModuleCreateFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkShaderModuleCreateFlags;$/;"	t
VkShaderModuleCreateInfo	lib/vulkan/vulkan.h	/^typedef struct VkShaderModuleCreateInfo {$/;"	s
VkShaderModuleCreateInfo	lib/vulkan/vulkan.h	/^} VkShaderModuleCreateInfo;$/;"	t	typeref:struct:VkShaderModuleCreateInfo
VkShaderStageFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkShaderStageFlagBits {$/;"	g
VkShaderStageFlagBits	lib/vulkan/vulkan.h	/^} VkShaderStageFlagBits;$/;"	t	typeref:enum:VkShaderStageFlagBits
VkShaderStageFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkShaderStageFlags;$/;"	t
VkSharingMode	lib/vulkan/vulkan.h	/^typedef enum VkSharingMode {$/;"	g
VkSharingMode	lib/vulkan/vulkan.h	/^} VkSharingMode;$/;"	t	typeref:enum:VkSharingMode
VkSparseBufferMemoryBindInfo	lib/vulkan/vulkan.h	/^typedef struct VkSparseBufferMemoryBindInfo {$/;"	s
VkSparseBufferMemoryBindInfo	lib/vulkan/vulkan.h	/^} VkSparseBufferMemoryBindInfo;$/;"	t	typeref:struct:VkSparseBufferMemoryBindInfo
VkSparseImageFormatFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkSparseImageFormatFlagBits {$/;"	g
VkSparseImageFormatFlagBits	lib/vulkan/vulkan.h	/^} VkSparseImageFormatFlagBits;$/;"	t	typeref:enum:VkSparseImageFormatFlagBits
VkSparseImageFormatFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkSparseImageFormatFlags;$/;"	t
VkSparseImageFormatProperties	lib/vulkan/vulkan.h	/^typedef struct VkSparseImageFormatProperties {$/;"	s
VkSparseImageFormatProperties	lib/vulkan/vulkan.h	/^} VkSparseImageFormatProperties;$/;"	t	typeref:struct:VkSparseImageFormatProperties
VkSparseImageMemoryBind	lib/vulkan/vulkan.h	/^typedef struct VkSparseImageMemoryBind {$/;"	s
VkSparseImageMemoryBind	lib/vulkan/vulkan.h	/^} VkSparseImageMemoryBind;$/;"	t	typeref:struct:VkSparseImageMemoryBind
VkSparseImageMemoryBindInfo	lib/vulkan/vulkan.h	/^typedef struct VkSparseImageMemoryBindInfo {$/;"	s
VkSparseImageMemoryBindInfo	lib/vulkan/vulkan.h	/^} VkSparseImageMemoryBindInfo;$/;"	t	typeref:struct:VkSparseImageMemoryBindInfo
VkSparseImageMemoryRequirements	lib/vulkan/vulkan.h	/^typedef struct VkSparseImageMemoryRequirements {$/;"	s
VkSparseImageMemoryRequirements	lib/vulkan/vulkan.h	/^} VkSparseImageMemoryRequirements;$/;"	t	typeref:struct:VkSparseImageMemoryRequirements
VkSparseImageOpaqueMemoryBindInfo	lib/vulkan/vulkan.h	/^typedef struct VkSparseImageOpaqueMemoryBindInfo {$/;"	s
VkSparseImageOpaqueMemoryBindInfo	lib/vulkan/vulkan.h	/^} VkSparseImageOpaqueMemoryBindInfo;$/;"	t	typeref:struct:VkSparseImageOpaqueMemoryBindInfo
VkSparseMemoryBind	lib/vulkan/vulkan.h	/^typedef struct VkSparseMemoryBind {$/;"	s
VkSparseMemoryBind	lib/vulkan/vulkan.h	/^} VkSparseMemoryBind;$/;"	t	typeref:struct:VkSparseMemoryBind
VkSparseMemoryBindFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkSparseMemoryBindFlagBits {$/;"	g
VkSparseMemoryBindFlagBits	lib/vulkan/vulkan.h	/^} VkSparseMemoryBindFlagBits;$/;"	t	typeref:enum:VkSparseMemoryBindFlagBits
VkSparseMemoryBindFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkSparseMemoryBindFlags;$/;"	t
VkSpecializationInfo	lib/vulkan/vulkan.h	/^typedef struct VkSpecializationInfo {$/;"	s
VkSpecializationInfo	lib/vulkan/vulkan.h	/^} VkSpecializationInfo;$/;"	t	typeref:struct:VkSpecializationInfo
VkSpecializationMapEntry	lib/vulkan/vulkan.h	/^typedef struct VkSpecializationMapEntry {$/;"	s
VkSpecializationMapEntry	lib/vulkan/vulkan.h	/^} VkSpecializationMapEntry;$/;"	t	typeref:struct:VkSpecializationMapEntry
VkStencilFaceFlagBits	lib/vulkan/vulkan.h	/^typedef enum VkStencilFaceFlagBits {$/;"	g
VkStencilFaceFlagBits	lib/vulkan/vulkan.h	/^} VkStencilFaceFlagBits;$/;"	t	typeref:enum:VkStencilFaceFlagBits
VkStencilFaceFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkStencilFaceFlags;$/;"	t
VkStencilOp	lib/vulkan/vulkan.h	/^typedef enum VkStencilOp {$/;"	g
VkStencilOp	lib/vulkan/vulkan.h	/^} VkStencilOp;$/;"	t	typeref:enum:VkStencilOp
VkStencilOpState	lib/vulkan/vulkan.h	/^typedef struct VkStencilOpState {$/;"	s
VkStencilOpState	lib/vulkan/vulkan.h	/^} VkStencilOpState;$/;"	t	typeref:struct:VkStencilOpState
VkStructureType	lib/vulkan/vulkan.h	/^typedef enum VkStructureType {$/;"	g
VkStructureType	lib/vulkan/vulkan.h	/^} VkStructureType;$/;"	t	typeref:enum:VkStructureType
VkSubmitInfo	lib/vulkan/vulkan.h	/^typedef struct VkSubmitInfo {$/;"	s
VkSubmitInfo	lib/vulkan/vulkan.h	/^} VkSubmitInfo;$/;"	t	typeref:struct:VkSubmitInfo
VkSubpassContents	lib/vulkan/vulkan.h	/^typedef enum VkSubpassContents {$/;"	g
VkSubpassContents	lib/vulkan/vulkan.h	/^} VkSubpassContents;$/;"	t	typeref:enum:VkSubpassContents
VkSubpassDependency	lib/vulkan/vulkan.h	/^typedef struct VkSubpassDependency {$/;"	s
VkSubpassDependency	lib/vulkan/vulkan.h	/^} VkSubpassDependency;$/;"	t	typeref:struct:VkSubpassDependency
VkSubpassDescription	lib/vulkan/vulkan.h	/^typedef struct VkSubpassDescription {$/;"	s
VkSubpassDescription	lib/vulkan/vulkan.h	/^} VkSubpassDescription;$/;"	t	typeref:struct:VkSubpassDescription
VkSubpassDescriptionFlags	lib/vulkan/vulkan.h	/^typedef VkFlags VkSubpassDescriptionFlags;$/;"	t
VkSubresourceLayout	lib/vulkan/vulkan.h	/^typedef struct VkSubresourceLayout {$/;"	s
VkSubresourceLayout	lib/vulkan/vulkan.h	/^} VkSubresourceLayout;$/;"	t	typeref:struct:VkSubresourceLayout
VkSurfaceCapabilitiesKHR	lib/vulkan/vulkan.h	/^typedef struct VkSurfaceCapabilitiesKHR {$/;"	s
VkSurfaceCapabilitiesKHR	lib/vulkan/vulkan.h	/^} VkSurfaceCapabilitiesKHR;$/;"	t	typeref:struct:VkSurfaceCapabilitiesKHR
VkSurfaceFormatKHR	lib/vulkan/vulkan.h	/^typedef struct VkSurfaceFormatKHR {$/;"	s
VkSurfaceFormatKHR	lib/vulkan/vulkan.h	/^} VkSurfaceFormatKHR;$/;"	t	typeref:struct:VkSurfaceFormatKHR
VkSurfaceTransformFlagBitsKHR	lib/vulkan/vulkan.h	/^typedef enum VkSurfaceTransformFlagBitsKHR {$/;"	g
VkSurfaceTransformFlagBitsKHR	lib/vulkan/vulkan.h	/^} VkSurfaceTransformFlagBitsKHR;$/;"	t	typeref:enum:VkSurfaceTransformFlagBitsKHR
VkSurfaceTransformFlagsKHR	lib/vulkan/vulkan.h	/^typedef VkFlags VkSurfaceTransformFlagsKHR;$/;"	t
VkSwapchainCreateFlagsKHR	lib/vulkan/vulkan.h	/^typedef VkFlags VkSwapchainCreateFlagsKHR;$/;"	t
VkSwapchainCreateInfoKHR	lib/vulkan/vulkan.h	/^typedef struct VkSwapchainCreateInfoKHR {$/;"	s
VkSwapchainCreateInfoKHR	lib/vulkan/vulkan.h	/^} VkSwapchainCreateInfoKHR;$/;"	t	typeref:struct:VkSwapchainCreateInfoKHR
VkSystemAllocationScope	lib/vulkan/vulkan.h	/^typedef enum VkSystemAllocationScope {$/;"	g
VkSystemAllocationScope	lib/vulkan/vulkan.h	/^} VkSystemAllocationScope;$/;"	t	typeref:enum:VkSystemAllocationScope
VkVertexInputAttributeDescription	lib/vulkan/vulkan.h	/^typedef struct VkVertexInputAttributeDescription {$/;"	s
VkVertexInputAttributeDescription	lib/vulkan/vulkan.h	/^} VkVertexInputAttributeDescription;$/;"	t	typeref:struct:VkVertexInputAttributeDescription
VkVertexInputBindingDescription	lib/vulkan/vulkan.h	/^typedef struct VkVertexInputBindingDescription {$/;"	s
VkVertexInputBindingDescription	lib/vulkan/vulkan.h	/^} VkVertexInputBindingDescription;$/;"	t	typeref:struct:VkVertexInputBindingDescription
VkVertexInputRate	lib/vulkan/vulkan.h	/^typedef enum VkVertexInputRate {$/;"	g
VkVertexInputRate	lib/vulkan/vulkan.h	/^} VkVertexInputRate;$/;"	t	typeref:enum:VkVertexInputRate
VkViewport	lib/vulkan/vulkan.h	/^typedef struct VkViewport {$/;"	s
VkViewport	lib/vulkan/vulkan.h	/^} VkViewport;$/;"	t	typeref:struct:VkViewport
VkWaylandSurfaceCreateFlagsKHR	lib/vulkan/vulkan.h	/^typedef VkFlags VkWaylandSurfaceCreateFlagsKHR;$/;"	t
VkWaylandSurfaceCreateInfoKHR	lib/vulkan/vulkan.h	/^typedef struct VkWaylandSurfaceCreateInfoKHR {$/;"	s
VkWaylandSurfaceCreateInfoKHR	lib/vulkan/vulkan.h	/^} VkWaylandSurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkWaylandSurfaceCreateInfoKHR
VkWin32SurfaceCreateFlagsKHR	lib/vulkan/vulkan.h	/^typedef VkFlags VkWin32SurfaceCreateFlagsKHR;$/;"	t
VkWin32SurfaceCreateInfoKHR	lib/vulkan/vulkan.h	/^typedef struct VkWin32SurfaceCreateInfoKHR {$/;"	s
VkWin32SurfaceCreateInfoKHR	lib/vulkan/vulkan.h	/^} VkWin32SurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkWin32SurfaceCreateInfoKHR
VkWriteDescriptorSet	lib/vulkan/vulkan.h	/^typedef struct VkWriteDescriptorSet {$/;"	s
VkWriteDescriptorSet	lib/vulkan/vulkan.h	/^} VkWriteDescriptorSet;$/;"	t	typeref:struct:VkWriteDescriptorSet
VkXcbSurfaceCreateFlagsKHR	lib/vulkan/vulkan.h	/^typedef VkFlags VkXcbSurfaceCreateFlagsKHR;$/;"	t
VkXcbSurfaceCreateInfoKHR	lib/vulkan/vulkan.h	/^typedef struct VkXcbSurfaceCreateInfoKHR {$/;"	s
VkXcbSurfaceCreateInfoKHR	lib/vulkan/vulkan.h	/^} VkXcbSurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkXcbSurfaceCreateInfoKHR
VkXlibSurfaceCreateFlagsKHR	lib/vulkan/vulkan.h	/^typedef VkFlags VkXlibSurfaceCreateFlagsKHR;$/;"	t
VkXlibSurfaceCreateInfoKHR	lib/vulkan/vulkan.h	/^typedef struct VkXlibSurfaceCreateInfoKHR {$/;"	s
VkXlibSurfaceCreateInfoKHR	lib/vulkan/vulkan.h	/^} VkXlibSurfaceCreateInfoKHR;$/;"	t	typeref:struct:VkXlibSurfaceCreateInfoKHR
VulkanContext	inc/vulkan_context.h	/^class VulkanContext {$/;"	c
VulkanManager	inc/vulkan_manager.h	/^class VulkanManager { $/;"	c
VulkanManager	src/vulkan_manager.cpp	/^VulkanManager::VulkanManager(const Window& window):$/;"	f	class:VulkanManager
WaitForFences	lib/vulkan/vk_layer.h	/^    PFN_vkWaitForFences WaitForFences;$/;"	m	struct:VkLayerDispatchTable_
Window	inc/window.h	/^class Window {$/;"	c
Window	src/window.cpp	/^Window::Window():$/;"	f	class:Window
Window	src/window.cpp	/^Window::Window(unsigned w, unsigned h): $/;"	f	class:Window
WordCountShift	lib/vulkan/spirv.hpp	/^static const unsigned int WordCountShift = 16;$/;"	m	namespace:spv
YCbCr_to_RGB_kernel	lib/stb/stb_image.h	/^   void (*YCbCr_to_RGB_kernel)(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc *pcr, int count, int step);$/;"	m	struct:__anon60
_GLM_SWIZZLE2_2_MEMBERS	lib/glm/detail/_swizzle.hpp	300;"	d
_GLM_SWIZZLE2_3_MEMBERS	lib/glm/detail/_swizzle.hpp	306;"	d
_GLM_SWIZZLE2_4_MEMBERS	lib/glm/detail/_swizzle.hpp	316;"	d
_GLM_SWIZZLE3_2_MEMBERS	lib/glm/detail/_swizzle.hpp	334;"	d
_GLM_SWIZZLE3_3_MEMBERS	lib/glm/detail/_swizzle.hpp	345;"	d
_GLM_SWIZZLE3_4_MEMBERS	lib/glm/detail/_swizzle.hpp	374;"	d
_GLM_SWIZZLE4_2_MEMBERS	lib/glm/detail/_swizzle.hpp	457;"	d
_GLM_SWIZZLE4_3_MEMBERS	lib/glm/detail/_swizzle.hpp	475;"	d
_GLM_SWIZZLE4_4_MEMBERS	lib/glm/detail/_swizzle.hpp	541;"	d
_GLM_SWIZZLE_FUNCTION_1_ARGS	lib/glm/detail/_swizzle.hpp	206;"	d
_GLM_SWIZZLE_FUNCTION_2_ARGS	lib/glm/detail/_swizzle.hpp	216;"	d
_GLM_SWIZZLE_FUNCTION_2_ARGS_SCALAR	lib/glm/detail/_swizzle.hpp	241;"	d
_GLM_SWIZZLE_SCALAR_BINARY_OPERATOR_IMPLEMENTATION	lib/glm/detail/_swizzle.hpp	191;"	d
_GLM_SWIZZLE_TEMPLATE1	lib/glm/detail/_swizzle.hpp	163;"	d
_GLM_SWIZZLE_TEMPLATE2	lib/glm/detail/_swizzle.hpp	164;"	d
_GLM_SWIZZLE_TYPE1	lib/glm/detail/_swizzle.hpp	165;"	d
_GLM_SWIZZLE_TYPE2	lib/glm/detail/_swizzle.hpp	166;"	d
_GLM_SWIZZLE_VECTOR_BINARY_OPERATOR_IMPLEMENTATION	lib/glm/detail/_swizzle.hpp	171;"	d
__has_feature	lib/glm/detail/setup.hpp	690;"	d
_apply_op	lib/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void _apply_op(vecType<T, P> const& that, U op)$/;"	f	struct:glm::detail::_swizzle_base2
_buffer	lib/glm/detail/_swizzle.hpp	/^		char    _buffer[1];$/;"	m	struct:glm::detail::_swizzle_base0
_swizzle	lib/glm/detail/_swizzle.hpp	/^	struct _swizzle : public _swizzle_base2<N, T, P, vecType, E0, E1, E2, E3, (E0 == E1 || E0 == E2 || E0 == E3 || E1 == E2 || E1 == E3 || E2 == E3)>$/;"	s	namespace:glm::detail
_swizzle_base0	lib/glm/detail/_swizzle.hpp	/^	struct _swizzle_base0$/;"	s	namespace:glm::detail
_swizzle_base1	lib/glm/detail/_swizzle.hpp	/^	struct _swizzle_base1 : public _swizzle_base0<T, N>$/;"	s	namespace:glm::detail
_swizzle_base1	lib/glm/detail/_swizzle.hpp	/^	struct _swizzle_base1<2, T, P, vecType, E0,E1,-1,-2, Aligned> : public _swizzle_base0<T, 2>$/;"	s	namespace:glm::detail
_swizzle_base1	lib/glm/detail/_swizzle.hpp	/^	struct _swizzle_base1<3, T, P, vecType, E0,E1,E2,-1, Aligned> : public _swizzle_base0<T, 3>$/;"	s	namespace:glm::detail
_swizzle_base1	lib/glm/detail/_swizzle.hpp	/^	struct _swizzle_base1<4, T, P, vecType, E0,E1,E2,E3, Aligned> : public _swizzle_base0<T, 4>$/;"	s	namespace:glm::detail
_swizzle_base2	lib/glm/detail/_swizzle.hpp	/^	struct _swizzle_base2 : public _swizzle_base1<N, T, P, vecType, E0,E1,E2,E3, detail::is_aligned<P>::value>$/;"	s	namespace:glm::detail
_swizzle_base2	lib/glm/detail/_swizzle.hpp	/^	struct _swizzle_base2<N, T, P, vecType, E0,E1,E2,E3, 1> : public _swizzle_base1<N, T, P, vecType, E0,E1,E2,E3, detail::is_aligned<P>::value>$/;"	s	namespace:glm::detail
a	lib/glm/detail/type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::tvec4::__anon1::__anon3
a	lib/glm/detail/type_vec4.hpp	/^			union { T w, a, q; };$/;"	m	union:glm::tvec4::__anon8
a	lib/vulkan/vulkan.h	/^    VkComponentSwizzle    a;$/;"	m	struct:VkComponentMapping
addressModeU	lib/vulkan/vulkan.h	/^    VkSamplerAddressMode    addressModeU;$/;"	m	struct:VkSamplerCreateInfo
addressModeV	lib/vulkan/vulkan.h	/^    VkSamplerAddressMode    addressModeV;$/;"	m	struct:VkSamplerCreateInfo
addressModeW	lib/vulkan/vulkan.h	/^    VkSamplerAddressMode    addressModeW;$/;"	m	struct:VkSamplerCreateInfo
aligned	lib/glm/detail/precision.hpp	/^			aligned = aligned_highp,$/;"	e	enum:glm::precision
aligned	lib/glm/detail/type_vec.hpp	/^	template<std::size_t N> struct aligned {};$/;"	s	namespace:glm::detail
aligned_bvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_bvec1			aligned_bvec1;$/;"	t	namespace:glm
aligned_bvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_bvec1			aligned_bvec1;$/;"	t	namespace:glm
aligned_bvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_bvec1		aligned_bvec1;$/;"	t	namespace:glm
aligned_bvec2	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_bvec2			aligned_bvec2;$/;"	t	namespace:glm
aligned_bvec2	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_bvec2			aligned_bvec2;$/;"	t	namespace:glm
aligned_bvec2	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_bvec2		aligned_bvec2;$/;"	t	namespace:glm
aligned_bvec3	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_bvec3			aligned_bvec3;$/;"	t	namespace:glm
aligned_bvec3	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_bvec3			aligned_bvec3;$/;"	t	namespace:glm
aligned_bvec3	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_bvec3		aligned_bvec3;$/;"	t	namespace:glm
aligned_bvec4	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_bvec4			aligned_bvec4;$/;"	t	namespace:glm
aligned_bvec4	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_bvec4			aligned_bvec4;$/;"	t	namespace:glm
aligned_bvec4	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_bvec4		aligned_bvec4;$/;"	t	namespace:glm
aligned_dvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dvec1			aligned_dvec1;$/;"	t	namespace:glm
aligned_dvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dvec1			aligned_dvec1;$/;"	t	namespace:glm
aligned_dvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dvec1		aligned_dvec1;$/;"	t	namespace:glm
aligned_dvec2	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dvec2			aligned_dvec2;$/;"	t	namespace:glm
aligned_dvec2	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dvec2			aligned_dvec2;$/;"	t	namespace:glm
aligned_dvec2	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dvec2		aligned_dvec2;$/;"	t	namespace:glm
aligned_dvec3	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dvec3			aligned_dvec3;$/;"	t	namespace:glm
aligned_dvec3	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dvec3			aligned_dvec3;$/;"	t	namespace:glm
aligned_dvec3	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dvec3		aligned_dvec3;$/;"	t	namespace:glm
aligned_dvec4	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dvec4			aligned_dvec4;$/;"	t	namespace:glm
aligned_dvec4	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dvec4			aligned_dvec4;$/;"	t	namespace:glm
aligned_dvec4	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dvec4		aligned_dvec4;$/;"	t	namespace:glm
aligned_highp	lib/glm/detail/precision.hpp	/^			aligned_highp,$/;"	e	enum:glm::precision
aligned_highp_bvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<bool, aligned_highp>		aligned_highp_bvec1;$/;"	t	namespace:glm
aligned_highp_bvec2	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec2<bool, aligned_highp>		aligned_highp_bvec2;$/;"	t	namespace:glm
aligned_highp_bvec3	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec3<bool, aligned_highp>		aligned_highp_bvec3;$/;"	t	namespace:glm
aligned_highp_bvec4	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec4<bool, aligned_highp>		aligned_highp_bvec4;$/;"	t	namespace:glm
aligned_highp_dvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<double, aligned_highp>	aligned_highp_dvec1;$/;"	t	namespace:glm
aligned_highp_dvec2	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec2<double, aligned_highp>	aligned_highp_dvec2;$/;"	t	namespace:glm
aligned_highp_dvec3	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec3<double, aligned_highp>	aligned_highp_dvec3;$/;"	t	namespace:glm
aligned_highp_dvec4	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec4<double, aligned_highp>	aligned_highp_dvec4;$/;"	t	namespace:glm
aligned_highp_ivec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<int, aligned_highp>		aligned_highp_ivec1;$/;"	t	namespace:glm
aligned_highp_ivec2	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec2<int, aligned_highp>		aligned_highp_ivec2;$/;"	t	namespace:glm
aligned_highp_ivec3	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec3<int, aligned_highp>		aligned_highp_ivec3;$/;"	t	namespace:glm
aligned_highp_ivec4	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec4<int, aligned_highp>		aligned_highp_ivec4;$/;"	t	namespace:glm
aligned_highp_uvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<uint, aligned_highp>		aligned_highp_uvec1;$/;"	t	namespace:glm
aligned_highp_uvec2	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec2<uint, aligned_highp>		aligned_highp_uvec2;$/;"	t	namespace:glm
aligned_highp_uvec3	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec3<uint, aligned_highp>		aligned_highp_uvec3;$/;"	t	namespace:glm
aligned_highp_uvec4	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec4<uint, aligned_highp>		aligned_highp_uvec4;$/;"	t	namespace:glm
aligned_highp_vec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<float, aligned_highp>		aligned_highp_vec1;$/;"	t	namespace:glm
aligned_highp_vec2	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec2<float, aligned_highp>		aligned_highp_vec2;$/;"	t	namespace:glm
aligned_highp_vec3	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec3<float, aligned_highp>		aligned_highp_vec3;$/;"	t	namespace:glm
aligned_highp_vec4	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec4<float, aligned_highp>		aligned_highp_vec4;$/;"	t	namespace:glm
aligned_ivec1	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_ivec1			aligned_ivec1;$/;"	t	namespace:glm
aligned_ivec1	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_ivec1			aligned_ivec1;$/;"	t	namespace:glm
aligned_ivec1	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_ivec1		aligned_ivec1;$/;"	t	namespace:glm
aligned_ivec2	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_ivec2			aligned_ivec2;$/;"	t	namespace:glm
aligned_ivec2	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_ivec2			aligned_ivec2;$/;"	t	namespace:glm
aligned_ivec2	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_ivec2		aligned_ivec2;$/;"	t	namespace:glm
aligned_ivec3	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_ivec3			aligned_ivec3;$/;"	t	namespace:glm
aligned_ivec3	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_ivec3			aligned_ivec3;$/;"	t	namespace:glm
aligned_ivec3	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_ivec3		aligned_ivec3;$/;"	t	namespace:glm
aligned_ivec4	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_ivec4			aligned_ivec4;$/;"	t	namespace:glm
aligned_ivec4	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_ivec4			aligned_ivec4;$/;"	t	namespace:glm
aligned_ivec4	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_ivec4		aligned_ivec4;$/;"	t	namespace:glm
aligned_lowp	lib/glm/detail/precision.hpp	/^			aligned_lowp,$/;"	e	enum:glm::precision
aligned_lowp_bvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<bool, aligned_lowp>		aligned_lowp_bvec1;$/;"	t	namespace:glm
aligned_lowp_bvec2	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec2<bool, aligned_lowp>		aligned_lowp_bvec2;$/;"	t	namespace:glm
aligned_lowp_bvec3	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec3<bool, aligned_lowp>		aligned_lowp_bvec3;$/;"	t	namespace:glm
aligned_lowp_bvec4	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec4<bool, aligned_lowp>		aligned_lowp_bvec4;$/;"	t	namespace:glm
aligned_lowp_dvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<double, aligned_lowp>		aligned_lowp_dvec1;$/;"	t	namespace:glm
aligned_lowp_dvec2	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec2<double, aligned_lowp>		aligned_lowp_dvec2;$/;"	t	namespace:glm
aligned_lowp_dvec3	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec3<double, aligned_lowp>		aligned_lowp_dvec3;$/;"	t	namespace:glm
aligned_lowp_dvec4	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec4<double, aligned_lowp>		aligned_lowp_dvec4;$/;"	t	namespace:glm
aligned_lowp_ivec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<int, aligned_lowp>		aligned_lowp_ivec1;$/;"	t	namespace:glm
aligned_lowp_ivec2	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec2<int, aligned_lowp>		aligned_lowp_ivec2;$/;"	t	namespace:glm
aligned_lowp_ivec3	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec3<int, aligned_lowp>		aligned_lowp_ivec3;$/;"	t	namespace:glm
aligned_lowp_ivec4	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec4<int, aligned_lowp>		aligned_lowp_ivec4;$/;"	t	namespace:glm
aligned_lowp_uvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<uint, aligned_lowp>		aligned_lowp_uvec1;$/;"	t	namespace:glm
aligned_lowp_uvec2	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec2<uint, aligned_lowp>		aligned_lowp_uvec2;$/;"	t	namespace:glm
aligned_lowp_uvec3	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec3<uint, aligned_lowp>		aligned_lowp_uvec3;$/;"	t	namespace:glm
aligned_lowp_uvec4	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec4<uint, aligned_lowp>		aligned_lowp_uvec4;$/;"	t	namespace:glm
aligned_lowp_vec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<float, aligned_lowp>		aligned_lowp_vec1;$/;"	t	namespace:glm
aligned_lowp_vec2	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec2<float, aligned_lowp>		aligned_lowp_vec2;$/;"	t	namespace:glm
aligned_lowp_vec3	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec3<float, aligned_lowp>		aligned_lowp_vec3;$/;"	t	namespace:glm
aligned_lowp_vec4	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec4<float, aligned_lowp>		aligned_lowp_vec4;$/;"	t	namespace:glm
aligned_mediump	lib/glm/detail/precision.hpp	/^			aligned_mediump,$/;"	e	enum:glm::precision
aligned_mediump_bvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<bool, aligned_mediump>	aligned_mediump_bvec1;$/;"	t	namespace:glm
aligned_mediump_bvec2	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec2<bool, aligned_mediump>	aligned_mediump_bvec2;$/;"	t	namespace:glm
aligned_mediump_bvec3	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec3<bool, aligned_mediump>	aligned_mediump_bvec3;$/;"	t	namespace:glm
aligned_mediump_bvec4	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec4<bool, aligned_mediump>	aligned_mediump_bvec4;$/;"	t	namespace:glm
aligned_mediump_dvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<double, aligned_mediump>	aligned_mediump_dvec1;$/;"	t	namespace:glm
aligned_mediump_dvec2	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec2<double, aligned_mediump>	aligned_mediump_dvec2;$/;"	t	namespace:glm
aligned_mediump_dvec3	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec3<double, aligned_mediump>	aligned_mediump_dvec3;$/;"	t	namespace:glm
aligned_mediump_dvec4	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec4<double, aligned_mediump>	aligned_mediump_dvec4;$/;"	t	namespace:glm
aligned_mediump_ivec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<int, aligned_mediump>		aligned_mediump_ivec1;$/;"	t	namespace:glm
aligned_mediump_ivec2	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec2<int, aligned_mediump>		aligned_mediump_ivec2;$/;"	t	namespace:glm
aligned_mediump_ivec3	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec3<int, aligned_mediump>		aligned_mediump_ivec3;$/;"	t	namespace:glm
aligned_mediump_ivec4	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec4<int, aligned_mediump>		aligned_mediump_ivec4;$/;"	t	namespace:glm
aligned_mediump_uvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<uint, aligned_mediump>	aligned_mediump_uvec1;$/;"	t	namespace:glm
aligned_mediump_uvec2	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec2<uint, aligned_mediump>	aligned_mediump_uvec2;$/;"	t	namespace:glm
aligned_mediump_uvec3	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec3<uint, aligned_mediump>	aligned_mediump_uvec3;$/;"	t	namespace:glm
aligned_mediump_uvec4	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec4<uint, aligned_mediump>	aligned_mediump_uvec4;$/;"	t	namespace:glm
aligned_mediump_vec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<float, aligned_mediump>	aligned_mediump_vec1;$/;"	t	namespace:glm
aligned_mediump_vec2	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec2<float, aligned_mediump>	aligned_mediump_vec2;$/;"	t	namespace:glm
aligned_mediump_vec3	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec3<float, aligned_mediump>	aligned_mediump_vec3;$/;"	t	namespace:glm
aligned_mediump_vec4	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec4<float, aligned_mediump>	aligned_mediump_vec4;$/;"	t	namespace:glm
aligned_uvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_uvec1			aligned_uvec1;$/;"	t	namespace:glm
aligned_uvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_uvec1			aligned_uvec1;$/;"	t	namespace:glm
aligned_uvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_uvec1		aligned_uvec1;$/;"	t	namespace:glm
aligned_uvec2	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_uvec2			aligned_uvec2;$/;"	t	namespace:glm
aligned_uvec2	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_uvec2			aligned_uvec2;$/;"	t	namespace:glm
aligned_uvec2	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_uvec2		aligned_uvec2;$/;"	t	namespace:glm
aligned_uvec3	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_uvec3			aligned_uvec3;$/;"	t	namespace:glm
aligned_uvec3	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_uvec3			aligned_uvec3;$/;"	t	namespace:glm
aligned_uvec3	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_uvec3		aligned_uvec3;$/;"	t	namespace:glm
aligned_uvec4	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_uvec4			aligned_uvec4;$/;"	t	namespace:glm
aligned_uvec4	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_uvec4			aligned_uvec4;$/;"	t	namespace:glm
aligned_uvec4	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_uvec4		aligned_uvec4;$/;"	t	namespace:glm
aligned_vec1	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_vec1			aligned_vec1;$/;"	t	namespace:glm
aligned_vec1	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_vec1			aligned_vec1;$/;"	t	namespace:glm
aligned_vec1	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_vec1		aligned_vec1;$/;"	t	namespace:glm
aligned_vec2	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_vec2			aligned_vec2;$/;"	t	namespace:glm
aligned_vec2	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_vec2			aligned_vec2;$/;"	t	namespace:glm
aligned_vec2	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_vec2		aligned_vec2;$/;"	t	namespace:glm
aligned_vec3	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_vec3			aligned_vec3;$/;"	t	namespace:glm
aligned_vec3	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_vec3			aligned_vec3;$/;"	t	namespace:glm
aligned_vec3	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_vec3		aligned_vec3;$/;"	t	namespace:glm
aligned_vec4	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_vec4			aligned_vec4;$/;"	t	namespace:glm
aligned_vec4	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_vec4			aligned_vec4;$/;"	t	namespace:glm
aligned_vec4	lib/glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_vec4		aligned_vec4;$/;"	t	namespace:glm
alignment	lib/vulkan/vulkan.h	/^    VkDeviceSize    alignment;$/;"	m	struct:VkMemoryRequirements
allIndicesSet	src/device_queue_indices.cpp	/^bool DeviceQueueIndicies::allIndicesSet() $/;"	f	class:DeviceQueueIndicies
all_a	lib/stb/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon68
allocationSize	lib/vulkan/vulkan.h	/^    VkDeviceSize       allocationSize;$/;"	m	struct:VkMemoryAllocateInfo
alphaBlendOp	lib/vulkan/vulkan.h	/^    VkBlendOp                alphaBlendOp;$/;"	m	struct:VkPipelineColorBlendAttachmentState
alphaMode	lib/vulkan/vk_icd.h	/^    VkDisplayPlaneAlphaFlagBitsKHR alphaMode;$/;"	m	struct:__anon50
alphaMode	lib/vulkan/vulkan.h	/^    VkDisplayPlaneAlphaFlagBitsKHR    alphaMode;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
alphaToCoverageEnable	lib/vulkan/vulkan.h	/^    VkBool32                                 alphaToCoverageEnable;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo
alphaToOne	lib/vulkan/vulkan.h	/^    VkBool32    alphaToOne;$/;"	m	struct:VkPhysicalDeviceFeatures
alphaToOneEnable	lib/vulkan/vulkan.h	/^    VkBool32                                 alphaToOneEnable;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo
anisotropyEnable	lib/vulkan/vulkan.h	/^    VkBool32                anisotropyEnable;$/;"	m	struct:VkSamplerCreateInfo
apiVersion	lib/vulkan/vulkan.h	/^    uint32_t                            apiVersion;$/;"	m	struct:VkPhysicalDeviceProperties
apiVersion	lib/vulkan/vulkan.h	/^    uint32_t           apiVersion;$/;"	m	struct:VkApplicationInfo
applicationVersion	lib/vulkan/vulkan.h	/^    uint32_t           applicationVersion;$/;"	m	struct:VkApplicationInfo
arrayLayer	lib/vulkan/vulkan.h	/^    uint32_t              arrayLayer;$/;"	m	struct:VkImageSubresource
arrayLayers	lib/vulkan/vulkan.h	/^    uint32_t                 arrayLayers;$/;"	m	struct:VkImageCreateInfo
arrayPitch	lib/vulkan/vulkan.h	/^    VkDeviceSize    arrayPitch;$/;"	m	struct:VkSubresourceLayout
aspectMask	lib/vulkan/vulkan.h	/^    VkImageAspectFlags          aspectMask;$/;"	m	struct:VkSparseImageFormatProperties
aspectMask	lib/vulkan/vulkan.h	/^    VkImageAspectFlags    aspectMask;$/;"	m	struct:VkClearAttachment
aspectMask	lib/vulkan/vulkan.h	/^    VkImageAspectFlags    aspectMask;$/;"	m	struct:VkImageSubresource
aspectMask	lib/vulkan/vulkan.h	/^    VkImageAspectFlags    aspectMask;$/;"	m	struct:VkImageSubresourceLayers
aspectMask	lib/vulkan/vulkan.h	/^    VkImageAspectFlags    aspectMask;$/;"	m	struct:VkImageSubresourceRange
assertGlfwWindowIsValid	src/input_manager.cpp	/^void InputManager::assertGlfwWindowIsValid() $/;"	f	class:InputManager
atan2	lib/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER T atan2(T x, T y){return atan(x, y);}																\/\/!< \\brief Arc tangent. Returns an angle whose tangent is y\/x. The signs of x and y are used to determine what quadrant the angle is in. The range of values returned by this function is [-PI, PI]. Results are undefined if x and y are both 0. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
atan2	lib/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec2<T, P> atan2(const tvec2<T, P>& x, const tvec2<T, P>& y){return atan(x, y);}	\/\/!< \\brief Arc tangent. Returns an angle whose tangent is y\/x. The signs of x and y are used to determine what quadrant the angle is in. The range of values returned by this function is [-PI, PI]. Results are undefined if x and y are both 0. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
atan2	lib/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec3<T, P> atan2(const tvec3<T, P>& x, const tvec3<T, P>& y){return atan(x, y);}	\/\/!< \\brief Arc tangent. Returns an angle whose tangent is y\/x. The signs of x and y are used to determine what quadrant the angle is in. The range of values returned by this function is [-PI, PI]. Results are undefined if x and y are both 0. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
atan2	lib/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec4<T, P> atan2(const tvec4<T, P>& x, const tvec4<T, P>& y){return atan(x, y);}	\/\/!< \\brief Arc tangent. Returns an angle whose tangent is y\/x. The signs of x and y are used to determine what quadrant the angle is in. The range of values returned by this function is [-PI, PI]. Results are undefined if x and y are both 0. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
attachment	lib/vulkan/vulkan.h	/^    uint32_t         attachment;$/;"	m	struct:VkAttachmentReference
attachmentCount	lib/vulkan/vulkan.h	/^    uint32_t                                      attachmentCount;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo
attachmentCount	lib/vulkan/vulkan.h	/^    uint32_t                          attachmentCount;$/;"	m	struct:VkRenderPassCreateInfo
attachmentCount	lib/vulkan/vulkan.h	/^    uint32_t                    attachmentCount;$/;"	m	struct:VkFramebufferCreateInfo
b	lib/glm/detail/type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	m	struct:glm::tvec3::__anon17::__anon19
b	lib/glm/detail/type_vec3.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec3::__anon23
b	lib/glm/detail/type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::tvec4::__anon1::__anon3
b	lib/glm/detail/type_vec4.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec4::__anon7
b	lib/vulkan/vulkan.h	/^    VkComponentSwizzle    b;$/;"	m	struct:VkComponentMapping
back	lib/vulkan/vulkan.h	/^    VkStencilOpState                          back;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
base	lib/vulkan/vk_icd.h	/^    VkIcdSurfaceBase base;$/;"	m	struct:__anon45
base	lib/vulkan/vk_icd.h	/^    VkIcdSurfaceBase base;$/;"	m	struct:__anon46
base	lib/vulkan/vk_icd.h	/^    VkIcdSurfaceBase base;$/;"	m	struct:__anon47
base	lib/vulkan/vk_icd.h	/^    VkIcdSurfaceBase base;$/;"	m	struct:__anon48
base	lib/vulkan/vk_icd.h	/^    VkIcdSurfaceBase base;$/;"	m	struct:__anon49
base	lib/vulkan/vk_icd.h	/^    VkIcdSurfaceBase base;$/;"	m	struct:__anon50
baseArrayLayer	lib/vulkan/vulkan.h	/^    uint32_t              baseArrayLayer;$/;"	m	struct:VkImageSubresourceLayers
baseArrayLayer	lib/vulkan/vulkan.h	/^    uint32_t              baseArrayLayer;$/;"	m	struct:VkImageSubresourceRange
baseArrayLayer	lib/vulkan/vulkan.h	/^    uint32_t    baseArrayLayer;$/;"	m	struct:VkClearRect
baseMipLevel	lib/vulkan/vulkan.h	/^    uint32_t              baseMipLevel;$/;"	m	struct:VkImageSubresourceRange
basePipelineHandle	lib/vulkan/vulkan.h	/^    VkPipeline                                       basePipelineHandle;$/;"	m	struct:VkGraphicsPipelineCreateInfo
basePipelineHandle	lib/vulkan/vulkan.h	/^    VkPipeline                         basePipelineHandle;$/;"	m	struct:VkComputePipelineCreateInfo
basePipelineIndex	lib/vulkan/vulkan.h	/^    int32_t                                          basePipelineIndex;$/;"	m	struct:VkGraphicsPipelineCreateInfo
basePipelineIndex	lib/vulkan/vulkan.h	/^    int32_t                            basePipelineIndex;$/;"	m	struct:VkComputePipelineCreateInfo
base_type	lib/glm/detail/_swizzle.hpp	/^		typedef _swizzle_base2<N, T, P, vecType, E0, E1, E2, E3, (E0 == E1 || E0 == E2 || E0 == E3 || E1 == E2 || E1 == E3 || E2 == E3)> base_type;$/;"	t	struct:glm::detail::_swizzle
basic_format_saver	lib/glm/gtx/io.hpp	/^		class basic_format_saver$/;"	c	namespace:glm::io
basic_state_saver	lib/glm/gtx/io.hpp	/^		class basic_state_saver {$/;"	c	namespace:glm::io
begin	lib/glm/gtx/range.hpp	/^	inline typename genType::value_type * begin(genType& v)$/;"	f	namespace:glm
begin	lib/glm/gtx/range.hpp	/^	inline typename genType::value_type const * begin(genType const & v)$/;"	f	class:glm::genType
beginSingleTimeCommands	src/vulkan_manager.cpp	/^VkCommandBuffer VulkanManager::beginSingleTimeCommands()$/;"	f	class:VulkanManager
bgindex	lib/stb/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon71
bindCount	lib/vulkan/vulkan.h	/^    uint32_t                          bindCount;$/;"	m	struct:VkSparseImageMemoryBindInfo
bindCount	lib/vulkan/vulkan.h	/^    uint32_t                     bindCount;$/;"	m	struct:VkSparseBufferMemoryBindInfo
bindCount	lib/vulkan/vulkan.h	/^    uint32_t                     bindCount;$/;"	m	struct:VkSparseImageOpaqueMemoryBindInfo
binding	lib/vulkan/vulkan.h	/^    uint32_t              binding;$/;"	m	struct:VkDescriptorSetLayoutBinding
binding	lib/vulkan/vulkan.h	/^    uint32_t             binding;$/;"	m	struct:VkVertexInputBindingDescription
binding	lib/vulkan/vulkan.h	/^    uint32_t    binding;$/;"	m	struct:VkVertexInputAttributeDescription
bindingCount	lib/vulkan/vulkan.h	/^    uint32_t                               bindingCount;$/;"	m	struct:VkDescriptorSetLayoutCreateInfo
blendConstants	lib/vulkan/vulkan.h	/^    float                                         blendConstants[4];$/;"	m	struct:VkPipelineColorBlendStateCreateInfo
blendEnable	lib/vulkan/vulkan.h	/^    VkBool32                 blendEnable;$/;"	m	struct:VkPipelineColorBlendAttachmentState
bool1	lib/glm/gtx/compatibility.hpp	/^	typedef bool						bool1;			\/\/!< \\brief boolean type with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool1x1	lib/glm/gtx/compatibility.hpp	/^	typedef bool						bool1x1;		\/\/!< \\brief boolean matrix with 1 x 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool2	lib/glm/gtx/compatibility.hpp	/^	typedef tvec2<bool, highp>			bool2;			\/\/!< \\brief boolean type with 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool2x2	lib/glm/gtx/compatibility.hpp	/^	typedef tmat2x2<bool, highp>		bool2x2;		\/\/!< \\brief boolean matrix with 2 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool2x3	lib/glm/gtx/compatibility.hpp	/^	typedef tmat2x3<bool, highp>		bool2x3;		\/\/!< \\brief boolean matrix with 2 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool2x4	lib/glm/gtx/compatibility.hpp	/^	typedef tmat2x4<bool, highp>		bool2x4;		\/\/!< \\brief boolean matrix with 2 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool3	lib/glm/gtx/compatibility.hpp	/^	typedef tvec3<bool, highp>			bool3;			\/\/!< \\brief boolean type with 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool3x2	lib/glm/gtx/compatibility.hpp	/^	typedef tmat3x2<bool, highp>		bool3x2;		\/\/!< \\brief boolean matrix with 3 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool3x3	lib/glm/gtx/compatibility.hpp	/^	typedef tmat3x3<bool, highp>		bool3x3;		\/\/!< \\brief boolean matrix with 3 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool3x4	lib/glm/gtx/compatibility.hpp	/^	typedef tmat3x4<bool, highp>		bool3x4;		\/\/!< \\brief boolean matrix with 3 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool4	lib/glm/gtx/compatibility.hpp	/^	typedef tvec4<bool, highp>			bool4;			\/\/!< \\brief boolean type with 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool4x2	lib/glm/gtx/compatibility.hpp	/^	typedef tmat4x2<bool, highp>		bool4x2;		\/\/!< \\brief boolean matrix with 4 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool4x3	lib/glm/gtx/compatibility.hpp	/^	typedef tmat4x3<bool, highp>		bool4x3;		\/\/!< \\brief boolean matrix with 4 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool4x4	lib/glm/gtx/compatibility.hpp	/^	typedef tmat4x4<bool, highp>		bool4x4;		\/\/!< \\brief boolean matrix with 4 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool_type	lib/glm/detail/type_gentype.hpp	/^		typedef TYPE<bool> bool_type;$/;"	t	struct:glm::detail::genType
bool_type	lib/glm/detail/type_vec1.hpp	/^		typedef tvec1<bool, P> bool_type;$/;"	t	struct:glm::tvec1
bool_type	lib/glm/detail/type_vec2.hpp	/^		typedef tvec2<bool, P> bool_type;$/;"	t	struct:glm::tvec2
bool_type	lib/glm/detail/type_vec3.hpp	/^		typedef tvec3<bool, P> bool_type;$/;"	t	struct:glm::tvec3
bool_type	lib/glm/detail/type_vec4.hpp	/^		typedef tvec4<bool, P> bool_type;$/;"	t	struct:glm::tvec4
borderColor	lib/vulkan/vulkan.h	/^    VkBorderColor           borderColor;$/;"	m	struct:VkSamplerCreateInfo
bpp	lib/stb/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon68
bss_	lib/glm/gtx/io.hpp	/^			basic_state_saver<CTy> const bss_;$/;"	m	class:glm::io::basic_format_saver
buffer	lib/vulkan/vulkan.h	/^    VkBuffer                     buffer;$/;"	m	struct:VkSparseBufferMemoryBindInfo
buffer	lib/vulkan/vulkan.h	/^    VkBuffer                   buffer;$/;"	m	struct:VkBufferViewCreateInfo
buffer	lib/vulkan/vulkan.h	/^    VkBuffer           buffer;$/;"	m	struct:VkBufferMemoryBarrier
buffer	lib/vulkan/vulkan.h	/^    VkBuffer           buffer;$/;"	m	struct:VkDedicatedAllocationMemoryAllocateInfoNV
buffer	lib/vulkan/vulkan.h	/^    VkBuffer        buffer;$/;"	m	struct:VkDescriptorBufferInfo
bufferBindCount	lib/vulkan/vulkan.h	/^    uint32_t                                    bufferBindCount;$/;"	m	struct:VkBindSparseInfo
bufferFeatures	lib/vulkan/vulkan.h	/^    VkFormatFeatureFlags    bufferFeatures;$/;"	m	struct:VkFormatProperties
bufferImageGranularity	lib/vulkan/vulkan.h	/^    VkDeviceSize          bufferImageGranularity;$/;"	m	struct:VkPhysicalDeviceLimits
bufferImageHeight	lib/vulkan/vulkan.h	/^    uint32_t                    bufferImageHeight;$/;"	m	struct:VkBufferImageCopy
bufferOffset	lib/vulkan/vulkan.h	/^    VkDeviceSize                bufferOffset;$/;"	m	struct:VkBufferImageCopy
bufferRowLength	lib/vulkan/vulkan.h	/^    uint32_t                    bufferRowLength;$/;"	m	struct:VkBufferImageCopy
buffer_start	lib/stb/stb_image.h	/^   stbi_uc buffer_start[128];$/;"	m	struct:__anon57
buflen	lib/stb/stb_image.h	/^   int buflen;$/;"	m	struct:__anon57
bvec1	lib/glm/gtc/vec1.hpp	/^	typedef highp_bvec1				bvec1;$/;"	t	namespace:glm
bvec1	lib/glm/gtc/vec1.hpp	/^	typedef lowp_bvec1				bvec1;$/;"	t	namespace:glm
bvec1	lib/glm/gtc/vec1.hpp	/^	typedef mediump_bvec1			bvec1;$/;"	t	namespace:glm
bvec2	lib/glm/detail/type_vec.hpp	/^	typedef highp_bvec2			bvec2;$/;"	t	namespace:glm
bvec2	lib/glm/detail/type_vec.hpp	/^	typedef lowp_bvec2			bvec2;$/;"	t	namespace:glm
bvec2	lib/glm/detail/type_vec.hpp	/^	typedef mediump_bvec2		bvec2;$/;"	t	namespace:glm
bvec3	lib/glm/detail/type_vec.hpp	/^	typedef highp_bvec3			bvec3;$/;"	t	namespace:glm
bvec3	lib/glm/detail/type_vec.hpp	/^	typedef lowp_bvec3			bvec3;$/;"	t	namespace:glm
bvec3	lib/glm/detail/type_vec.hpp	/^	typedef mediump_bvec3		bvec3;$/;"	t	namespace:glm
bvec4	lib/glm/detail/type_vec.hpp	/^	typedef highp_bvec4			bvec4;$/;"	t	namespace:glm
bvec4	lib/glm/detail/type_vec.hpp	/^	typedef lowp_bvec4			bvec4;$/;"	t	namespace:glm
bvec4	lib/glm/detail/type_vec.hpp	/^	typedef mediump_bvec4		bvec4;$/;"	t	namespace:glm
byte	lib/glm/gtx/raw_data.hpp	/^	typedef detail::uint8		byte;$/;"	t	namespace:glm
calcAspect	src/window.cpp	/^void Window::calcAspect() $/;"	f	class:Window
call	lib/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec1<R, P> call(R (*Func) (T x), tvec1<T, P> const & v)$/;"	f	struct:glm::detail::functor1
call	lib/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec1<T, P> call(T (*Func) (T x, T y), tvec1<T, P> const & a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca
call	lib/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec1<T, P> call(T (*Func) (T x, T y), tvec1<T, P> const & a, tvec1<T, P> const & b)$/;"	f	struct:glm::detail::functor2
call	lib/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec2<R, P> call(R (*Func) (T x), tvec2<T, P> const & v)$/;"	f	struct:glm::detail::functor1
call	lib/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec2<T, P> call(T (*Func) (T x, T y), tvec2<T, P> const & a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca
call	lib/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec2<T, P> call(T (*Func) (T x, T y), tvec2<T, P> const & a, tvec2<T, P> const & b)$/;"	f	struct:glm::detail::functor2
call	lib/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec3<R, P> call(R (*Func) (T x), tvec3<T, P> const & v)$/;"	f	struct:glm::detail::functor1
call	lib/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec3<T, P> call(T (*Func) (T x, T y), tvec3<T, P> const & a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca
call	lib/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec3<T, P> call(T (*Func) (T x, T y), tvec3<T, P> const & a, tvec3<T, P> const & b)$/;"	f	struct:glm::detail::functor2
call	lib/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec4<R, P> call(R (*Func) (T x), tvec4<T, P> const & v)$/;"	f	struct:glm::detail::functor1
call	lib/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec4<T, P> call(T (*Func) (T x, T y), tvec4<T, P> const & a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca
call	lib/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec4<T, P> call(T (*Func) (T x, T y), tvec4<T, P> const & a, tvec4<T, P> const & b)$/;"	f	struct:glm::detail::functor2
channel	lib/stb/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon69
char_type	lib/glm/gtx/io.hpp	/^			typedef CTy char_type;$/;"	t	class:glm::io::format_punct
char_type	lib/glm/gtx/io.hpp	/^			typedef typename state_type::char_type char_type;$/;"	t	class:glm::io::basic_state_saver
clearValue	lib/vulkan/vulkan.h	/^    VkClearValue          clearValue;$/;"	m	struct:VkClearAttachment
clearValueCount	lib/vulkan/vulkan.h	/^    uint32_t               clearValueCount;$/;"	m	struct:VkRenderPassBeginInfo
clipped	lib/vulkan/vulkan.h	/^    VkBool32                         clipped;$/;"	m	struct:VkSwapchainCreateInfoKHR
code	lib/stb/stb_image.h	/^   stbi__uint16 code[256];$/;"	m	struct:__anon59
code	lib/vulkan/libspirv.h	/^  const uint32_t* code;$/;"	m	struct:spv_const_binary_t
code	lib/vulkan/libspirv.h	/^  uint32_t* code;$/;"	m	struct:spv_binary_t
codeSize	lib/vulkan/vulkan.h	/^    size_t                       codeSize;$/;"	m	struct:VkShaderModuleCreateInfo
code_bits	lib/stb/stb_image.h	/^   int            code_bits;   \/\/ number of valid bits$/;"	m	struct:__anon60
code_buffer	lib/stb/stb_image.h	/^   stbi__uint32   code_buffer; \/\/ jpeg entropy-coded buffer$/;"	m	struct:__anon60
code_buffer	lib/stb/stb_image.h	/^   stbi__uint32 code_buffer;$/;"	m	struct:__anon64
codes	lib/stb/stb_image.h	/^   stbi__gif_lzw codes[4096];$/;"	m	struct:__anon71
coeff	lib/stb/stb_image.h	/^      short   *coeff;   \/\/ progressive only$/;"	m	struct:__anon60::__anon61
coeff_h	lib/stb/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon60::__anon61
coeff_w	lib/stb/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon60::__anon61
col_type	lib/glm/detail/type_mat2x2.hpp	/^		typedef tvec2<T, P> col_type;$/;"	t	struct:glm::tmat2x2
col_type	lib/glm/detail/type_mat2x3.hpp	/^		typedef tvec3<T, P> col_type;$/;"	t	struct:glm::tmat2x3
col_type	lib/glm/detail/type_mat2x4.hpp	/^		typedef tvec4<T, P> col_type;$/;"	t	struct:glm::tmat2x4
col_type	lib/glm/detail/type_mat3x2.hpp	/^		typedef tvec2<T, P> col_type;$/;"	t	struct:glm::tmat3x2
col_type	lib/glm/detail/type_mat3x3.hpp	/^		typedef tvec3<T, P> col_type;$/;"	t	struct:glm::tmat3x3
col_type	lib/glm/detail/type_mat3x4.hpp	/^		typedef tvec4<T, P> col_type;$/;"	t	struct:glm::tmat3x4
col_type	lib/glm/detail/type_mat4x2.hpp	/^		typedef tvec2<T, P> col_type;$/;"	t	struct:glm::tmat4x2
col_type	lib/glm/detail/type_mat4x3.hpp	/^		typedef tvec3<T, P> col_type;$/;"	t	struct:glm::tmat4x3
col_type	lib/glm/detail/type_mat4x4.hpp	/^		typedef tvec4<T, P> col_type;$/;"	t	struct:glm::tmat4x4
color	inc/quad.h	/^		glm::vec3 color;$/;"	m	struct:Quad::Vertex
color	inc/vulkan_manager.h	/^		glm::vec3 color;$/;"	m	struct:VulkanManager::Vertex
color	lib/vulkan/vulkan.h	/^    VkClearColorValue           color;$/;"	m	union:VkClearValue
color	lib/vulkan/vulkan.h	/^    float              color[4];$/;"	m	struct:VkDebugMarkerMarkerInfoEXT
colorAttachment	lib/vulkan/vulkan.h	/^    uint32_t              colorAttachment;$/;"	m	struct:VkClearAttachment
colorAttachmentCount	lib/vulkan/vulkan.h	/^    uint32_t                        colorAttachmentCount;$/;"	m	struct:VkSubpassDescription
colorBlendOp	lib/vulkan/vulkan.h	/^    VkBlendOp                colorBlendOp;$/;"	m	struct:VkPipelineColorBlendAttachmentState
colorSpace	lib/vulkan/vulkan.h	/^    VkColorSpaceKHR    colorSpace;$/;"	m	struct:VkSurfaceFormatKHR
colorWriteMask	lib/vulkan/vulkan.h	/^    VkColorComponentFlags    colorWriteMask;$/;"	m	struct:VkPipelineColorBlendAttachmentState
color_table	lib/stb/stb_image.h	/^   stbi_uc *color_table;$/;"	m	struct:__anon71
cols	lib/glm/gtx/type_trait.hpp	/^			cols = 2,$/;"	e	enum:glm::type::__anon28
cols	lib/glm/gtx/type_trait.hpp	/^			cols = 2,$/;"	e	enum:glm::type::__anon29
cols	lib/glm/gtx/type_trait.hpp	/^			cols = 2,$/;"	e	enum:glm::type::__anon30
cols	lib/glm/gtx/type_trait.hpp	/^			cols = 3,$/;"	e	enum:glm::type::__anon31
cols	lib/glm/gtx/type_trait.hpp	/^			cols = 3,$/;"	e	enum:glm::type::__anon32
cols	lib/glm/gtx/type_trait.hpp	/^			cols = 3,$/;"	e	enum:glm::type::__anon33
cols	lib/glm/gtx/type_trait.hpp	/^			cols = 4,$/;"	e	enum:glm::type::__anon34
cols	lib/glm/gtx/type_trait.hpp	/^			cols = 4,$/;"	e	enum:glm::type::__anon35
cols	lib/glm/gtx/type_trait.hpp	/^			cols = 4,$/;"	e	enum:glm::type::__anon36
cols	lib/glm/gtx/type_trait.hpp	/^		static length_t const cols = 0;$/;"	m	struct:glm::type
column	lib/vulkan/libspirv.h	/^  size_t column;$/;"	m	struct:spv_position_t
column_major	lib/glm/gtx/io.hpp	/^		enum order_type { column_major, row_major};$/;"	e	enum:glm::io::order_type
commandBufferCount	lib/vulkan/vulkan.h	/^    uint32_t                       commandBufferCount;$/;"	m	struct:VkSubmitInfo
commandBufferCount	lib/vulkan/vulkan.h	/^    uint32_t                commandBufferCount;$/;"	m	struct:VkCommandBufferAllocateInfo
commandPool	lib/vulkan/vulkan.h	/^    VkCommandPool           commandPool;$/;"	m	struct:VkCommandBufferAllocateInfo
compareEnable	lib/vulkan/vulkan.h	/^    VkBool32                compareEnable;$/;"	m	struct:VkSamplerCreateInfo
compareMask	lib/vulkan/vulkan.h	/^    uint32_t       compareMask;$/;"	m	struct:VkStencilOpState
compareOp	lib/vulkan/vulkan.h	/^    VkCompareOp             compareOp;$/;"	m	struct:VkSamplerCreateInfo
compareOp	lib/vulkan/vulkan.h	/^    VkCompareOp    compareOp;$/;"	m	struct:VkStencilOpState
compilation_database_folder	.ycm_extra_conf.py	/^compilation_database_folder = ''$/;"	v
components	lib/glm/gtx/range.hpp	/^	inline length_t components(genType const & m)$/;"	f	namespace:glm
components	lib/glm/gtx/range.hpp	/^	inline length_t components(tvec1<T, P> const & v)$/;"	f	namespace:glm
components	lib/glm/gtx/range.hpp	/^	inline length_t components(tvec2<T, P> const & v)$/;"	f	namespace:glm
components	lib/glm/gtx/range.hpp	/^	inline length_t components(tvec3<T, P> const & v)$/;"	f	namespace:glm
components	lib/glm/gtx/range.hpp	/^	inline length_t components(tvec4<T, P> const & v)$/;"	f	namespace:glm
components	lib/glm/gtx/type_trait.hpp	/^			components = 1$/;"	e	enum:glm::type::__anon24
components	lib/glm/gtx/type_trait.hpp	/^			components = 2$/;"	e	enum:glm::type::__anon25
components	lib/glm/gtx/type_trait.hpp	/^			components = 2,$/;"	e	enum:glm::type::__anon28
components	lib/glm/gtx/type_trait.hpp	/^			components = 2,$/;"	e	enum:glm::type::__anon29
components	lib/glm/gtx/type_trait.hpp	/^			components = 2,$/;"	e	enum:glm::type::__anon30
components	lib/glm/gtx/type_trait.hpp	/^			components = 3$/;"	e	enum:glm::type::__anon26
components	lib/glm/gtx/type_trait.hpp	/^			components = 3,$/;"	e	enum:glm::type::__anon31
components	lib/glm/gtx/type_trait.hpp	/^			components = 3,$/;"	e	enum:glm::type::__anon32
components	lib/glm/gtx/type_trait.hpp	/^			components = 3,$/;"	e	enum:glm::type::__anon33
components	lib/glm/gtx/type_trait.hpp	/^			components = 4$/;"	e	enum:glm::type::__anon27
components	lib/glm/gtx/type_trait.hpp	/^			components = 4$/;"	e	enum:glm::type::__anon37
components	lib/glm/gtx/type_trait.hpp	/^			components = 4,$/;"	e	enum:glm::type::__anon34
components	lib/glm/gtx/type_trait.hpp	/^			components = 4,$/;"	e	enum:glm::type::__anon35
components	lib/glm/gtx/type_trait.hpp	/^			components = 4,$/;"	e	enum:glm::type::__anon36
components	lib/glm/gtx/type_trait.hpp	/^			components = 8$/;"	e	enum:glm::type::__anon38
components	lib/glm/gtx/type_trait.hpp	/^		static length_t const components = 0;$/;"	m	struct:glm::type
components	lib/vulkan/vulkan.h	/^    VkComponentMapping         components;$/;"	m	struct:VkImageViewCreateInfo
compositeAlpha	lib/vulkan/vulkan.h	/^    VkCompositeAlphaFlagBitsKHR      compositeAlpha;$/;"	m	struct:VkSwapchainCreateInfoKHR
computeIndexSet	src/device_queue_indices.cpp	/^bool DeviceQueueIndicies::computeIndexSet() $/;"	f	class:DeviceQueueIndicies
connection	lib/vulkan/vk_icd.h	/^    MirConnection *connection;$/;"	m	struct:__anon45
connection	lib/vulkan/vk_icd.h	/^    xcb_connection_t *connection;$/;"	m	struct:__anon48
connection	lib/vulkan/vulkan.h	/^    MirConnection*                connection;$/;"	m	struct:VkMirSurfaceCreateInfoKHR
connection	lib/vulkan/vulkan.h	/^    xcb_connection_t*             connection;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR
const_pointer	lib/glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> const * const_pointer;$/;"	t	struct:glm::detail::genType
const_pointer_const	lib/glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> const * const const_pointer_const;$/;"	t	struct:glm::detail::genType
const_reference	lib/glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> const & const_reference;$/;"	t	struct:glm::detail::genType
constantID	lib/vulkan/vulkan.h	/^    uint32_t    constantID;$/;"	m	struct:VkSpecializationMapEntry
copyBuffer	src/vulkan_manager.cpp	/^void VulkanManager::copyBuffer(VkBuffer src, VkBuffer dst, VkDeviceSize size)$/;"	f	class:VulkanManager
copyImage	src/vulkan_manager.cpp	/^void VulkanManager::copyImage(VkImage srcImage, VkImage dstImage, uint32_t width, uint32_t height)$/;"	f	class:VulkanManager
countof	lib/glm/detail/setup.hpp	/^		constexpr std::size_t countof(T const (&)[N])$/;"	f	namespace:glm
createBuffer	src/vulkan_manager.cpp	/^void VulkanManager::createBuffer(VkBuffer& buffer, $/;"	f	class:VulkanManager
createCommandBuffers	src/vulkan_manager.cpp	/^void VulkanManager::createCommandBuffers()$/;"	f	class:VulkanManager
createCommandPool	src/vulkan_manager.cpp	/^void VulkanManager::createCommandPool()$/;"	f	class:VulkanManager
createDepthResources	src/vulkan_manager.cpp	/^void VulkanManager::createDepthResources()$/;"	f	class:VulkanManager
createDescriptorPool	src/vulkan_manager.cpp	/^void VulkanManager::createDescriptorPool()$/;"	f	class:VulkanManager
createDescriptorSet	src/vulkan_manager.cpp	/^void VulkanManager::createDescriptorSet() $/;"	f	class:VulkanManager
createDescriptorSetLayout	src/vulkan_manager.cpp	/^void VulkanManager::createDescriptorSetLayout()$/;"	f	class:VulkanManager
createFramebuffers	src/vulkan_manager.cpp	/^void VulkanManager::createFramebuffers()$/;"	f	class:VulkanManager
createImage	src/vulkan_manager.cpp	/^void VulkanManager::createImage(uint32_t w, uint32_t h, VkFormat format, VkImageTiling tiling,$/;"	f	class:VulkanManager
createImageView	src/vulkan_manager.cpp	/^void VulkanManager::createImageView(VkImage image, VkFormat format, VkImageAspectFlags aspectFlags, VkImageView& imageView)$/;"	f	class:VulkanManager
createImageViews	src/vulkan_manager.cpp	/^void VulkanManager::createImageViews() $/;"	f	class:VulkanManager
createIndexBuffer	src/quad.cpp	/^void Quad::createIndexBuffer()$/;"	f	class:Quad
createIndexBuffer	src/vulkan_manager.cpp	/^void VulkanManager::createIndexBuffer()$/;"	f	class:VulkanManager
createLogicalDevice	src/vulkan_manager.cpp	/^void VulkanManager::createLogicalDevice() $/;"	f	class:VulkanManager
createPhysicalDevice	src/vulkan_manager.cpp	/^void VulkanManager::createPhysicalDevice() $/;"	f	class:VulkanManager
createPipeline	src/vulkan_manager.cpp	/^void VulkanManager::createPipeline()$/;"	f	class:VulkanManager
createRenderPass	src/vulkan_manager.cpp	/^void VulkanManager::createRenderPass()$/;"	f	class:VulkanManager
createSemaphores	src/vulkan_manager.cpp	/^void VulkanManager::createSemaphores()$/;"	f	class:VulkanManager
createShaderModule	src/vulkan_manager.cpp	/^void VulkanManager::createShaderModule(const std::vector<char>& shaderSpvCode, VkShaderModule& shaderModule)$/;"	f	class:VulkanManager
createSwapChain	src/vulkan_manager.cpp	/^void VulkanManager::createSwapChain(const Window& window)$/;"	f	class:VulkanManager
createTextureImage	src/vulkan_manager.cpp	/^void VulkanManager::createTextureImage()$/;"	f	class:VulkanManager
createTextureImageView	src/vulkan_manager.cpp	/^void VulkanManager::createTextureImageView()$/;"	f	class:VulkanManager
createTextureSampler	src/vulkan_manager.cpp	/^void VulkanManager::createTextureSampler()$/;"	f	class:VulkanManager
createUniformBuffer	src/vulkan_manager.cpp	/^void VulkanManager::createUniformBuffer()$/;"	f	class:VulkanManager
createVertexBuffer	src/quad.cpp	/^void Quad::createVertexBuffer() $/;"	f	class:Quad
createVertexBuffer	src/vulkan_manager.cpp	/^void VulkanManager::createVertexBuffer() $/;"	f	class:VulkanManager
createVkInstance	src/vulkan_manager.cpp	/^void VulkanManager::createVkInstance() $/;"	f	class:VulkanManager
createVkSurface	src/vulkan_manager.cpp	/^void VulkanManager::createVkSurface(GLFWwindow& glfwWindow)$/;"	f	class:VulkanManager
ctor	lib/glm/detail/setup.hpp	/^	enum ctor{uninitialize};$/;"	g	namespace:glm
ctor	lib/glm/detail/type_gentype.hpp	/^		enum ctor{null};$/;"	g	struct:glm::detail::genType
cullMode	lib/vulkan/vulkan.h	/^    VkCullModeFlags                            cullMode;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
cur_x	lib/stb/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon71
cur_y	lib/stb/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon71
currentDisplay	lib/vulkan/vulkan.h	/^    VkDisplayKHR    currentDisplay;$/;"	m	struct:VkDisplayPlanePropertiesKHR
currentExtent	lib/vulkan/vulkan.h	/^    VkExtent2D                       currentExtent;$/;"	m	struct:VkSurfaceCapabilitiesKHR
currentStackIndex	lib/vulkan/vulkan.h	/^    uint32_t        currentStackIndex;$/;"	m	struct:VkDisplayPlanePropertiesKHR
currentTransform	lib/vulkan/vulkan.h	/^    VkSurfaceTransformFlagBitsKHR    currentTransform;$/;"	m	struct:VkSurfaceCapabilitiesKHR
data	lib/glm/detail/type_vec.hpp	/^			uint8 data[size];$/;"	m	struct:glm::detail::storage::type
data	lib/glm/detail/type_vec4.hpp	/^				typename detail::storage<T, sizeof(T) * 4, detail::is_aligned<P>::value>::type data;$/;"	m	union:glm::tvec4::__anon1
data	lib/glm/gtc/quaternion.hpp	/^				typename detail::storage<T, sizeof(T) * 4, detail::is_aligned<P>::value>::type data;$/;"	m	union:glm::tquat::__anon39
data	lib/stb/stb_image.h	/^      stbi_uc *data;$/;"	m	struct:__anon60::__anon61
dataSize	lib/vulkan/vulkan.h	/^    size_t                             dataSize;$/;"	m	struct:VkSpecializationInfo
database	.ycm_extra_conf.py	/^  database = None$/;"	v
database	.ycm_extra_conf.py	/^  database = ycm_core.CompilationDatabase( compilation_database_folder )$/;"	v
dc_pred	lib/stb/stb_image.h	/^      int dc_pred;$/;"	m	struct:__anon60::__anon61
dct_bfly32o	lib/stb/stb_image.h	2067;"	d
dct_bfly32o	lib/stb/stb_image.h	2201;"	d
dct_bfly32o	lib/stb/stb_image.h	2253;"	d
dct_bfly32o	lib/stb/stb_image.h	2411;"	d
dct_const	lib/stb/stb_image.h	2039;"	d
dct_const	lib/stb/stb_image.h	2196;"	d
dct_interleave16	lib/stb/stb_image.h	2084;"	d
dct_interleave16	lib/stb/stb_image.h	2203;"	d
dct_interleave8	lib/stb/stb_image.h	2078;"	d
dct_interleave8	lib/stb/stb_image.h	2202;"	d
dct_long_mac	lib/stb/stb_image.h	2234;"	d
dct_long_mac	lib/stb/stb_image.h	2407;"	d
dct_long_mul	lib/stb/stb_image.h	2230;"	d
dct_long_mul	lib/stb/stb_image.h	2406;"	d
dct_pass	lib/stb/stb_image.h	2089;"	d
dct_pass	lib/stb/stb_image.h	2204;"	d
dct_pass	lib/stb/stb_image.h	2261;"	d
dct_pass	lib/stb/stb_image.h	2412;"	d
dct_rot	lib/stb/stb_image.h	2043;"	d
dct_rot	lib/stb/stb_image.h	2197;"	d
dct_trn16	lib/stb/stb_image.h	2321;"	d
dct_trn16	lib/stb/stb_image.h	2343;"	d
dct_trn32	lib/stb/stb_image.h	2322;"	d
dct_trn32	lib/stb/stb_image.h	2344;"	d
dct_trn64	lib/stb/stb_image.h	2323;"	d
dct_trn64	lib/stb/stb_image.h	2345;"	d
dct_trn8_16	lib/stb/stb_image.h	2367;"	d
dct_trn8_16	lib/stb/stb_image.h	2402;"	d
dct_trn8_32	lib/stb/stb_image.h	2368;"	d
dct_trn8_32	lib/stb/stb_image.h	2403;"	d
dct_trn8_8	lib/stb/stb_image.h	2366;"	d
dct_trn8_8	lib/stb/stb_image.h	2401;"	d
dct_wadd	lib/stb/stb_image.h	2057;"	d
dct_wadd	lib/stb/stb_image.h	2199;"	d
dct_wadd	lib/stb/stb_image.h	2243;"	d
dct_wadd	lib/stb/stb_image.h	2409;"	d
dct_widen	lib/stb/stb_image.h	2052;"	d
dct_widen	lib/stb/stb_image.h	2198;"	d
dct_widen	lib/stb/stb_image.h	2238;"	d
dct_widen	lib/stb/stb_image.h	2408;"	d
dct_wsub	lib/stb/stb_image.h	2062;"	d
dct_wsub	lib/stb/stb_image.h	2200;"	d
dct_wsub	lib/stb/stb_image.h	2248;"	d
dct_wsub	lib/stb/stb_image.h	2410;"	d
ddualquat	lib/glm/gtx/dual_quaternion.hpp	/^	typedef highp_ddualquat			ddualquat;$/;"	t	namespace:glm
ddualquat	lib/glm/gtx/dual_quaternion.hpp	/^	typedef lowp_ddualquat			ddualquat;$/;"	t	namespace:glm
ddualquat	lib/glm/gtx/dual_quaternion.hpp	/^	typedef mediump_ddualquat		ddualquat;$/;"	t	namespace:glm
debugCallback	src/vulkan_manager.cpp	/^static VKAPI_ATTR VkBool32 VKAPI_CALL debugCallback($/;"	f	file:
dedicatedAllocation	lib/vulkan/vulkan.h	/^    VkBool32           dedicatedAllocation;$/;"	m	struct:VkDedicatedAllocationBufferCreateInfoNV
dedicatedAllocation	lib/vulkan/vulkan.h	/^    VkBool32           dedicatedAllocation;$/;"	m	struct:VkDedicatedAllocationImageCreateInfoNV
defaultp	lib/glm/detail/precision.hpp	/^			defaultp = aligned_highp$/;"	e	enum:glm::precision
delay	lib/stb/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon71
delim_left	lib/glm/gtx/io.hpp	/^			char_type  delim_left;$/;"	m	class:glm::io::format_punct
delim_right	lib/glm/gtx/io.hpp	/^			char_type  delim_right;$/;"	m	class:glm::io::format_punct
delimeter	lib/glm/gtx/io.hpp	/^		struct delimeter$/;"	s	namespace:glm::io
delta	lib/stb/stb_image.h	/^   int    delta[17];   \/\/ old 'firstsymbol' - old 'firstcode'$/;"	m	struct:__anon59
dependencyCount	lib/vulkan/vulkan.h	/^    uint32_t                          dependencyCount;$/;"	m	struct:VkRenderPassCreateInfo
dependencyFlags	lib/vulkan/vulkan.h	/^    VkDependencyFlags       dependencyFlags;$/;"	m	struct:VkSubpassDependency
depth	lib/stb/stb_image.h	/^   int depth;$/;"	m	struct:__anon66
depth	lib/vulkan/vulkan.h	/^    float       depth;$/;"	m	struct:VkClearDepthStencilValue
depth	lib/vulkan/vulkan.h	/^    uint32_t    depth;$/;"	m	struct:VkExtent3D
depthBiasClamp	lib/vulkan/vulkan.h	/^    VkBool32    depthBiasClamp;$/;"	m	struct:VkPhysicalDeviceFeatures
depthBiasClamp	lib/vulkan/vulkan.h	/^    float                                      depthBiasClamp;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
depthBiasConstantFactor	lib/vulkan/vulkan.h	/^    float                                      depthBiasConstantFactor;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
depthBiasEnable	lib/vulkan/vulkan.h	/^    VkBool32                                   depthBiasEnable;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
depthBiasSlopeFactor	lib/vulkan/vulkan.h	/^    float                                      depthBiasSlopeFactor;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
depthBounds	lib/vulkan/vulkan.h	/^    VkBool32    depthBounds;$/;"	m	struct:VkPhysicalDeviceFeatures
depthBoundsTestEnable	lib/vulkan/vulkan.h	/^    VkBool32                                  depthBoundsTestEnable;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
depthClamp	lib/vulkan/vulkan.h	/^    VkBool32    depthClamp;$/;"	m	struct:VkPhysicalDeviceFeatures
depthClampEnable	lib/vulkan/vulkan.h	/^    VkBool32                                   depthClampEnable;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
depthCompareOp	lib/vulkan/vulkan.h	/^    VkCompareOp                               depthCompareOp;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
depthFailOp	lib/vulkan/vulkan.h	/^    VkStencilOp    depthFailOp;$/;"	m	struct:VkStencilOpState
depthPitch	lib/vulkan/vulkan.h	/^    VkDeviceSize    depthPitch;$/;"	m	struct:VkSubresourceLayout
depthStencil	lib/vulkan/vulkan.h	/^    VkClearDepthStencilValue    depthStencil;$/;"	m	union:VkClearValue
depthTestEnable	lib/vulkan/vulkan.h	/^    VkBool32                                  depthTestEnable;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
depthWriteEnable	lib/vulkan/vulkan.h	/^    VkBool32                                  depthWriteEnable;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
dequant	lib/stb/stb_image.h	/^   stbi_uc dequant[4][64];$/;"	m	struct:__anon60
description	lib/vulkan/vulkan.h	/^    char        description[VK_MAX_DESCRIPTION_SIZE];$/;"	m	struct:VkLayerProperties
descriptorCount	lib/vulkan/vulkan.h	/^    uint32_t                         descriptorCount;$/;"	m	struct:VkWriteDescriptorSet
descriptorCount	lib/vulkan/vulkan.h	/^    uint32_t              descriptorCount;$/;"	m	struct:VkDescriptorSetLayoutBinding
descriptorCount	lib/vulkan/vulkan.h	/^    uint32_t            descriptorCount;$/;"	m	struct:VkDescriptorPoolSize
descriptorCount	lib/vulkan/vulkan.h	/^    uint32_t           descriptorCount;$/;"	m	struct:VkCopyDescriptorSet
descriptorPool	lib/vulkan/vulkan.h	/^    VkDescriptorPool                descriptorPool;$/;"	m	struct:VkDescriptorSetAllocateInfo
descriptorSetCount	lib/vulkan/vulkan.h	/^    uint32_t                        descriptorSetCount;$/;"	m	struct:VkDescriptorSetAllocateInfo
descriptorType	lib/vulkan/vulkan.h	/^    VkDescriptorType                 descriptorType;$/;"	m	struct:VkWriteDescriptorSet
descriptorType	lib/vulkan/vulkan.h	/^    VkDescriptorType      descriptorType;$/;"	m	struct:VkDescriptorSetLayoutBinding
detail	lib/glm/detail/_noise.hpp	/^namespace detail$/;"	n	namespace:glm
detail	lib/glm/detail/_swizzle.hpp	/^	namespace detail$/;"	n	namespace:glm
detail	lib/glm/detail/_swizzle.hpp	/^namespace detail$/;"	n	namespace:glm
detail	lib/glm/detail/_vectorize.hpp	/^namespace detail$/;"	n	namespace:glm
detail	lib/glm/detail/func_matrix.hpp	/^namespace detail$/;"	n	namespace:glm
detail	lib/glm/detail/precision.hpp	/^namespace detail$/;"	n	namespace:glm
detail	lib/glm/detail/type_float.hpp	/^namespace detail$/;"	n	namespace:glm
detail	lib/glm/detail/type_gentype.hpp	/^namespace detail$/;"	n	namespace:glm
detail	lib/glm/detail/type_half.hpp	/^namespace detail$/;"	n	namespace:glm
detail	lib/glm/detail/type_int.hpp	/^namespace detail$/;"	n	namespace:glm
detail	lib/glm/detail/type_mat.hpp	/^namespace detail$/;"	n	namespace:glm
detail	lib/glm/detail/type_vec.hpp	/^namespace detail$/;"	n	namespace:glm
deviceExtensionsSupported	src/vulkan_manager.cpp	/^bool VulkanManager::deviceExtensionsSupported(const VkPhysicalDevice& physicalDevice) $/;"	f	class:VulkanManager
deviceID	lib/vulkan/vulkan.h	/^    uint32_t                            deviceID;$/;"	m	struct:VkPhysicalDeviceProperties
deviceName	lib/vulkan/vulkan.h	/^    char                                deviceName[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE];$/;"	m	struct:VkPhysicalDeviceProperties
deviceType	lib/vulkan/vulkan.h	/^    VkPhysicalDeviceType                deviceType;$/;"	m	struct:VkPhysicalDeviceProperties
device_info	lib/vulkan/vk_layer.h	/^    void *device_info;$/;"	m	struct:VkLayerDeviceInfo_
discreteQueuePriorities	lib/vulkan/vulkan.h	/^    uint32_t              discreteQueuePriorities;$/;"	m	struct:VkPhysicalDeviceLimits
display	lib/vulkan/vk_icd.h	/^    struct wl_display *display;$/;"	m	struct:__anon46	typeref:struct:__anon46::wl_display
display	lib/vulkan/vulkan.h	/^    VkDisplayKHR                  display;$/;"	m	struct:VkDisplayPropertiesKHR
display	lib/vulkan/vulkan.h	/^    struct wl_display*                display;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR	typeref:struct:VkWaylandSurfaceCreateInfoKHR::wl_display
displayMode	lib/vulkan/vk_icd.h	/^    VkDisplayModeKHR displayMode;$/;"	m	struct:__anon50
displayMode	lib/vulkan/vulkan.h	/^    VkDisplayModeKHR                  displayMode;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
displayMode	lib/vulkan/vulkan.h	/^    VkDisplayModeKHR              displayMode;$/;"	m	struct:VkDisplayModePropertiesKHR
displayName	lib/vulkan/vulkan.h	/^    const char*                   displayName;$/;"	m	struct:VkDisplayPropertiesKHR
dmat2	lib/glm/detail/type_mat.hpp	/^	typedef highp_dmat2x2		dmat2;$/;"	t	namespace:glm
dmat2x2	lib/glm/detail/type_mat.hpp	/^	typedef highp_dmat2x2		dmat2x2;$/;"	t	namespace:glm
dmat2x2	lib/glm/detail/type_mat.hpp	/^	typedef lowp_dmat2x2		dmat2x2;$/;"	t	namespace:glm
dmat2x2	lib/glm/detail/type_mat.hpp	/^	typedef mediump_dmat2x2		dmat2x2;$/;"	t	namespace:glm
dmat2x3	lib/glm/detail/type_mat.hpp	/^	typedef highp_dmat2x3		dmat2x3;$/;"	t	namespace:glm
dmat2x3	lib/glm/detail/type_mat.hpp	/^	typedef lowp_dmat2x3		dmat2x3;$/;"	t	namespace:glm
dmat2x3	lib/glm/detail/type_mat.hpp	/^	typedef mediump_dmat2x3		dmat2x3;$/;"	t	namespace:glm
dmat2x4	lib/glm/detail/type_mat.hpp	/^	typedef highp_dmat2x4		dmat2x4;$/;"	t	namespace:glm
dmat2x4	lib/glm/detail/type_mat.hpp	/^	typedef lowp_dmat2x4		dmat2x4;$/;"	t	namespace:glm
dmat2x4	lib/glm/detail/type_mat.hpp	/^	typedef mediump_dmat2x4		dmat2x4;$/;"	t	namespace:glm
dmat3	lib/glm/detail/type_mat.hpp	/^	typedef highp_dmat3x3		dmat3;$/;"	t	namespace:glm
dmat3x2	lib/glm/detail/type_mat.hpp	/^	typedef highp_dmat3x2		dmat3x2;$/;"	t	namespace:glm
dmat3x2	lib/glm/detail/type_mat.hpp	/^	typedef lowp_dmat3x2		dmat3x2;$/;"	t	namespace:glm
dmat3x2	lib/glm/detail/type_mat.hpp	/^	typedef mediump_dmat3x2		dmat3x2;$/;"	t	namespace:glm
dmat3x3	lib/glm/detail/type_mat.hpp	/^	typedef highp_dmat3x3		dmat3x3;$/;"	t	namespace:glm
dmat3x3	lib/glm/detail/type_mat.hpp	/^	typedef lowp_dmat3x3		dmat3x3;$/;"	t	namespace:glm
dmat3x3	lib/glm/detail/type_mat.hpp	/^	typedef mediump_dmat3x3		dmat3x3;$/;"	t	namespace:glm
dmat3x4	lib/glm/detail/type_mat.hpp	/^	typedef highp_dmat3x4		dmat3x4;$/;"	t	namespace:glm
dmat3x4	lib/glm/detail/type_mat.hpp	/^	typedef lowp_dmat3x4		dmat3x4;$/;"	t	namespace:glm
dmat3x4	lib/glm/detail/type_mat.hpp	/^	typedef mediump_dmat3x4		dmat3x4;$/;"	t	namespace:glm
dmat4	lib/glm/detail/type_mat.hpp	/^	typedef highp_dmat4x4		dmat4;$/;"	t	namespace:glm
dmat4x2	lib/glm/detail/type_mat.hpp	/^	typedef highp_dmat4x2		dmat4x2;$/;"	t	namespace:glm
dmat4x2	lib/glm/detail/type_mat.hpp	/^	typedef lowp_dmat4x2		dmat4x2;$/;"	t	namespace:glm
dmat4x2	lib/glm/detail/type_mat.hpp	/^	typedef mediump_dmat4x2		dmat4x2;$/;"	t	namespace:glm
dmat4x3	lib/glm/detail/type_mat.hpp	/^	typedef highp_dmat4x3		dmat4x3;$/;"	t	namespace:glm
dmat4x3	lib/glm/detail/type_mat.hpp	/^	typedef lowp_dmat4x3		dmat4x3;$/;"	t	namespace:glm
dmat4x3	lib/glm/detail/type_mat.hpp	/^	typedef mediump_dmat4x3		dmat4x3;$/;"	t	namespace:glm
dmat4x4	lib/glm/detail/type_mat.hpp	/^	typedef highp_dmat4x4		dmat4x4;$/;"	t	namespace:glm
dmat4x4	lib/glm/detail/type_mat.hpp	/^	typedef lowp_dmat4x4		dmat4x4;$/;"	t	namespace:glm
dmat4x4	lib/glm/detail/type_mat.hpp	/^	typedef mediump_dmat4x4		dmat4x4;$/;"	t	namespace:glm
double1	lib/glm/gtx/compatibility.hpp	/^	typedef double						double1;		\/\/!< \\brief double-precision floating-point vector with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double1x1	lib/glm/gtx/compatibility.hpp	/^	typedef double						double1x1;		\/\/!< \\brief double-precision floating-point matrix with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double2	lib/glm/gtx/compatibility.hpp	/^	typedef tvec2<double, highp>		double2;		\/\/!< \\brief double-precision floating-point vector with 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double2x2	lib/glm/gtx/compatibility.hpp	/^	typedef tmat2x2<double, highp>		double2x2;		\/\/!< \\brief double-precision floating-point matrix with 2 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double2x3	lib/glm/gtx/compatibility.hpp	/^	typedef tmat2x3<double, highp>		double2x3;		\/\/!< \\brief double-precision floating-point matrix with 2 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double2x4	lib/glm/gtx/compatibility.hpp	/^	typedef tmat2x4<double, highp>		double2x4;		\/\/!< \\brief double-precision floating-point matrix with 2 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double3	lib/glm/gtx/compatibility.hpp	/^	typedef tvec3<double, highp>		double3;		\/\/!< \\brief double-precision floating-point vector with 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double3x2	lib/glm/gtx/compatibility.hpp	/^	typedef tmat3x2<double, highp>		double3x2;		\/\/!< \\brief double-precision floating-point matrix with 3 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double3x3	lib/glm/gtx/compatibility.hpp	/^	typedef tmat3x3<double, highp>		double3x3;		\/\/!< \\brief double-precision floating-point matrix with 3 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double3x4	lib/glm/gtx/compatibility.hpp	/^	typedef tmat3x4<double, highp>		double3x4;		\/\/!< \\brief double-precision floating-point matrix with 3 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double4	lib/glm/gtx/compatibility.hpp	/^	typedef tvec4<double, highp>		double4;		\/\/!< \\brief double-precision floating-point vector with 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double4x2	lib/glm/gtx/compatibility.hpp	/^	typedef tmat4x2<double, highp>		double4x2;		\/\/!< \\brief double-precision floating-point matrix with 4 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double4x3	lib/glm/gtx/compatibility.hpp	/^	typedef tmat4x3<double, highp>		double4x3;		\/\/!< \\brief double-precision floating-point matrix with 4 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double4x4	lib/glm/gtx/compatibility.hpp	/^	typedef tmat4x4<double, highp>		double4x4;		\/\/!< \\brief double-precision floating-point matrix with 4 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
dpy	lib/vulkan/vk_icd.h	/^    Display *dpy;$/;"	m	struct:__anon49
dpy	lib/vulkan/vulkan.h	/^    Display*                       dpy;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR
dquat	lib/glm/fwd.hpp	/^	typedef highp_dquat			dquat;$/;"	t	namespace:glm
dquat	lib/glm/fwd.hpp	/^	typedef lowp_dquat			dquat;$/;"	t	namespace:glm
dquat	lib/glm/fwd.hpp	/^	typedef mediump_dquat		dquat;$/;"	t	namespace:glm
draw	src/vulkan_manager.cpp	/^void VulkanManager::draw() $/;"	f	class:VulkanManager
drawIndirectFirstInstance	lib/vulkan/vulkan.h	/^    VkBool32    drawIndirectFirstInstance;$/;"	m	struct:VkPhysicalDeviceFeatures
driverVersion	lib/vulkan/vulkan.h	/^    uint32_t                            driverVersion;$/;"	m	struct:VkPhysicalDeviceProperties
dstAccessMask	lib/vulkan/vulkan.h	/^    VkAccessFlags              dstAccessMask;$/;"	m	struct:VkImageMemoryBarrier
dstAccessMask	lib/vulkan/vulkan.h	/^    VkAccessFlags           dstAccessMask;$/;"	m	struct:VkSubpassDependency
dstAccessMask	lib/vulkan/vulkan.h	/^    VkAccessFlags      dstAccessMask;$/;"	m	struct:VkBufferMemoryBarrier
dstAccessMask	lib/vulkan/vulkan.h	/^    VkAccessFlags      dstAccessMask;$/;"	m	struct:VkMemoryBarrier
dstAlphaBlendFactor	lib/vulkan/vulkan.h	/^    VkBlendFactor            dstAlphaBlendFactor;$/;"	m	struct:VkPipelineColorBlendAttachmentState
dstArrayElement	lib/vulkan/vulkan.h	/^    uint32_t                         dstArrayElement;$/;"	m	struct:VkWriteDescriptorSet
dstArrayElement	lib/vulkan/vulkan.h	/^    uint32_t           dstArrayElement;$/;"	m	struct:VkCopyDescriptorSet
dstBinding	lib/vulkan/vulkan.h	/^    uint32_t                         dstBinding;$/;"	m	struct:VkWriteDescriptorSet
dstBinding	lib/vulkan/vulkan.h	/^    uint32_t           dstBinding;$/;"	m	struct:VkCopyDescriptorSet
dstColorBlendFactor	lib/vulkan/vulkan.h	/^    VkBlendFactor            dstColorBlendFactor;$/;"	m	struct:VkPipelineColorBlendAttachmentState
dstOffset	lib/vulkan/vulkan.h	/^    VkDeviceSize    dstOffset;$/;"	m	struct:VkBufferCopy
dstOffset	lib/vulkan/vulkan.h	/^    VkOffset3D                  dstOffset;$/;"	m	struct:VkImageCopy
dstOffset	lib/vulkan/vulkan.h	/^    VkOffset3D                  dstOffset;$/;"	m	struct:VkImageResolve
dstOffsets	lib/vulkan/vulkan.h	/^    VkOffset3D                  dstOffsets[2];$/;"	m	struct:VkImageBlit
dstQueueFamilyIndex	lib/vulkan/vulkan.h	/^    uint32_t                   dstQueueFamilyIndex;$/;"	m	struct:VkImageMemoryBarrier
dstQueueFamilyIndex	lib/vulkan/vulkan.h	/^    uint32_t           dstQueueFamilyIndex;$/;"	m	struct:VkBufferMemoryBarrier
dstRect	lib/vulkan/vulkan.h	/^    VkRect2D           dstRect;$/;"	m	struct:VkDisplayPresentInfoKHR
dstSet	lib/vulkan/vulkan.h	/^    VkDescriptorSet                  dstSet;$/;"	m	struct:VkWriteDescriptorSet
dstSet	lib/vulkan/vulkan.h	/^    VkDescriptorSet    dstSet;$/;"	m	struct:VkCopyDescriptorSet
dstStageMask	lib/vulkan/vulkan.h	/^    VkPipelineStageFlags    dstStageMask;$/;"	m	struct:VkSubpassDependency
dstSubpass	lib/vulkan/vulkan.h	/^    uint32_t                dstSubpass;$/;"	m	struct:VkSubpassDependency
dstSubresource	lib/vulkan/vulkan.h	/^    VkImageSubresourceLayers    dstSubresource;$/;"	m	struct:VkImageBlit
dstSubresource	lib/vulkan/vulkan.h	/^    VkImageSubresourceLayers    dstSubresource;$/;"	m	struct:VkImageCopy
dstSubresource	lib/vulkan/vulkan.h	/^    VkImageSubresourceLayers    dstSubresource;$/;"	m	struct:VkImageResolve
dual	lib/glm/gtx/dual_quaternion.hpp	/^		glm::tquat<T, P> real, dual;$/;"	m	struct:glm::tdualquat
dualSrcBlend	lib/vulkan/vulkan.h	/^    VkBool32    dualSrcBlend;$/;"	m	struct:VkPhysicalDeviceFeatures
dualquat	lib/glm/gtx/dual_quaternion.hpp	/^	typedef highp_fdualquat			dualquat;$/;"	t	namespace:glm
dualquat	lib/glm/gtx/dual_quaternion.hpp	/^	typedef lowp_fdualquat			dualquat;$/;"	t	namespace:glm
dualquat	lib/glm/gtx/dual_quaternion.hpp	/^	typedef mediump_fdualquat		dualquat;$/;"	t	namespace:glm
dvec1	lib/glm/gtc/vec1.hpp	/^	typedef highp_dvec1				dvec1;$/;"	t	namespace:glm
dvec1	lib/glm/gtc/vec1.hpp	/^	typedef lowp_dvec1				dvec1;$/;"	t	namespace:glm
dvec1	lib/glm/gtc/vec1.hpp	/^	typedef mediump_dvec1			dvec1;$/;"	t	namespace:glm
dvec2	lib/glm/detail/type_vec.hpp	/^	typedef highp_dvec2			dvec2;$/;"	t	namespace:glm
dvec2	lib/glm/detail/type_vec.hpp	/^	typedef lowp_dvec2			dvec2;$/;"	t	namespace:glm
dvec2	lib/glm/detail/type_vec.hpp	/^	typedef mediump_dvec2		dvec2;$/;"	t	namespace:glm
dvec3	lib/glm/detail/type_vec.hpp	/^	typedef highp_dvec3			dvec3;$/;"	t	namespace:glm
dvec3	lib/glm/detail/type_vec.hpp	/^	typedef lowp_dvec3			dvec3;$/;"	t	namespace:glm
dvec3	lib/glm/detail/type_vec.hpp	/^	typedef mediump_dvec3		dvec3;$/;"	t	namespace:glm
dvec4	lib/glm/detail/type_vec.hpp	/^	typedef highp_dvec4			dvec4;$/;"	t	namespace:glm
dvec4	lib/glm/detail/type_vec.hpp	/^	typedef lowp_dvec4			dvec4;$/;"	t	namespace:glm
dvec4	lib/glm/detail/type_vec.hpp	/^	typedef mediump_dvec4		dvec4;$/;"	t	namespace:glm
dword	lib/glm/gtx/raw_data.hpp	/^	typedef detail::uint32		dword;$/;"	t	namespace:glm
dynamicStateCount	lib/vulkan/vulkan.h	/^    uint32_t                             dynamicStateCount;$/;"	m	struct:VkPipelineDynamicStateCreateInfo
eflags	lib/stb/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon71
elem	lib/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T const& elem(size_t i) const{ return (reinterpret_cast<const T*>(_buffer))[i]; }$/;"	f	struct:glm::detail::_swizzle_base0
elem	lib/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T& elem(size_t i){ return (reinterpret_cast<T*>(_buffer))[i]; }$/;"	f	struct:glm::detail::_swizzle_base0
enableDebug	src/vulkan_manager.cpp	/^void VulkanManager::enableDebug() $/;"	f	class:VulkanManager
enabledExtensionCount	lib/vulkan/vulkan.h	/^    uint32_t                           enabledExtensionCount;$/;"	m	struct:VkDeviceCreateInfo
enabledExtensionCount	lib/vulkan/vulkan.h	/^    uint32_t                    enabledExtensionCount;$/;"	m	struct:VkInstanceCreateInfo
enabledLayerCount	lib/vulkan/vulkan.h	/^    uint32_t                           enabledLayerCount;$/;"	m	struct:VkDeviceCreateInfo
enabledLayerCount	lib/vulkan/vulkan.h	/^    uint32_t                    enabledLayerCount;$/;"	m	struct:VkInstanceCreateInfo
end	lib/glm/gtx/range.hpp	/^	inline typename genType::value_type * end(genType& v)$/;"	f	namespace:glm
end	lib/glm/gtx/range.hpp	/^	inline typename genType::value_type const * end(genType const & v)$/;"	f	class:glm::genType
endSingleTimeCommands	src/vulkan_manager.cpp	/^void VulkanManager::endSingleTimeCommands(VkCommandBuffer cmdBuf)$/;"	f	class:VulkanManager
engineVersion	lib/vulkan/vulkan.h	/^    uint32_t           engineVersion;$/;"	m	struct:VkApplicationInfo
eob_run	lib/stb/stb_image.h	/^   int            eob_run;$/;"	m	struct:__anon60
eof	lib/stb/stb_image.h	/^   int      (*eof)   (void *user);                       \/\/ returns nonzero if we are at end of file\/data$/;"	m	struct:__anon56
error	lib/vulkan/libspirv.h	/^  char* error;$/;"	m	struct:spv_diagnostic_t
execute	inc/task_manager.h	/^	void execute() {$/;"	f	class:MessageTask
expanded	lib/stb/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon66
ext_inst_type	lib/vulkan/libspirv.h	/^  spv_ext_inst_type_t ext_inst_type;$/;"	m	struct:spv_parsed_instruction_t
extensionName	lib/vulkan/vulkan.h	/^    char        extensionName[VK_MAX_EXTENSION_NAME_SIZE];$/;"	m	struct:VkExtensionProperties
extent	lib/vulkan/vulkan.h	/^    VkExtent2D    extent;$/;"	m	struct:VkRect2D
extent	lib/vulkan/vulkan.h	/^    VkExtent3D                  extent;$/;"	m	struct:VkImageCopy
extent	lib/vulkan/vulkan.h	/^    VkExtent3D                  extent;$/;"	m	struct:VkImageResolve
extent	lib/vulkan/vulkan.h	/^    VkExtent3D                 extent;$/;"	m	struct:VkSparseImageMemoryBind
extent	lib/vulkan/vulkan.h	/^    VkExtent3D               extent;$/;"	m	struct:VkImageCreateInfo
f32	lib/glm/fwd.hpp	/^	typedef highp_float32_t f32;$/;"	t	namespace:glm
f32	lib/glm/fwd.hpp	/^	typedef lowp_f32 f32;$/;"	t	namespace:glm
f32	lib/glm/fwd.hpp	/^	typedef mediump_float32 f32;$/;"	t	namespace:glm
f32	lib/glm/gtc/type_precision.hpp	/^	typedef float32 f32;$/;"	t	namespace:glm
f32mat1	lib/glm/gtx/number_precision.hpp	/^	typedef f32			f32mat1;	\/\/!< \\brief Single-precision floating-point scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
f32mat1x1	lib/glm/gtx/number_precision.hpp	/^	typedef f32			f32mat1x1;	\/\/!< \\brief Single-precision floating-point scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
f32mat2	lib/glm/fwd.hpp	/^	typedef f32mat2x2				f32mat2;$/;"	t	namespace:glm
f32mat2	lib/glm/fwd.hpp	/^	typedef lowp_f32mat2			f32mat2;$/;"	t	namespace:glm
f32mat2	lib/glm/fwd.hpp	/^	typedef mediump_f32mat2			f32mat2;$/;"	t	namespace:glm
f32mat2	lib/glm/gtc/type_precision.hpp	/^	typedef tmat2x2<f32, defaultp> f32mat2;$/;"	t	namespace:glm
f32mat2x2	lib/glm/fwd.hpp	/^	typedef highp_f32mat2x2			f32mat2x2;$/;"	t	namespace:glm
f32mat2x2	lib/glm/fwd.hpp	/^	typedef lowp_f32mat2x2			f32mat2x2;$/;"	t	namespace:glm
f32mat2x2	lib/glm/fwd.hpp	/^	typedef mediump_f32mat2x2		f32mat2x2;$/;"	t	namespace:glm
f32mat2x2	lib/glm/gtc/type_precision.hpp	/^	typedef tmat2x2<f32, defaultp> f32mat2x2;$/;"	t	namespace:glm
f32mat2x3	lib/glm/fwd.hpp	/^	typedef highp_f32mat2x3			f32mat2x3;$/;"	t	namespace:glm
f32mat2x3	lib/glm/fwd.hpp	/^	typedef lowp_f32mat2x3			f32mat2x3;$/;"	t	namespace:glm
f32mat2x3	lib/glm/fwd.hpp	/^	typedef mediump_f32mat2x3		f32mat2x3;$/;"	t	namespace:glm
f32mat2x3	lib/glm/gtc/type_precision.hpp	/^	typedef tmat2x3<f32, defaultp> f32mat2x3;$/;"	t	namespace:glm
f32mat2x4	lib/glm/fwd.hpp	/^	typedef highp_f32mat2x4			f32mat2x4;$/;"	t	namespace:glm
f32mat2x4	lib/glm/fwd.hpp	/^	typedef lowp_f32mat2x4			f32mat2x4;$/;"	t	namespace:glm
f32mat2x4	lib/glm/fwd.hpp	/^	typedef mediump_f32mat2x4		f32mat2x4;$/;"	t	namespace:glm
f32mat2x4	lib/glm/gtc/type_precision.hpp	/^	typedef tmat2x4<f32, defaultp> f32mat2x4;$/;"	t	namespace:glm
f32mat3	lib/glm/fwd.hpp	/^	typedef f32mat3x3				f32mat3;$/;"	t	namespace:glm
f32mat3	lib/glm/fwd.hpp	/^	typedef lowp_f32mat3			f32mat3;$/;"	t	namespace:glm
f32mat3	lib/glm/fwd.hpp	/^	typedef mediump_f32mat3			f32mat3;$/;"	t	namespace:glm
f32mat3	lib/glm/gtc/type_precision.hpp	/^	typedef tmat3x3<f32, defaultp> f32mat3;$/;"	t	namespace:glm
f32mat3x2	lib/glm/fwd.hpp	/^	typedef highp_f32mat3x2			f32mat3x2;$/;"	t	namespace:glm
f32mat3x2	lib/glm/fwd.hpp	/^	typedef lowp_f32mat3x2			f32mat3x2;$/;"	t	namespace:glm
f32mat3x2	lib/glm/fwd.hpp	/^	typedef mediump_f32mat3x2		f32mat3x2;$/;"	t	namespace:glm
f32mat3x2	lib/glm/gtc/type_precision.hpp	/^	typedef tmat3x2<f32, defaultp> f32mat3x2;$/;"	t	namespace:glm
f32mat3x3	lib/glm/fwd.hpp	/^	typedef highp_f32mat3x3			f32mat3x3;$/;"	t	namespace:glm
f32mat3x3	lib/glm/fwd.hpp	/^	typedef lowp_f32mat3x3			f32mat3x3;$/;"	t	namespace:glm
f32mat3x3	lib/glm/fwd.hpp	/^	typedef mediump_f32mat3x3		f32mat3x3;$/;"	t	namespace:glm
f32mat3x3	lib/glm/gtc/type_precision.hpp	/^	typedef tmat3x3<f32, defaultp> f32mat3x3;$/;"	t	namespace:glm
f32mat3x4	lib/glm/fwd.hpp	/^	typedef highp_f32mat3x4			f32mat3x4;$/;"	t	namespace:glm
f32mat3x4	lib/glm/fwd.hpp	/^	typedef lowp_f32mat3x4			f32mat3x4;$/;"	t	namespace:glm
f32mat3x4	lib/glm/fwd.hpp	/^	typedef mediump_f32mat3x4		f32mat3x4;$/;"	t	namespace:glm
f32mat3x4	lib/glm/gtc/type_precision.hpp	/^	typedef tmat3x4<f32, defaultp> f32mat3x4;$/;"	t	namespace:glm
f32mat4	lib/glm/fwd.hpp	/^	typedef f32mat4x4				f32mat4;$/;"	t	namespace:glm
f32mat4	lib/glm/fwd.hpp	/^	typedef lowp_f32mat4			f32mat4;$/;"	t	namespace:glm
f32mat4	lib/glm/fwd.hpp	/^	typedef mediump_f32mat4			f32mat4;$/;"	t	namespace:glm
f32mat4	lib/glm/gtc/type_precision.hpp	/^	typedef tmat4x4<f32, defaultp> f32mat4;$/;"	t	namespace:glm
f32mat4x2	lib/glm/fwd.hpp	/^	typedef highp_f32mat4x2			f32mat4x2;$/;"	t	namespace:glm
f32mat4x2	lib/glm/fwd.hpp	/^	typedef lowp_f32mat4x2			f32mat4x2;$/;"	t	namespace:glm
f32mat4x2	lib/glm/fwd.hpp	/^	typedef mediump_f32mat4x2		f32mat4x2;$/;"	t	namespace:glm
f32mat4x2	lib/glm/gtc/type_precision.hpp	/^	typedef tmat4x2<f32, defaultp> f32mat4x2;$/;"	t	namespace:glm
f32mat4x3	lib/glm/fwd.hpp	/^	typedef highp_f32mat4x3			f32mat4x3;$/;"	t	namespace:glm
f32mat4x3	lib/glm/fwd.hpp	/^	typedef lowp_f32mat4x3			f32mat4x3;$/;"	t	namespace:glm
f32mat4x3	lib/glm/fwd.hpp	/^	typedef mediump_f32mat4x3		f32mat4x3;$/;"	t	namespace:glm
f32mat4x3	lib/glm/gtc/type_precision.hpp	/^	typedef tmat4x3<f32, defaultp> f32mat4x3;$/;"	t	namespace:glm
f32mat4x4	lib/glm/fwd.hpp	/^	typedef highp_f32mat4x4			f32mat4x4;$/;"	t	namespace:glm
f32mat4x4	lib/glm/fwd.hpp	/^	typedef lowp_f32mat4x4			f32mat4x4;$/;"	t	namespace:glm
f32mat4x4	lib/glm/fwd.hpp	/^	typedef mediump_f32mat4x4		f32mat4x4;$/;"	t	namespace:glm
f32mat4x4	lib/glm/gtc/type_precision.hpp	/^	typedef tmat4x4<f32, defaultp> f32mat4x4;$/;"	t	namespace:glm
f32quat	lib/glm/fwd.hpp	/^	typedef highp_f32quat			f32quat;$/;"	t	namespace:glm
f32quat	lib/glm/fwd.hpp	/^	typedef lowp_f32quat			f32quat;$/;"	t	namespace:glm
f32quat	lib/glm/fwd.hpp	/^	typedef mediump_f32quat			f32quat;$/;"	t	namespace:glm
f32quat	lib/glm/gtc/type_precision.hpp	/^	typedef tquat<f32, defaultp> f32quat;$/;"	t	namespace:glm
f32vec1	lib/glm/fwd.hpp	/^	typedef highp_f32vec1			f32vec1;$/;"	t	namespace:glm
f32vec1	lib/glm/fwd.hpp	/^	typedef lowp_f32vec1			f32vec1;$/;"	t	namespace:glm
f32vec1	lib/glm/fwd.hpp	/^	typedef mediump_f32vec1			f32vec1;$/;"	t	namespace:glm
f32vec1	lib/glm/gtc/type_precision.hpp	/^	typedef tvec1<f32, defaultp> f32vec1;$/;"	t	namespace:glm
f32vec1	lib/glm/gtx/number_precision.hpp	/^	typedef f32			f32vec1;    \/\/!< \\brief Single-precision floating-point scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
f32vec2	lib/glm/fwd.hpp	/^	typedef highp_f32vec2			f32vec2;$/;"	t	namespace:glm
f32vec2	lib/glm/fwd.hpp	/^	typedef lowp_f32vec2			f32vec2;$/;"	t	namespace:glm
f32vec2	lib/glm/fwd.hpp	/^	typedef mediump_f32vec2			f32vec2;$/;"	t	namespace:glm
f32vec2	lib/glm/gtc/type_precision.hpp	/^	typedef tvec2<f32, defaultp> f32vec2;$/;"	t	namespace:glm
f32vec3	lib/glm/fwd.hpp	/^	typedef highp_f32vec3			f32vec3;$/;"	t	namespace:glm
f32vec3	lib/glm/fwd.hpp	/^	typedef lowp_f32vec3			f32vec3;$/;"	t	namespace:glm
f32vec3	lib/glm/fwd.hpp	/^	typedef mediump_f32vec3			f32vec3;$/;"	t	namespace:glm
f32vec3	lib/glm/gtc/type_precision.hpp	/^	typedef tvec3<f32, defaultp> f32vec3;$/;"	t	namespace:glm
f32vec4	lib/glm/fwd.hpp	/^	typedef highp_f32vec4			f32vec4;$/;"	t	namespace:glm
f32vec4	lib/glm/fwd.hpp	/^	typedef lowp_f32vec4			f32vec4;$/;"	t	namespace:glm
f32vec4	lib/glm/fwd.hpp	/^	typedef mediump_f32vec4			f32vec4;$/;"	t	namespace:glm
f32vec4	lib/glm/gtc/type_precision.hpp	/^	typedef tvec4<f32, defaultp> f32vec4;$/;"	t	namespace:glm
f64	lib/glm/fwd.hpp	/^	typedef highp_float64_t f64;$/;"	t	namespace:glm
f64	lib/glm/fwd.hpp	/^	typedef lowp_f64 f64;$/;"	t	namespace:glm
f64	lib/glm/fwd.hpp	/^	typedef mediump_float64 f64;$/;"	t	namespace:glm
f64	lib/glm/gtc/type_precision.hpp	/^	typedef float64 f64;$/;"	t	namespace:glm
f64mat1	lib/glm/gtx/number_precision.hpp	/^	typedef f64			f64mat1;	\/\/!< \\brief Double-precision floating-point scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
f64mat1x1	lib/glm/gtx/number_precision.hpp	/^	typedef f64			f64mat1x1;	\/\/!< \\brief Double-precision floating-point scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
f64mat2	lib/glm/fwd.hpp	/^	typedef f64mat2x2				f64mat2;$/;"	t	namespace:glm
f64mat2	lib/glm/fwd.hpp	/^	typedef lowp_f64mat2			f64mat2;$/;"	t	namespace:glm
f64mat2	lib/glm/fwd.hpp	/^	typedef mediump_f64mat2			f64mat2;$/;"	t	namespace:glm
f64mat2	lib/glm/gtc/type_precision.hpp	/^	typedef tmat2x2<f64, defaultp> f64mat2;$/;"	t	namespace:glm
f64mat2x2	lib/glm/fwd.hpp	/^	typedef highp_f64mat2x2			f64mat2x2;$/;"	t	namespace:glm
f64mat2x2	lib/glm/fwd.hpp	/^	typedef lowp_f64mat2x2			f64mat2x2;$/;"	t	namespace:glm
f64mat2x2	lib/glm/fwd.hpp	/^	typedef mediump_f64mat2x2		f64mat2x2;$/;"	t	namespace:glm
f64mat2x2	lib/glm/gtc/type_precision.hpp	/^	typedef tmat2x2<f64, defaultp> f64mat2x2;$/;"	t	namespace:glm
f64mat2x3	lib/glm/fwd.hpp	/^	typedef highp_f64mat2x3			f64mat2x3;$/;"	t	namespace:glm
f64mat2x3	lib/glm/fwd.hpp	/^	typedef lowp_f64mat2x3			f64mat2x3;$/;"	t	namespace:glm
f64mat2x3	lib/glm/fwd.hpp	/^	typedef mediump_f64mat2x3		f64mat2x3;$/;"	t	namespace:glm
f64mat2x3	lib/glm/gtc/type_precision.hpp	/^	typedef tmat2x3<f64, defaultp> f64mat2x3;$/;"	t	namespace:glm
f64mat2x4	lib/glm/fwd.hpp	/^	typedef highp_f64mat2x4			f64mat2x4;$/;"	t	namespace:glm
f64mat2x4	lib/glm/fwd.hpp	/^	typedef lowp_f64mat2x4			f64mat2x4;$/;"	t	namespace:glm
f64mat2x4	lib/glm/fwd.hpp	/^	typedef mediump_f64mat2x4		f64mat2x4;$/;"	t	namespace:glm
f64mat2x4	lib/glm/gtc/type_precision.hpp	/^	typedef tmat2x4<f64, defaultp> f64mat2x4;$/;"	t	namespace:glm
f64mat3	lib/glm/fwd.hpp	/^	typedef f64mat3x3				f64mat3;$/;"	t	namespace:glm
f64mat3	lib/glm/fwd.hpp	/^	typedef lowp_f64mat3			f64mat3;$/;"	t	namespace:glm
f64mat3	lib/glm/fwd.hpp	/^	typedef mediump_f64mat3			f64mat3;$/;"	t	namespace:glm
f64mat3	lib/glm/gtc/type_precision.hpp	/^	typedef tmat3x3<f64, defaultp> f64mat3;$/;"	t	namespace:glm
f64mat3x2	lib/glm/fwd.hpp	/^	typedef highp_f64mat3x2			f64mat3x2;$/;"	t	namespace:glm
f64mat3x2	lib/glm/fwd.hpp	/^	typedef lowp_f64mat3x2			f64mat3x2;$/;"	t	namespace:glm
f64mat3x2	lib/glm/fwd.hpp	/^	typedef mediump_f64mat3x2		f64mat3x2;$/;"	t	namespace:glm
f64mat3x2	lib/glm/gtc/type_precision.hpp	/^	typedef tmat3x2<f64, defaultp> f64mat3x2;$/;"	t	namespace:glm
f64mat3x3	lib/glm/fwd.hpp	/^	typedef highp_f64mat3x3			f64mat3x3;$/;"	t	namespace:glm
f64mat3x3	lib/glm/fwd.hpp	/^	typedef lowp_f64mat3x3			f64mat3x3;$/;"	t	namespace:glm
f64mat3x3	lib/glm/fwd.hpp	/^	typedef mediump_f64mat3x3		f64mat3x3;$/;"	t	namespace:glm
f64mat3x3	lib/glm/gtc/type_precision.hpp	/^	typedef tmat3x3<f64, defaultp> f64mat3x3;$/;"	t	namespace:glm
f64mat3x4	lib/glm/fwd.hpp	/^	typedef highp_f64mat3x4			f64mat3x4;$/;"	t	namespace:glm
f64mat3x4	lib/glm/fwd.hpp	/^	typedef lowp_f64mat3x4			f64mat3x4;$/;"	t	namespace:glm
f64mat3x4	lib/glm/fwd.hpp	/^	typedef mediump_f64mat3x4		f64mat3x4;$/;"	t	namespace:glm
f64mat3x4	lib/glm/gtc/type_precision.hpp	/^	typedef tmat3x4<f64, defaultp> f64mat3x4;$/;"	t	namespace:glm
f64mat4	lib/glm/fwd.hpp	/^	typedef f64mat4x4				f64mat4;$/;"	t	namespace:glm
f64mat4	lib/glm/fwd.hpp	/^	typedef lowp_f64mat4			f64mat4;$/;"	t	namespace:glm
f64mat4	lib/glm/fwd.hpp	/^	typedef mediump_f64mat4			f64mat4;$/;"	t	namespace:glm
f64mat4	lib/glm/gtc/type_precision.hpp	/^	typedef tmat4x4<f64, defaultp> f64mat4;$/;"	t	namespace:glm
f64mat4x2	lib/glm/fwd.hpp	/^	typedef highp_f64mat4x2			f64mat4x2;$/;"	t	namespace:glm
f64mat4x2	lib/glm/fwd.hpp	/^	typedef lowp_f64mat4x2			f64mat4x2;$/;"	t	namespace:glm
f64mat4x2	lib/glm/fwd.hpp	/^	typedef mediump_f64mat4x2		f64mat4x2;$/;"	t	namespace:glm
f64mat4x2	lib/glm/gtc/type_precision.hpp	/^	typedef tmat4x2<f64, defaultp> f64mat4x2;$/;"	t	namespace:glm
f64mat4x3	lib/glm/fwd.hpp	/^	typedef highp_f64mat4x3			f64mat4x3;$/;"	t	namespace:glm
f64mat4x3	lib/glm/fwd.hpp	/^	typedef lowp_f64mat4x3			f64mat4x3;$/;"	t	namespace:glm
f64mat4x3	lib/glm/fwd.hpp	/^	typedef mediump_f64mat4x3		f64mat4x3;$/;"	t	namespace:glm
f64mat4x3	lib/glm/gtc/type_precision.hpp	/^	typedef tmat4x3<f64, defaultp> f64mat4x3;$/;"	t	namespace:glm
f64mat4x4	lib/glm/fwd.hpp	/^	typedef highp_f64mat4x4			f64mat4x4;$/;"	t	namespace:glm
f64mat4x4	lib/glm/fwd.hpp	/^	typedef lowp_f64mat4x4			f64mat4x4;$/;"	t	namespace:glm
f64mat4x4	lib/glm/fwd.hpp	/^	typedef mediump_f64mat4x4		f64mat4x4;$/;"	t	namespace:glm
f64mat4x4	lib/glm/gtc/type_precision.hpp	/^	typedef tmat4x4<f64, defaultp> f64mat4x4;$/;"	t	namespace:glm
f64quat	lib/glm/fwd.hpp	/^	typedef highp_f64quat			f64quat;$/;"	t	namespace:glm
f64quat	lib/glm/fwd.hpp	/^	typedef lowp_f64quat			f64quat;$/;"	t	namespace:glm
f64quat	lib/glm/fwd.hpp	/^	typedef mediump_f64quat			f64quat;$/;"	t	namespace:glm
f64quat	lib/glm/gtc/type_precision.hpp	/^	typedef tquat<f64, defaultp> f64quat;$/;"	t	namespace:glm
f64vec1	lib/glm/fwd.hpp	/^	typedef highp_f64vec1			f64vec1;$/;"	t	namespace:glm
f64vec1	lib/glm/fwd.hpp	/^	typedef lowp_f64vec1			f64vec1;$/;"	t	namespace:glm
f64vec1	lib/glm/fwd.hpp	/^	typedef mediump_f64vec1			f64vec1;$/;"	t	namespace:glm
f64vec1	lib/glm/gtc/type_precision.hpp	/^	typedef tvec1<f64, defaultp> f64vec1;$/;"	t	namespace:glm
f64vec1	lib/glm/gtx/number_precision.hpp	/^	typedef f64			f64vec1;    \/\/!< \\brief Single-precision floating-point scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
f64vec2	lib/glm/fwd.hpp	/^	typedef highp_f64vec2			f64vec2;$/;"	t	namespace:glm
f64vec2	lib/glm/fwd.hpp	/^	typedef lowp_f64vec2			f64vec2;$/;"	t	namespace:glm
f64vec2	lib/glm/fwd.hpp	/^	typedef mediump_f64vec2			f64vec2;$/;"	t	namespace:glm
f64vec2	lib/glm/gtc/type_precision.hpp	/^	typedef tvec2<f64, defaultp> f64vec2;$/;"	t	namespace:glm
f64vec3	lib/glm/fwd.hpp	/^	typedef highp_f64vec3			f64vec3;$/;"	t	namespace:glm
f64vec3	lib/glm/fwd.hpp	/^	typedef lowp_f64vec3			f64vec3;$/;"	t	namespace:glm
f64vec3	lib/glm/fwd.hpp	/^	typedef mediump_f64vec3			f64vec3;$/;"	t	namespace:glm
f64vec3	lib/glm/gtc/type_precision.hpp	/^	typedef tvec3<f64, defaultp> f64vec3;$/;"	t	namespace:glm
f64vec4	lib/glm/fwd.hpp	/^	typedef highp_f64vec4			f64vec4;$/;"	t	namespace:glm
f64vec4	lib/glm/fwd.hpp	/^	typedef lowp_f64vec4			f64vec4;$/;"	t	namespace:glm
f64vec4	lib/glm/fwd.hpp	/^	typedef mediump_f64vec4			f64vec4;$/;"	t	namespace:glm
f64vec4	lib/glm/gtc/type_precision.hpp	/^	typedef tvec4<f64, defaultp> f64vec4;$/;"	t	namespace:glm
fade	lib/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec2<T, P> fade(tvec2<T, P> const & t)$/;"	f	namespace:glm::detail
fade	lib/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec3<T, P> fade(tvec3<T, P> const & t)$/;"	f	namespace:glm::detail
fade	lib/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec4<T, P> fade(tvec4<T, P> const & t)$/;"	f	namespace:glm::detail
failOp	lib/vulkan/vulkan.h	/^    VkStencilOp    failOp;$/;"	m	struct:VkStencilOpState
fast	lib/glm/detail/type_gentype.hpp	/^		fast,$/;"	e	enum:glm::profile
fast	lib/stb/stb_image.h	/^   stbi__uint16 fast[1 << STBI__ZFAST_BITS];$/;"	m	struct:__anon63
fast	lib/stb/stb_image.h	/^   stbi_uc  fast[1 << FAST_BITS];$/;"	m	struct:__anon59
fast_ac	lib/stb/stb_image.h	/^   stbi__int16 fast_ac[4][1 << FAST_BITS];$/;"	m	struct:__anon60
fdualquat	lib/glm/gtx/dual_quaternion.hpp	/^	typedef highp_fdualquat			fdualquat;$/;"	t	namespace:glm
fdualquat	lib/glm/gtx/dual_quaternion.hpp	/^	typedef lowp_fdualquat			fdualquat;$/;"	t	namespace:glm
fdualquat	lib/glm/gtx/dual_quaternion.hpp	/^	typedef mediump_fdualquat		fdualquat;$/;"	t	namespace:glm
fileManager	inc/file_manager.h	/^	FileManager(const FileManager& fileManager) = delete;$/;"	m	class:FileManager
fileManager	inc/file_manager.h	/^	void operator=(const FileManager& fileManager) = delete;$/;"	m	class:FileManager
fillModeNonSolid	lib/vulkan/vulkan.h	/^    VkBool32    fillModeNonSolid;$/;"	m	struct:VkPhysicalDeviceFeatures
fill_	lib/glm/gtx/io.hpp	/^			char_type       fill_;$/;"	m	class:glm::io::basic_state_saver
finalLayout	lib/vulkan/vulkan.h	/^    VkImageLayout                   finalLayout;$/;"	m	struct:VkAttachmentDescription
first	lib/stb/stb_image.h	/^   stbi_uc first;$/;"	m	struct:__anon70
firstIndex	lib/vulkan/vulkan.h	/^    uint32_t    firstIndex;$/;"	m	struct:VkDrawIndexedIndirectCommand
firstInstance	lib/vulkan/vulkan.h	/^    uint32_t    firstInstance;$/;"	m	struct:VkDrawIndexedIndirectCommand
firstInstance	lib/vulkan/vulkan.h	/^    uint32_t    firstInstance;$/;"	m	struct:VkDrawIndirectCommand
firstVertex	lib/vulkan/vulkan.h	/^    uint32_t    firstVertex;$/;"	m	struct:VkDrawIndirectCommand
first_row_filter	lib/stb/stb_image.h	/^static stbi_uc first_row_filter[5] =$/;"	v
firstcode	lib/stb/stb_image.h	/^   stbi__uint16 firstcode[16];$/;"	m	struct:__anon63
firstsymbol	lib/stb/stb_image.h	/^   stbi__uint16 firstsymbol[16];$/;"	m	struct:__anon63
flags	.ycm_extra_conf.py	/^flags = [$/;"	v
flags	lib/stb/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon71
flags	lib/vulkan/vulkan.h	/^    VkAndroidSurfaceCreateFlagsKHR    flags;$/;"	m	struct:VkAndroidSurfaceCreateInfoKHR
flags	lib/vulkan/vulkan.h	/^    VkAttachmentDescriptionFlags    flags;$/;"	m	struct:VkAttachmentDescription
flags	lib/vulkan/vulkan.h	/^    VkBufferCreateFlags    flags;$/;"	m	struct:VkBufferCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkBufferViewCreateFlags    flags;$/;"	m	struct:VkBufferViewCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkCommandBufferUsageFlags                flags;$/;"	m	struct:VkCommandBufferBeginInfo
flags	lib/vulkan/vulkan.h	/^    VkCommandPoolCreateFlags    flags;$/;"	m	struct:VkCommandPoolCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkDebugReportFlagsEXT           flags;$/;"	m	struct:VkDebugReportCallbackCreateInfoEXT
flags	lib/vulkan/vulkan.h	/^    VkDescriptorPoolCreateFlags    flags;$/;"	m	struct:VkDescriptorPoolCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkDescriptorSetLayoutCreateFlags       flags;$/;"	m	struct:VkDescriptorSetLayoutCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkDeviceCreateFlags                flags;$/;"	m	struct:VkDeviceCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkDeviceQueueCreateFlags    flags;$/;"	m	struct:VkDeviceQueueCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkDisplayModeCreateFlagsKHR    flags;$/;"	m	struct:VkDisplayModeCreateInfoKHR
flags	lib/vulkan/vulkan.h	/^    VkDisplaySurfaceCreateFlagsKHR    flags;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
flags	lib/vulkan/vulkan.h	/^    VkEventCreateFlags    flags;$/;"	m	struct:VkEventCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkFenceCreateFlags    flags;$/;"	m	struct:VkFenceCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkFramebufferCreateFlags    flags;$/;"	m	struct:VkFramebufferCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkImageCreateFlags       flags;$/;"	m	struct:VkImageCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkImageViewCreateFlags     flags;$/;"	m	struct:VkImageViewCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkInstanceCreateFlags       flags;$/;"	m	struct:VkInstanceCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkMemoryHeapFlags    flags;$/;"	m	struct:VkMemoryHeap
flags	lib/vulkan/vulkan.h	/^    VkMirSurfaceCreateFlagsKHR    flags;$/;"	m	struct:VkMirSurfaceCreateInfoKHR
flags	lib/vulkan/vulkan.h	/^    VkPipelineCacheCreateFlags    flags;$/;"	m	struct:VkPipelineCacheCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkPipelineColorBlendStateCreateFlags          flags;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkPipelineCreateFlags                            flags;$/;"	m	struct:VkGraphicsPipelineCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkPipelineCreateFlags              flags;$/;"	m	struct:VkComputePipelineCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkPipelineDepthStencilStateCreateFlags    flags;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkPipelineDynamicStateCreateFlags    flags;$/;"	m	struct:VkPipelineDynamicStateCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkPipelineInputAssemblyStateCreateFlags    flags;$/;"	m	struct:VkPipelineInputAssemblyStateCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkPipelineLayoutCreateFlags     flags;$/;"	m	struct:VkPipelineLayoutCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkPipelineMultisampleStateCreateFlags    flags;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkPipelineRasterizationStateCreateFlags    flags;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkPipelineShaderStageCreateFlags    flags;$/;"	m	struct:VkPipelineShaderStageCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkPipelineTessellationStateCreateFlags    flags;$/;"	m	struct:VkPipelineTessellationStateCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkPipelineVertexInputStateCreateFlags       flags;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkPipelineViewportStateCreateFlags    flags;$/;"	m	struct:VkPipelineViewportStateCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkQueryPoolCreateFlags           flags;$/;"	m	struct:VkQueryPoolCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkRenderPassCreateFlags           flags;$/;"	m	struct:VkRenderPassCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkSamplerCreateFlags    flags;$/;"	m	struct:VkSamplerCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkSemaphoreCreateFlags    flags;$/;"	m	struct:VkSemaphoreCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkShaderModuleCreateFlags    flags;$/;"	m	struct:VkShaderModuleCreateInfo
flags	lib/vulkan/vulkan.h	/^    VkSparseImageFormatFlags    flags;$/;"	m	struct:VkSparseImageFormatProperties
flags	lib/vulkan/vulkan.h	/^    VkSparseMemoryBindFlags    flags;$/;"	m	struct:VkSparseImageMemoryBind
flags	lib/vulkan/vulkan.h	/^    VkSparseMemoryBindFlags    flags;$/;"	m	struct:VkSparseMemoryBind
flags	lib/vulkan/vulkan.h	/^    VkSubpassDescriptionFlags       flags;$/;"	m	struct:VkSubpassDescription
flags	lib/vulkan/vulkan.h	/^    VkSwapchainCreateFlagsKHR        flags;$/;"	m	struct:VkSwapchainCreateInfoKHR
flags	lib/vulkan/vulkan.h	/^    VkWaylandSurfaceCreateFlagsKHR    flags;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR
flags	lib/vulkan/vulkan.h	/^    VkWin32SurfaceCreateFlagsKHR    flags;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR
flags	lib/vulkan/vulkan.h	/^    VkXcbSurfaceCreateFlagsKHR    flags;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR
flags	lib/vulkan/vulkan.h	/^    VkXlibSurfaceCreateFlagsKHR    flags;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR
flags_	lib/glm/gtx/io.hpp	/^			flags_type      flags_;$/;"	m	class:glm::io::basic_state_saver
flags_type	lib/glm/gtx/io.hpp	/^			typedef ::std::ios_base::fmtflags      flags_type;$/;"	t	class:glm::io::basic_state_saver
float1	lib/glm/gtx/compatibility.hpp	/^	typedef float						float1;			\/\/!< \\brief single-precision floating-point vector with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float1x1	lib/glm/gtx/compatibility.hpp	/^	typedef float						float1x1;		\/\/!< \\brief single-precision floating-point matrix with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float2	lib/glm/gtx/compatibility.hpp	/^	typedef tvec2<float, highp>		float2;			\/\/!< \\brief single-precision floating-point vector with 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float2fixed	lib/stb/stb_image.h	3072;"	d
float2fixed	lib/stb/stb_image.h	3100;"	d
float2x2	lib/glm/gtx/compatibility.hpp	/^	typedef tmat2x2<float, highp>		float2x2;		\/\/!< \\brief single-precision floating-point matrix with 2 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float2x3	lib/glm/gtx/compatibility.hpp	/^	typedef tmat2x3<float, highp>		float2x3;		\/\/!< \\brief single-precision floating-point matrix with 2 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float2x4	lib/glm/gtx/compatibility.hpp	/^	typedef tmat2x4<float, highp>		float2x4;		\/\/!< \\brief single-precision floating-point matrix with 2 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float3	lib/glm/gtx/compatibility.hpp	/^	typedef tvec3<float, highp>		float3;			\/\/!< \\brief single-precision floating-point vector with 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float32	lib/glm/detail/type_float.hpp	/^	typedef float				float32;$/;"	t	namespace:glm
float32	lib/glm/detail/type_float.hpp	/^	typedef float				float32;$/;"	t	namespace:glm::detail
float32	lib/glm/fwd.hpp	/^	typedef highp_float32 float32;$/;"	t	namespace:glm
float32	lib/glm/fwd.hpp	/^	typedef lowp_float32 float32;$/;"	t	namespace:glm
float32	lib/glm/fwd.hpp	/^	typedef mediump_float32 float32;$/;"	t	namespace:glm
float32	lib/glm/gtc/type_precision.hpp	/^	typedef detail::float32 float32;$/;"	t	namespace:glm
float32	lib/vulkan/vulkan.h	/^    float       float32[4];$/;"	m	union:VkClearColorValue
float32_t	lib/glm/fwd.hpp	/^	typedef highp_float32_t float32_t;$/;"	t	namespace:glm
float32_t	lib/glm/fwd.hpp	/^	typedef lowp_float32_t float32_t;$/;"	t	namespace:glm
float32_t	lib/glm/fwd.hpp	/^	typedef mediump_float32 float32_t;$/;"	t	namespace:glm
float32_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::float32 float32_t;$/;"	t	namespace:glm
float3x2	lib/glm/gtx/compatibility.hpp	/^	typedef tmat3x2<float, highp>		float3x2;		\/\/!< \\brief single-precision floating-point matrix with 3 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float3x3	lib/glm/gtx/compatibility.hpp	/^	typedef tmat3x3<float, highp>		float3x3;		\/\/!< \\brief single-precision floating-point matrix with 3 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float3x4	lib/glm/gtx/compatibility.hpp	/^	typedef tmat3x4<float, highp>		float3x4;		\/\/!< \\brief single-precision floating-point matrix with 3 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float4	lib/glm/gtx/compatibility.hpp	/^	typedef tvec4<float, highp>		float4;			\/\/!< \\brief single-precision floating-point vector with 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float4x2	lib/glm/gtx/compatibility.hpp	/^	typedef tmat4x2<float, highp>		float4x2;		\/\/!< \\brief single-precision floating-point matrix with 4 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float4x3	lib/glm/gtx/compatibility.hpp	/^	typedef tmat4x3<float, highp>		float4x3;		\/\/!< \\brief single-precision floating-point matrix with 4 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float4x4	lib/glm/gtx/compatibility.hpp	/^	typedef tmat4x4<float, highp>		float4x4;		\/\/!< \\brief single-precision floating-point matrix with 4 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float64	lib/glm/detail/type_float.hpp	/^	typedef double				float64;$/;"	t	namespace:glm
float64	lib/glm/detail/type_float.hpp	/^	typedef double				float64;$/;"	t	namespace:glm::detail
float64	lib/glm/fwd.hpp	/^	typedef highp_float64 float64;$/;"	t	namespace:glm
float64	lib/glm/fwd.hpp	/^	typedef lowp_float64 float64;$/;"	t	namespace:glm
float64	lib/glm/fwd.hpp	/^	typedef mediump_float64 float64;$/;"	t	namespace:glm
float64	lib/glm/gtc/type_precision.hpp	/^	typedef detail::float64 float64;$/;"	t	namespace:glm
float64_t	lib/glm/fwd.hpp	/^	typedef highp_float64_t float64_t;$/;"	t	namespace:glm
float64_t	lib/glm/fwd.hpp	/^	typedef lowp_float64_t float64_t;$/;"	t	namespace:glm
float64_t	lib/glm/fwd.hpp	/^	typedef mediump_float64 float64_t;$/;"	t	namespace:glm
float64_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::float64 float64_t;$/;"	t	namespace:glm
float_t	lib/glm/detail/type_float.hpp	/^	typedef highp_float			float_t;$/;"	t	namespace:glm
float_t	lib/glm/detail/type_float.hpp	/^	typedef lowp_float			float_t;$/;"	t	namespace:glm
float_t	lib/glm/detail/type_float.hpp	/^	typedef mediump_float		float_t;$/;"	t	namespace:glm
fmat2	lib/glm/fwd.hpp	/^	typedef fmat2x2					fmat2;$/;"	t	namespace:glm
fmat2	lib/glm/fwd.hpp	/^	typedef lowp_f32mat2			fmat2;$/;"	t	namespace:glm
fmat2	lib/glm/fwd.hpp	/^	typedef mediump_f32mat2			fmat2;$/;"	t	namespace:glm
fmat2	lib/glm/gtc/type_precision.hpp	/^	typedef tmat2x2<f32, defaultp> fmat2;$/;"	t	namespace:glm
fmat2x2	lib/glm/fwd.hpp	/^	typedef highp_f32mat2x2			fmat2x2;$/;"	t	namespace:glm
fmat2x2	lib/glm/fwd.hpp	/^	typedef lowp_f32mat2x2			fmat2x2;$/;"	t	namespace:glm
fmat2x2	lib/glm/fwd.hpp	/^	typedef mediump_f32mat2x2		fmat2x2;$/;"	t	namespace:glm
fmat2x2	lib/glm/gtc/type_precision.hpp	/^	typedef tmat2x2<f32, defaultp> fmat2x2;$/;"	t	namespace:glm
fmat2x3	lib/glm/fwd.hpp	/^	typedef highp_f32mat2x3			fmat2x3;$/;"	t	namespace:glm
fmat2x3	lib/glm/fwd.hpp	/^	typedef lowp_f32mat2x3			fmat2x3;$/;"	t	namespace:glm
fmat2x3	lib/glm/fwd.hpp	/^	typedef mediump_f32mat2x3		fmat2x3;$/;"	t	namespace:glm
fmat2x3	lib/glm/gtc/type_precision.hpp	/^	typedef tmat2x3<f32, defaultp> fmat2x3;$/;"	t	namespace:glm
fmat2x4	lib/glm/fwd.hpp	/^	typedef highp_f32mat2x4			fmat2x4;$/;"	t	namespace:glm
fmat2x4	lib/glm/fwd.hpp	/^	typedef lowp_f32mat2x4			fmat2x4;$/;"	t	namespace:glm
fmat2x4	lib/glm/fwd.hpp	/^	typedef mediump_f32mat2x4		fmat2x4;$/;"	t	namespace:glm
fmat2x4	lib/glm/gtc/type_precision.hpp	/^	typedef tmat2x4<f32, defaultp> fmat2x4;$/;"	t	namespace:glm
fmat3	lib/glm/fwd.hpp	/^	typedef fmat3x3					fmat3;$/;"	t	namespace:glm
fmat3	lib/glm/fwd.hpp	/^	typedef lowp_f32mat3			fmat3;$/;"	t	namespace:glm
fmat3	lib/glm/fwd.hpp	/^	typedef mediump_f32mat3			fmat3;$/;"	t	namespace:glm
fmat3	lib/glm/gtc/type_precision.hpp	/^	typedef tmat3x3<f32, defaultp> fmat3;$/;"	t	namespace:glm
fmat3x2	lib/glm/fwd.hpp	/^	typedef highp_f32mat3x2			fmat3x2;$/;"	t	namespace:glm
fmat3x2	lib/glm/fwd.hpp	/^	typedef lowp_f32mat3x2			fmat3x2;$/;"	t	namespace:glm
fmat3x2	lib/glm/fwd.hpp	/^	typedef mediump_f32mat3x2		fmat3x2;$/;"	t	namespace:glm
fmat3x2	lib/glm/gtc/type_precision.hpp	/^	typedef tmat3x2<f32, defaultp> fmat3x2;$/;"	t	namespace:glm
fmat3x3	lib/glm/fwd.hpp	/^	typedef highp_f32mat3x3			fmat3x3;$/;"	t	namespace:glm
fmat3x3	lib/glm/fwd.hpp	/^	typedef lowp_f32mat3x3			fmat3x3;$/;"	t	namespace:glm
fmat3x3	lib/glm/fwd.hpp	/^	typedef mediump_f32mat3x3		fmat3x3;$/;"	t	namespace:glm
fmat3x3	lib/glm/gtc/type_precision.hpp	/^	typedef tmat3x3<f32, defaultp> fmat3x3;$/;"	t	namespace:glm
fmat3x4	lib/glm/fwd.hpp	/^	typedef highp_f32mat3x4			fmat3x4;$/;"	t	namespace:glm
fmat3x4	lib/glm/fwd.hpp	/^	typedef lowp_f32mat3x4			fmat3x4;$/;"	t	namespace:glm
fmat3x4	lib/glm/fwd.hpp	/^	typedef mediump_f32mat3x4		fmat3x4;$/;"	t	namespace:glm
fmat3x4	lib/glm/gtc/type_precision.hpp	/^	typedef tmat3x4<f32, defaultp> fmat3x4;$/;"	t	namespace:glm
fmat4	lib/glm/fwd.hpp	/^	typedef fmat4x4					fmat4;$/;"	t	namespace:glm
fmat4	lib/glm/fwd.hpp	/^	typedef lowp_f32mat4			fmat4;$/;"	t	namespace:glm
fmat4	lib/glm/fwd.hpp	/^	typedef mediump_f32mat4			fmat4;$/;"	t	namespace:glm
fmat4	lib/glm/gtc/type_precision.hpp	/^	typedef tmat4x4<f32, defaultp> fmat4;$/;"	t	namespace:glm
fmat4x2	lib/glm/fwd.hpp	/^	typedef highp_f32mat4x2			fmat4x2;$/;"	t	namespace:glm
fmat4x2	lib/glm/fwd.hpp	/^	typedef lowp_f32mat4x2			fmat4x2;$/;"	t	namespace:glm
fmat4x2	lib/glm/fwd.hpp	/^	typedef mediump_f32mat4x2		fmat4x2;$/;"	t	namespace:glm
fmat4x2	lib/glm/gtc/type_precision.hpp	/^	typedef tmat4x2<f32, defaultp> fmat4x2;$/;"	t	namespace:glm
fmat4x3	lib/glm/fwd.hpp	/^	typedef highp_f32mat4x3			fmat4x3;$/;"	t	namespace:glm
fmat4x3	lib/glm/fwd.hpp	/^	typedef lowp_f32mat4x3			fmat4x3;$/;"	t	namespace:glm
fmat4x3	lib/glm/fwd.hpp	/^	typedef mediump_f32mat4x3		fmat4x3;$/;"	t	namespace:glm
fmat4x3	lib/glm/gtc/type_precision.hpp	/^	typedef tmat4x3<f32, defaultp> fmat4x3;$/;"	t	namespace:glm
fmat4x4	lib/glm/fwd.hpp	/^	typedef highp_f32mat4x4			fmat4x4;$/;"	t	namespace:glm
fmat4x4	lib/glm/fwd.hpp	/^	typedef lowp_f32mat4x4			fmat4x4;$/;"	t	namespace:glm
fmat4x4	lib/glm/fwd.hpp	/^	typedef mediump_f32mat4x4		fmat4x4;$/;"	t	namespace:glm
fmat4x4	lib/glm/gtc/type_precision.hpp	/^	typedef tmat4x4<f32, defaultp> fmat4x4;$/;"	t	namespace:glm
format	lib/vulkan/vulkan.h	/^    VkFormat                        format;$/;"	m	struct:VkAttachmentDescription
format	lib/vulkan/vulkan.h	/^    VkFormat                   format;$/;"	m	struct:VkBufferViewCreateInfo
format	lib/vulkan/vulkan.h	/^    VkFormat                   format;$/;"	m	struct:VkImageViewCreateInfo
format	lib/vulkan/vulkan.h	/^    VkFormat                 format;$/;"	m	struct:VkImageCreateInfo
format	lib/vulkan/vulkan.h	/^    VkFormat           format;$/;"	m	struct:VkSurfaceFormatKHR
format	lib/vulkan/vulkan.h	/^    VkFormat    format;$/;"	m	struct:VkVertexInputAttributeDescription
formatProperties	lib/vulkan/vulkan.h	/^    VkSparseImageFormatProperties    formatProperties;$/;"	m	struct:VkSparseImageMemoryRequirements
format_punct	lib/glm/gtx/io.hpp	/^		class format_punct : public std::locale::facet$/;"	c	namespace:glm::io
format_saver	lib/glm/gtx/io.hpp	/^		typedef basic_format_saver<char>     format_saver;$/;"	t	namespace:glm::io
formatted	lib/glm/gtx/io.hpp	/^			bool       formatted;$/;"	m	class:glm::io::format_punct
fquat	lib/glm/fwd.hpp	/^	typedef highp_fquat				fquat;$/;"	t	namespace:glm
fquat	lib/glm/fwd.hpp	/^	typedef lowp_f32quat			fquat;$/;"	t	namespace:glm
fquat	lib/glm/fwd.hpp	/^	typedef mediump_f32quat			fquat;$/;"	t	namespace:glm
fquat	lib/glm/fwd.hpp	/^	typedef quat				fquat;$/;"	t	namespace:glm
fragShaderModule	inc/vulkan_manager.h	/^	VkShaderModule fragShaderModule;$/;"	m	class:VulkanManager
fragmentStoresAndAtomics	lib/vulkan/vulkan.h	/^    VkBool32    fragmentStoresAndAtomics;$/;"	m	struct:VkPhysicalDeviceFeatures
framebuffer	lib/vulkan/vulkan.h	/^    VkFramebuffer                    framebuffer;$/;"	m	struct:VkCommandBufferInheritanceInfo
framebuffer	lib/vulkan/vulkan.h	/^    VkFramebuffer          framebuffer;$/;"	m	struct:VkRenderPassBeginInfo
framebufferColorSampleCounts	lib/vulkan/vulkan.h	/^    VkSampleCountFlags    framebufferColorSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits
framebufferDepthSampleCounts	lib/vulkan/vulkan.h	/^    VkSampleCountFlags    framebufferDepthSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits
framebufferNoAttachmentsSampleCounts	lib/vulkan/vulkan.h	/^    VkSampleCountFlags    framebufferNoAttachmentsSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits
framebufferStencilSampleCounts	lib/vulkan/vulkan.h	/^    VkSampleCountFlags    framebufferStencilSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits
front	lib/vulkan/vulkan.h	/^    VkStencilOpState                          front;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
frontFace	lib/vulkan/vulkan.h	/^    VkFrontFace                                frontFace;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
fullDrawIndexUint32	lib/vulkan/vulkan.h	/^    VkBool32    fullDrawIndexUint32;$/;"	m	struct:VkPhysicalDeviceFeatures
function	lib/vulkan/vk_layer.h	/^    VkLayerFunction function;$/;"	m	struct:__anon51
function	lib/vulkan/vk_layer.h	/^    VkLayerFunction function;$/;"	m	struct:__anon53
functor1	lib/glm/detail/_vectorize.hpp	/^	struct functor1<R, T, P, tvec1>$/;"	s	namespace:glm::detail
functor1	lib/glm/detail/_vectorize.hpp	/^	struct functor1<R, T, P, tvec2>$/;"	s	namespace:glm::detail
functor1	lib/glm/detail/_vectorize.hpp	/^	struct functor1<R, T, P, tvec3>$/;"	s	namespace:glm::detail
functor1	lib/glm/detail/_vectorize.hpp	/^	struct functor1<R, T, P, tvec4>$/;"	s	namespace:glm::detail
functor1	lib/glm/detail/_vectorize.hpp	/^	struct functor1{};$/;"	s	namespace:glm::detail
functor2	lib/glm/detail/_vectorize.hpp	/^	struct functor2<T, P, tvec1>$/;"	s	namespace:glm::detail
functor2	lib/glm/detail/_vectorize.hpp	/^	struct functor2<T, P, tvec2>$/;"	s	namespace:glm::detail
functor2	lib/glm/detail/_vectorize.hpp	/^	struct functor2<T, P, tvec3>$/;"	s	namespace:glm::detail
functor2	lib/glm/detail/_vectorize.hpp	/^	struct functor2<T, P, tvec4>$/;"	s	namespace:glm::detail
functor2	lib/glm/detail/_vectorize.hpp	/^	struct functor2{};$/;"	s	namespace:glm::detail
functor2_vec_sca	lib/glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<T, P, tvec1>$/;"	s	namespace:glm::detail
functor2_vec_sca	lib/glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<T, P, tvec2>$/;"	s	namespace:glm::detail
functor2_vec_sca	lib/glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<T, P, tvec3>$/;"	s	namespace:glm::detail
functor2_vec_sca	lib/glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<T, P, tvec4>$/;"	s	namespace:glm::detail
functor2_vec_sca	lib/glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca{};$/;"	s	namespace:glm::detail
fvec1	lib/glm/fwd.hpp	/^	typedef highp_f32vec1			fvec1;$/;"	t	namespace:glm
fvec1	lib/glm/fwd.hpp	/^	typedef lowp_f32vec1			fvec1;$/;"	t	namespace:glm
fvec1	lib/glm/fwd.hpp	/^	typedef mediump_f32vec1			fvec1;$/;"	t	namespace:glm
fvec1	lib/glm/gtc/type_precision.hpp	/^	typedef tvec1<float, defaultp> fvec1;$/;"	t	namespace:glm
fvec2	lib/glm/fwd.hpp	/^	typedef highp_f32vec2			fvec2;$/;"	t	namespace:glm
fvec2	lib/glm/fwd.hpp	/^	typedef lowp_f32vec2			fvec2;$/;"	t	namespace:glm
fvec2	lib/glm/fwd.hpp	/^	typedef mediump_f32vec2			fvec2;$/;"	t	namespace:glm
fvec2	lib/glm/gtc/type_precision.hpp	/^	typedef tvec2<float, defaultp> fvec2;$/;"	t	namespace:glm
fvec3	lib/glm/fwd.hpp	/^	typedef highp_f32vec3			fvec3;$/;"	t	namespace:glm
fvec3	lib/glm/fwd.hpp	/^	typedef lowp_f32vec3			fvec3;$/;"	t	namespace:glm
fvec3	lib/glm/fwd.hpp	/^	typedef mediump_f32vec3			fvec3;$/;"	t	namespace:glm
fvec3	lib/glm/gtc/type_precision.hpp	/^	typedef tvec3<float, defaultp> fvec3;$/;"	t	namespace:glm
fvec4	lib/glm/fwd.hpp	/^	typedef highp_f32vec4			fvec4;$/;"	t	namespace:glm
fvec4	lib/glm/fwd.hpp	/^	typedef lowp_f32vec4			fvec4;$/;"	t	namespace:glm
fvec4	lib/glm/fwd.hpp	/^	typedef mediump_f32vec4			fvec4;$/;"	t	namespace:glm
fvec4	lib/glm/gtc/type_precision.hpp	/^	typedef tvec4<float, defaultp> fvec4;$/;"	t	namespace:glm
g	lib/glm/detail/type_vec2.hpp	/^				struct{ T r, g; };$/;"	m	struct:glm::tvec2::__anon9::__anon11
g	lib/glm/detail/type_vec2.hpp	/^			union {T y, g, t;};$/;"	m	union:glm::tvec2::__anon14
g	lib/glm/detail/type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	m	struct:glm::tvec3::__anon17::__anon19
g	lib/glm/detail/type_vec3.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec3::__anon22
g	lib/glm/detail/type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::tvec4::__anon1::__anon3
g	lib/glm/detail/type_vec4.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec4::__anon6
g	lib/vulkan/vulkan.h	/^    VkComponentSwizzle    g;$/;"	m	struct:VkComponentMapping
genType	lib/glm/detail/type_gentype.hpp	/^	struct genType$/;"	s	namespace:glm::detail
geometryShader	lib/vulkan/vulkan.h	/^    VkBool32    geometryShader;$/;"	m	struct:VkPhysicalDeviceFeatures
getAspect	src/window.cpp	/^float Window::getAspect() const$/;"	f	class:Window
getAttrDesc	src/quad.cpp	/^std::array<VkVertexInputAttributeDescription, 2> Quad::getAttrDesc() $/;"	f	class:Quad
getAttrDesc	src/vulkan_manager.cpp	/^std::array<VkVertexInputAttributeDescription, 3> VulkanManager::getAttrDesc() $/;"	f	class:VulkanManager
getBinPath	src/file_manager.cpp	/^std::string FileManager::getBinPath() $/;"	f	class:FileManager
getBindingDesc	src/quad.cpp	/^VkVertexInputBindingDescription Quad::getBindingDesc()$/;"	f	class:Quad
getBindingDesc	src/vulkan_manager.cpp	/^VkVertexInputBindingDescription VulkanManager::getBindingDesc()$/;"	f	class:VulkanManager
getComputeQueueIndex	src/device_queue_indices.cpp	/^int DeviceQueueIndicies::getComputeQueueIndex()$/;"	f	class:DeviceQueueIndicies
getCurrentDir	inc/file_manager.h	15;"	d
getCurrentDir	inc/file_manager.h	18;"	d
getDepthFormat	src/vulkan_manager.cpp	/^VkFormat VulkanManager::getDepthFormat()$/;"	f	class:VulkanManager
getDeviceQueueFamilyIndices	src/vulkan_manager.cpp	/^DeviceQueueIndicies VulkanManager::getDeviceQueueFamilyIndices(const VkPhysicalDevice& physicalDevice)$/;"	f	class:VulkanManager
getExtensionNames	src/vulkan_manager.cpp	/^std::vector<const char*> VulkanManager::getExtensionNames() $/;"	f	class:VulkanManager
getExtent	src/vulkan_manager.cpp	/^VkExtent2D VulkanManager::getExtent(VkSurfaceCapabilitiesKHR& surfaceCapabilities, const Window& window)$/;"	f	class:VulkanManager
getFilePath	src/file_manager.cpp	/^std::string FileManager::getFilePath(const std::string& filename)$/;"	f	class:FileManager
getGraphicsQueueIndex	src/device_queue_indices.cpp	/^int DeviceQueueIndicies::getGraphicsQueueIndex()$/;"	f	class:DeviceQueueIndicies
getHeight	src/window.cpp	/^unsigned Window::getHeight() const $/;"	f	class:Window
getInputManager	src/window.cpp	/^InputManager& Window::getInputManager()$/;"	f	class:Window
getInstance	src/file_manager.cpp	/^FileManager& FileManager::getInstance()$/;"	f	class:FileManager
getMemoryType	src/vulkan_manager.cpp	/^uint32_t VulkanManager::getMemoryType(uint32_t typeFilter, VkMemoryPropertyFlags& flags)$/;"	f	class:VulkanManager
getPresentMode	src/vulkan_manager.cpp	/^VkPresentModeKHR VulkanManager::getPresentMode(const std::vector<VkPresentModeKHR>& presentModes) $/;"	f	class:VulkanManager
getResourcePath	src/file_manager.cpp	/^std::string FileManager::getResourcePath(std::string&& path) const $/;"	f	class:FileManager
getSupportedFormat	src/vulkan_manager.cpp	/^VkFormat VulkanManager::getSupportedFormat($/;"	f	class:VulkanManager
getSupportedQueueIndex	src/device_queue_indices.cpp	/^int DeviceQueueIndicies::getSupportedQueueIndex()$/;"	f	class:DeviceQueueIndicies
getSurfaceFormat	src/vulkan_manager.cpp	/^VkSurfaceFormatKHR VulkanManager::getSurfaceFormat(const std::vector<VkSurfaceFormatKHR>& surfaceFormats) $/;"	f	class:VulkanManager
getSwapChainDesc	src/vulkan_manager.cpp	/^VulkanManager::SwapChainDesc VulkanManager::getSwapChainDesc(const VkPhysicalDevice& physicalDevice, const VkSurfaceKHR& surface)$/;"	f	class:VulkanManager
getTaskManager	src/engine.cpp	/^TaskManager& Engine::getTaskManager() $/;"	f	class:Engine
getTransfersQueueIndex	src/device_queue_indices.cpp	/^int DeviceQueueIndicies::getTransfersQueueIndex()$/;"	f	class:DeviceQueueIndicies
getVkDevice	src/vulkan_manager.cpp	/^const VkDevice& VulkanManager::getVkDevice() const $/;"	f	class:VulkanManager
getVkExtensionProperties	src/vulkan_manager.cpp	/^std::vector<VkExtensionProperties> VulkanManager::getVkExtensionProperties() $/;"	f	class:VulkanManager
getVkExtensionPropertyNames	src/vulkan_manager.cpp	/^std::vector<std::string> VulkanManager::getVkExtensionPropertyNames(std::vector<VkExtensionProperties>& vkExtensionProperties)$/;"	f	class:VulkanManager
getVulkanManager	src/engine.cpp	/^VulkanManager& Engine::getVulkanManager()$/;"	f	class:Engine
getWidth	src/window.cpp	/^unsigned Window::getWidth() const  $/;"	f	class:Window
getWindow	src/engine.cpp	/^Window& Engine::getWindow()$/;"	f	class:Engine
glm	lib/glm/detail/_noise.hpp	/^namespace glm{$/;"	n
glm	lib/glm/detail/_swizzle.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/_swizzle.hpp	/^namespace glm{$/;"	n
glm	lib/glm/detail/_vectorize.hpp	/^namespace glm{$/;"	n
glm	lib/glm/detail/func_common.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/func_exponential.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/func_geometric.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/func_integer.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/func_matrix.hpp	/^namespace glm{$/;"	n
glm	lib/glm/detail/func_packing.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/func_trigonometric.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/func_vector_relational.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/glm.cpp	/^namespace glm$/;"	n	file:
glm	lib/glm/detail/precision.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/setup.hpp	/^	namespace glm$/;"	n
glm	lib/glm/detail/setup.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/type_float.hpp	/^namespace glm{$/;"	n
glm	lib/glm/detail/type_gentype.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/type_half.hpp	/^namespace glm{$/;"	n
glm	lib/glm/detail/type_int.hpp	/^namespace glm{$/;"	n
glm	lib/glm/detail/type_mat.hpp	/^namespace glm{$/;"	n
glm	lib/glm/detail/type_mat2x2.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/type_mat2x3.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/type_mat2x4.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/type_mat3x2.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/type_mat3x3.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/type_mat3x4.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/type_mat4x2.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/type_mat4x3.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/type_mat4x4.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/type_vec.hpp	/^namespace glm{$/;"	n
glm	lib/glm/detail/type_vec1.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/type_vec2.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/type_vec3.hpp	/^namespace glm$/;"	n
glm	lib/glm/detail/type_vec4.hpp	/^namespace glm$/;"	n
glm	lib/glm/fwd.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/bitfield.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/color_space.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/constants.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/epsilon.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/functions.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/integer.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/matrix_access.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/matrix_integer.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/matrix_inverse.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/matrix_transform.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/noise.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/packing.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/quaternion.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/random.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/reciprocal.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/round.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/type_aligned.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/type_precision.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/type_ptr.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/ulp.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtc/vec1.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/associated_min_max.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/bit.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/closest_point.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/color_space.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/color_space_YCoCg.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/common.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/compatibility.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/component_wise.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/dual_quaternion.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/euler_angles.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/extend.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/extended_min_max.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/fast_exponential.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/fast_square_root.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/fast_trigonometry.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/gradient_paint.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/handed_coordinate_space.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/integer.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/intersect.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/io.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/log_base.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/matrix_cross_product.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/matrix_decompose.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/matrix_interpolation.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/matrix_major_storage.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/matrix_operation.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/matrix_query.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/matrix_transform_2d.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/mixed_product.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/norm.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/normal.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/normalize_dot.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/number_precision.hpp	/^namespace glm{$/;"	n
glm	lib/glm/gtx/optimum_pow.hpp	/^namespace glm{$/;"	n
glm	lib/glm/gtx/orthonormalize.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/perpendicular.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/polar_coordinates.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/projection.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/quaternion.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/range.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/raw_data.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/rotate_normalized_axis.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/rotate_vector.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/scalar_multiplication.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/scalar_relational.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/spline.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/std_based_type.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/string_cast.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/transform.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/transform2.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/type_aligned.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/type_trait.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/vector_angle.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/vector_query.hpp	/^namespace glm$/;"	n
glm	lib/glm/gtx/wrap.hpp	/^namespace glm$/;"	n
glm	lib/glm/mat2x2.hpp	/^namespace glm$/;"	n
glm	lib/glm/mat2x3.hpp	/^namespace glm$/;"	n
glm	lib/glm/mat2x4.hpp	/^namespace glm$/;"	n
glm	lib/glm/mat3x2.hpp	/^namespace glm$/;"	n
glm	lib/glm/mat3x3.hpp	/^namespace glm$/;"	n
glm	lib/glm/mat3x4.hpp	/^namespace glm$/;"	n
glm	lib/glm/mat4x2.hpp	/^namespace glm$/;"	n
glm	lib/glm/mat4x3.hpp	/^namespace glm$/;"	n
glm	lib/glm/mat4x4.hpp	/^namespace glm$/;"	n
glm_dvec4	lib/glm/simd/platform.h	/^	typedef __m256d		glm_dvec4;$/;"	t
glm_i128_interleave	lib/glm/simd/integer.h	/^GLM_FUNC_QUALIFIER glm_uvec4 glm_i128_interleave(glm_uvec4 x)$/;"	f
glm_i128_interleave2	lib/glm/simd/integer.h	/^GLM_FUNC_QUALIFIER glm_uvec4 glm_i128_interleave2(glm_uvec4 x, glm_uvec4 y)$/;"	f
glm_i64vec4	lib/glm/simd/platform.h	/^	typedef __m256i		glm_i64vec4;$/;"	t
glm_ivec4	lib/glm/simd/platform.h	/^	typedef __m128i		glm_ivec4;$/;"	t
glm_ivec4_abs	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_ivec4 glm_ivec4_abs(glm_ivec4 x)$/;"	f
glm_mat4_add	lib/glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_add(glm_vec4 const in1[4], glm_vec4 const in2[4], glm_vec4 out[4])$/;"	f
glm_mat4_determinant	lib/glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_determinant(glm_vec4 const m[4])$/;"	f
glm_mat4_determinant_highp	lib/glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_determinant_highp(glm_vec4 const in[4])$/;"	f
glm_mat4_determinant_lowp	lib/glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_determinant_lowp(glm_vec4 const m[4])$/;"	f
glm_mat4_inverse	lib/glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_inverse(glm_vec4 const in[4], glm_vec4 out[4])$/;"	f
glm_mat4_inverse_lowp	lib/glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_inverse_lowp(glm_vec4 const in[4], glm_vec4 out[4])$/;"	f
glm_mat4_matrixCompMult	lib/glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_matrixCompMult(glm_vec4 const in1[4], glm_vec4 const in2[4], glm_vec4 out[4])$/;"	f
glm_mat4_mul	lib/glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_mul(glm_vec4 const in1[4], glm_vec4 const in2[4], glm_vec4 out[4])$/;"	f
glm_mat4_mul_vec4	lib/glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_mul_vec4(glm_vec4 const m[4], glm_vec4 v)$/;"	f
glm_mat4_outerProduct	lib/glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_outerProduct(__m128 const & c, __m128 const & r, __m128 out[4])$/;"	f
glm_mat4_sub	lib/glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_sub(glm_vec4 const in1[4], glm_vec4 const in2[4], glm_vec4 out[4])$/;"	f
glm_mat4_transpose	lib/glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_transpose(glm_vec4 const in[4], glm_vec4 out[4])$/;"	f
glm_u64vec4	lib/glm/simd/platform.h	/^	typedef __m256i		glm_u64vec4;$/;"	t
glm_uvec4	lib/glm/simd/platform.h	/^	typedef __m128i		glm_uvec4;$/;"	t
glm_vec1_add	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec1_add(glm_vec4 a, glm_vec4 b)$/;"	f
glm_vec1_div	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec1_div(glm_vec4 a, glm_vec4 b)$/;"	f
glm_vec1_dot	lib/glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec1_dot(glm_vec4 v1, glm_vec4 v2)$/;"	f
glm_vec1_fma	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec1_fma(glm_vec4 a, glm_vec4 b, glm_vec4 c)$/;"	f
glm_vec1_mul	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec1_mul(glm_vec4 a, glm_vec4 b)$/;"	f
glm_vec1_sqrt_lowp	lib/glm/simd/exponential.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec1_sqrt_lowp(glm_vec4 x)$/;"	f
glm_vec1_sub	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec1_sub(glm_vec4 a, glm_vec4 b)$/;"	f
glm_vec4	lib/glm/simd/platform.h	/^	typedef __m128		glm_vec4;$/;"	t
glm_vec4_abs	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_abs(glm_vec4 x)$/;"	f
glm_vec4_add	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_add(glm_vec4 a, glm_vec4 b)$/;"	f
glm_vec4_ceil	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_ceil(glm_vec4 x)$/;"	f
glm_vec4_clamp	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_clamp(glm_vec4 v, glm_vec4 minVal, glm_vec4 maxVal)$/;"	f
glm_vec4_cross	lib/glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_cross(glm_vec4 v1, glm_vec4 v2)$/;"	f
glm_vec4_distance	lib/glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_distance(glm_vec4 p0, glm_vec4 p1)$/;"	f
glm_vec4_div	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_div(glm_vec4 a, glm_vec4 b)$/;"	f
glm_vec4_div_lowp	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_div_lowp(glm_vec4 a, glm_vec4 b)$/;"	f
glm_vec4_dot	lib/glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_dot(glm_vec4 v1, glm_vec4 v2)$/;"	f
glm_vec4_faceforward	lib/glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_faceforward(glm_vec4 N, glm_vec4 I, glm_vec4 Nref)$/;"	f
glm_vec4_floor	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_floor(glm_vec4 x)$/;"	f
glm_vec4_fma	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_fma(glm_vec4 a, glm_vec4 b, glm_vec4 c)$/;"	f
glm_vec4_fract	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_fract(glm_vec4 x)$/;"	f
glm_vec4_inf	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_inf(glm_vec4 x)$/;"	f
glm_vec4_length	lib/glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_length(glm_vec4 x)$/;"	f
glm_vec4_mix	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_mix(glm_vec4 v1, glm_vec4 v2, glm_vec4 a)$/;"	f
glm_vec4_mod	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_mod(glm_vec4 x, glm_vec4 y)$/;"	f
glm_vec4_mul	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_mul(glm_vec4 a, glm_vec4 b)$/;"	f
glm_vec4_mul_mat4	lib/glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER __m128 glm_vec4_mul_mat4(glm_vec4 v, glm_vec4 const m[4])$/;"	f
glm_vec4_nan	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_nan(glm_vec4 x)$/;"	f
glm_vec4_normalize	lib/glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_normalize(glm_vec4 v)$/;"	f
glm_vec4_reflect	lib/glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_reflect(glm_vec4 I, glm_vec4 N)$/;"	f
glm_vec4_refract	lib/glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER __m128 glm_vec4_refract(glm_vec4 I, glm_vec4 N, glm_vec4 eta)$/;"	f
glm_vec4_round	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_round(glm_vec4 x)$/;"	f
glm_vec4_roundEven	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_roundEven(glm_vec4 x)$/;"	f
glm_vec4_sign	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_sign(glm_vec4 x)$/;"	f
glm_vec4_smoothstep	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_smoothstep(glm_vec4 edge0, glm_vec4 edge1, glm_vec4 x)$/;"	f
glm_vec4_sqrt_lowp	lib/glm/simd/exponential.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_sqrt_lowp(glm_vec4 x)$/;"	f
glm_vec4_step	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_step(glm_vec4 edge, glm_vec4 x)$/;"	f
glm_vec4_sub	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_sub(glm_vec4 a, glm_vec4 b)$/;"	f
glm_vec4_swizzle_xyzw	lib/glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_swizzle_xyzw(glm_vec4 a)$/;"	f
globalAlpha	lib/vulkan/vk_icd.h	/^    float globalAlpha;$/;"	m	struct:__anon50
globalAlpha	lib/vulkan/vulkan.h	/^    float                             globalAlpha;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
graphicsIndexSet	src/device_queue_indices.cpp	/^bool DeviceQueueIndicies::graphicsIndexSet() $/;"	f	class:DeviceQueueIndicies
gtx	lib/glm/gtx/number_precision.hpp	/^namespace gtx$/;"	n	namespace:glm
gtx	lib/glm/gtx/optimum_pow.hpp	/^namespace gtx$/;"	n	namespace:glm
h	lib/stb/stb_image.h	/^      int h,v;$/;"	m	struct:__anon60::__anon61
h	lib/stb/stb_image.h	/^   int w,h;$/;"	m	struct:__anon71
h2	lib/stb/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon60::__anon61
ha	lib/stb/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon60::__anon61
hash	lib/glm/gtx/hash.hpp	/^	struct hash<glm::tdualquat<T,P> >$/;"	s	namespace:std
hash	lib/glm/gtx/hash.hpp	/^	struct hash<glm::tmat2x2<T,P> >$/;"	s	namespace:std
hash	lib/glm/gtx/hash.hpp	/^	struct hash<glm::tmat2x3<T,P> >$/;"	s	namespace:std
hash	lib/glm/gtx/hash.hpp	/^	struct hash<glm::tmat2x4<T,P> >$/;"	s	namespace:std
hash	lib/glm/gtx/hash.hpp	/^	struct hash<glm::tmat3x2<T,P> >$/;"	s	namespace:std
hash	lib/glm/gtx/hash.hpp	/^	struct hash<glm::tmat3x3<T,P> >$/;"	s	namespace:std
hash	lib/glm/gtx/hash.hpp	/^	struct hash<glm::tmat3x4<T,P> >$/;"	s	namespace:std
hash	lib/glm/gtx/hash.hpp	/^	struct hash<glm::tmat4x2<T,P> >$/;"	s	namespace:std
hash	lib/glm/gtx/hash.hpp	/^	struct hash<glm::tmat4x3<T,P> >$/;"	s	namespace:std
hash	lib/glm/gtx/hash.hpp	/^	struct hash<glm::tmat4x4<T,P> >$/;"	s	namespace:std
hash	lib/glm/gtx/hash.hpp	/^	struct hash<glm::tquat<T,P>>$/;"	s	namespace:std
hash	lib/glm/gtx/hash.hpp	/^	struct hash<glm::tvec1<T,P> >$/;"	s	namespace:std
hash	lib/glm/gtx/hash.hpp	/^	struct hash<glm::tvec2<T,P> >$/;"	s	namespace:std
hash	lib/glm/gtx/hash.hpp	/^	struct hash<glm::tvec3<T,P> >$/;"	s	namespace:std
hash	lib/glm/gtx/hash.hpp	/^	struct hash<glm::tvec4<T,P> >$/;"	s	namespace:std
hd	lib/stb/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon60::__anon61
hdata	lib/glm/detail/type_half.hpp	/^	typedef short hdata;$/;"	t	namespace:glm::detail
heapIndex	lib/vulkan/vulkan.h	/^    uint32_t                 heapIndex;$/;"	m	struct:VkMemoryType
height	lib/vulkan/vulkan.h	/^    float    height;$/;"	m	struct:VkViewport
height	lib/vulkan/vulkan.h	/^    uint32_t                    height;$/;"	m	struct:VkFramebufferCreateInfo
height	lib/vulkan/vulkan.h	/^    uint32_t    height;$/;"	m	struct:VkExtent2D
height	lib/vulkan/vulkan.h	/^    uint32_t    height;$/;"	m	struct:VkExtent3D
highp	lib/glm/detail/precision.hpp	/^		highp = packed_highp,$/;"	e	enum:glm::precision
highp_bvec1	lib/glm/gtc/vec1.hpp	/^	typedef highp_bvec1_t			highp_bvec1;$/;"	t	namespace:glm
highp_bvec1_t	lib/glm/detail/type_vec.hpp	/^	typedef tvec1<bool, highp>		highp_bvec1_t;$/;"	t	namespace:glm
highp_bvec2	lib/glm/detail/type_vec.hpp	/^	typedef tvec2<bool, highp>		highp_bvec2;$/;"	t	namespace:glm
highp_bvec3	lib/glm/detail/type_vec.hpp	/^	typedef tvec3<bool, highp>		highp_bvec3;$/;"	t	namespace:glm
highp_bvec4	lib/glm/detail/type_vec.hpp	/^	typedef tvec4<bool, highp>		highp_bvec4;$/;"	t	namespace:glm
highp_ddualquat	lib/glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<double, highp>	highp_ddualquat;$/;"	t	namespace:glm
highp_dmat2	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x2<double, highp>		highp_dmat2;$/;"	t	namespace:glm
highp_dmat2x2	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x2<double, highp>		highp_dmat2x2;$/;"	t	namespace:glm
highp_dmat2x3	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x3<double, highp>		highp_dmat2x3;$/;"	t	namespace:glm
highp_dmat2x4	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x4<double, highp>		highp_dmat2x4;$/;"	t	namespace:glm
highp_dmat3	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x3<double, highp>		highp_dmat3;$/;"	t	namespace:glm
highp_dmat3x2	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x2<double, highp>		highp_dmat3x2;$/;"	t	namespace:glm
highp_dmat3x3	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x3<double, highp>		highp_dmat3x3;$/;"	t	namespace:glm
highp_dmat3x4	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x4<double, highp>		highp_dmat3x4;$/;"	t	namespace:glm
highp_dmat4	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x4<double, highp>		highp_dmat4;$/;"	t	namespace:glm
highp_dmat4x2	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x2<double, highp>		highp_dmat4x2;$/;"	t	namespace:glm
highp_dmat4x3	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x3<double, highp>		highp_dmat4x3;$/;"	t	namespace:glm
highp_dmat4x4	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x4<double, highp>		highp_dmat4x4;$/;"	t	namespace:glm
highp_dquat	lib/glm/fwd.hpp	/^	typedef tquat<double, highp>	highp_dquat;$/;"	t	namespace:glm
highp_dualquat	lib/glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, highp>		highp_dualquat;$/;"	t	namespace:glm
highp_dvec1	lib/glm/gtc/vec1.hpp	/^	typedef highp_dvec1_t			highp_dvec1;$/;"	t	namespace:glm
highp_dvec1_t	lib/glm/detail/type_vec.hpp	/^	typedef tvec1<double, highp>	highp_dvec1_t;$/;"	t	namespace:glm
highp_dvec2	lib/glm/detail/type_vec.hpp	/^	typedef tvec2<double, highp>	highp_dvec2;$/;"	t	namespace:glm
highp_dvec3	lib/glm/detail/type_vec.hpp	/^	typedef tvec3<double, highp>	highp_dvec3;$/;"	t	namespace:glm
highp_dvec4	lib/glm/detail/type_vec.hpp	/^	typedef tvec4<double, highp>	highp_dvec4;$/;"	t	namespace:glm
highp_f32	lib/glm/fwd.hpp	/^	typedef float32 highp_f32;$/;"	t	namespace:glm
highp_f32mat2	lib/glm/fwd.hpp	/^	typedef highp_f32mat2x2 highp_f32mat2;$/;"	t	namespace:glm
highp_f32mat2x2	lib/glm/fwd.hpp	/^	typedef tmat2x2<f32, highp> highp_f32mat2x2;$/;"	t	namespace:glm
highp_f32mat2x3	lib/glm/fwd.hpp	/^	typedef tmat2x3<f32, highp> highp_f32mat2x3;$/;"	t	namespace:glm
highp_f32mat2x4	lib/glm/fwd.hpp	/^	typedef tmat2x4<f32, highp> highp_f32mat2x4;$/;"	t	namespace:glm
highp_f32mat3	lib/glm/fwd.hpp	/^	typedef highp_f32mat3x3 highp_f32mat3;$/;"	t	namespace:glm
highp_f32mat3x2	lib/glm/fwd.hpp	/^	typedef tmat3x2<f32, highp> highp_f32mat3x2;$/;"	t	namespace:glm
highp_f32mat3x3	lib/glm/fwd.hpp	/^	typedef tmat3x3<f32, highp> highp_f32mat3x3;$/;"	t	namespace:glm
highp_f32mat3x4	lib/glm/fwd.hpp	/^	typedef tmat3x4<f32, highp> highp_f32mat3x4;$/;"	t	namespace:glm
highp_f32mat4	lib/glm/fwd.hpp	/^	typedef highp_f32mat4x4 highp_f32mat4;$/;"	t	namespace:glm
highp_f32mat4x2	lib/glm/fwd.hpp	/^	typedef tmat4x2<f32, highp> highp_f32mat4x2;$/;"	t	namespace:glm
highp_f32mat4x3	lib/glm/fwd.hpp	/^	typedef tmat4x3<f32, highp> highp_f32mat4x3;$/;"	t	namespace:glm
highp_f32mat4x4	lib/glm/fwd.hpp	/^	typedef tmat4x4<f32, highp> highp_f32mat4x4;$/;"	t	namespace:glm
highp_f32quat	lib/glm/fwd.hpp	/^	typedef tquat<f32, highp> highp_f32quat;$/;"	t	namespace:glm
highp_f32vec1	lib/glm/fwd.hpp	/^	typedef tvec1<f32, highp> highp_f32vec1;$/;"	t	namespace:glm
highp_f32vec2	lib/glm/fwd.hpp	/^	typedef tvec2<f32, highp> highp_f32vec2;$/;"	t	namespace:glm
highp_f32vec3	lib/glm/fwd.hpp	/^	typedef tvec3<f32, highp> highp_f32vec3;$/;"	t	namespace:glm
highp_f32vec4	lib/glm/fwd.hpp	/^	typedef tvec4<f32, highp> highp_f32vec4;$/;"	t	namespace:glm
highp_f64	lib/glm/fwd.hpp	/^	typedef float64 highp_f64;$/;"	t	namespace:glm
highp_f64mat2	lib/glm/fwd.hpp	/^	typedef highp_f64mat2x2 highp_f64mat2;$/;"	t	namespace:glm
highp_f64mat2x2	lib/glm/fwd.hpp	/^	typedef tmat2x2<f64, highp> highp_f64mat2x2;$/;"	t	namespace:glm
highp_f64mat2x3	lib/glm/fwd.hpp	/^	typedef tmat2x3<f64, highp> highp_f64mat2x3;$/;"	t	namespace:glm
highp_f64mat2x4	lib/glm/fwd.hpp	/^	typedef tmat2x4<f64, highp> highp_f64mat2x4;$/;"	t	namespace:glm
highp_f64mat3	lib/glm/fwd.hpp	/^	typedef highp_f64mat3x3 highp_f64mat3;$/;"	t	namespace:glm
highp_f64mat3x2	lib/glm/fwd.hpp	/^	typedef tmat3x2<f64, highp> highp_f64mat3x2;$/;"	t	namespace:glm
highp_f64mat3x3	lib/glm/fwd.hpp	/^	typedef tmat3x3<f64, highp> highp_f64mat3x3;$/;"	t	namespace:glm
highp_f64mat3x4	lib/glm/fwd.hpp	/^	typedef tmat3x4<f64, highp> highp_f64mat3x4;$/;"	t	namespace:glm
highp_f64mat4	lib/glm/fwd.hpp	/^	typedef highp_f64mat4x4 highp_f64mat4;$/;"	t	namespace:glm
highp_f64mat4x2	lib/glm/fwd.hpp	/^	typedef tmat4x2<f64, highp> highp_f64mat4x2;$/;"	t	namespace:glm
highp_f64mat4x3	lib/glm/fwd.hpp	/^	typedef tmat4x3<f64, highp> highp_f64mat4x3;$/;"	t	namespace:glm
highp_f64mat4x4	lib/glm/fwd.hpp	/^	typedef tmat4x4<f64, highp> highp_f64mat4x4;$/;"	t	namespace:glm
highp_f64quat	lib/glm/fwd.hpp	/^	typedef tquat<f64, highp> highp_f64quat;$/;"	t	namespace:glm
highp_f64vec1	lib/glm/fwd.hpp	/^	typedef tvec1<f64, highp> highp_f64vec1;$/;"	t	namespace:glm
highp_f64vec2	lib/glm/fwd.hpp	/^	typedef tvec2<f64, highp> highp_f64vec2;$/;"	t	namespace:glm
highp_f64vec3	lib/glm/fwd.hpp	/^	typedef tvec3<f64, highp> highp_f64vec3;$/;"	t	namespace:glm
highp_f64vec4	lib/glm/fwd.hpp	/^	typedef tvec4<f64, highp> highp_f64vec4;$/;"	t	namespace:glm
highp_fdualquat	lib/glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, highp>		highp_fdualquat;$/;"	t	namespace:glm
highp_float	lib/glm/detail/type_float.hpp	/^	typedef highp_float_t		highp_float;$/;"	t	namespace:glm
highp_float32	lib/glm/fwd.hpp	/^	typedef detail::float32 highp_float32;$/;"	t	namespace:glm
highp_float32_t	lib/glm/fwd.hpp	/^	typedef detail::float32 highp_float32_t;$/;"	t	namespace:glm
highp_float64	lib/glm/fwd.hpp	/^	typedef detail::float64 highp_float64;$/;"	t	namespace:glm
highp_float64_t	lib/glm/fwd.hpp	/^	typedef detail::float64 highp_float64_t;$/;"	t	namespace:glm
highp_float_t	lib/glm/detail/type_float.hpp	/^	typedef double				highp_float_t;$/;"	t	namespace:glm
highp_fmat2	lib/glm/fwd.hpp	/^	typedef highp_fmat2x2 highp_fmat2;$/;"	t	namespace:glm
highp_fmat2x2	lib/glm/fwd.hpp	/^	typedef tmat2x2<f32, highp> highp_fmat2x2;$/;"	t	namespace:glm
highp_fmat2x3	lib/glm/fwd.hpp	/^	typedef tmat2x3<f32, highp> highp_fmat2x3;$/;"	t	namespace:glm
highp_fmat2x4	lib/glm/fwd.hpp	/^	typedef tmat2x4<f32, highp> highp_fmat2x4;$/;"	t	namespace:glm
highp_fmat3	lib/glm/fwd.hpp	/^	typedef highp_fmat3x3 highp_fmat3;$/;"	t	namespace:glm
highp_fmat3x2	lib/glm/fwd.hpp	/^	typedef tmat3x2<f32, highp> highp_fmat3x2;$/;"	t	namespace:glm
highp_fmat3x3	lib/glm/fwd.hpp	/^	typedef tmat3x3<f32, highp> highp_fmat3x3;$/;"	t	namespace:glm
highp_fmat3x4	lib/glm/fwd.hpp	/^	typedef tmat3x4<f32, highp> highp_fmat3x4;$/;"	t	namespace:glm
highp_fmat4	lib/glm/fwd.hpp	/^	typedef highp_fmat4x4 highp_fmat4;$/;"	t	namespace:glm
highp_fmat4x2	lib/glm/fwd.hpp	/^	typedef tmat4x2<f32, highp> highp_fmat4x2;$/;"	t	namespace:glm
highp_fmat4x3	lib/glm/fwd.hpp	/^	typedef tmat4x3<f32, highp> highp_fmat4x3;$/;"	t	namespace:glm
highp_fmat4x4	lib/glm/fwd.hpp	/^	typedef tmat4x4<f32, highp> highp_fmat4x4;$/;"	t	namespace:glm
highp_fquat	lib/glm/fwd.hpp	/^	typedef highp_quat			highp_fquat;$/;"	t	namespace:glm
highp_fvec1	lib/glm/fwd.hpp	/^	typedef tvec1<float, highp> highp_fvec1;$/;"	t	namespace:glm
highp_fvec2	lib/glm/fwd.hpp	/^	typedef tvec2<float, highp> highp_fvec2;$/;"	t	namespace:glm
highp_fvec3	lib/glm/fwd.hpp	/^	typedef tvec3<float, highp> highp_fvec3;$/;"	t	namespace:glm
highp_fvec4	lib/glm/fwd.hpp	/^	typedef tvec4<float, highp> highp_fvec4;$/;"	t	namespace:glm
highp_i16	lib/glm/fwd.hpp	/^	typedef detail::int16 highp_i16;$/;"	t	namespace:glm
highp_i16	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int16 highp_i16;$/;"	t	namespace:glm
highp_i16vec1	lib/glm/fwd.hpp	/^	typedef tvec1<i16, highp>		highp_i16vec1;$/;"	t	namespace:glm
highp_i16vec2	lib/glm/fwd.hpp	/^	typedef tvec2<i16, highp>		highp_i16vec2;$/;"	t	namespace:glm
highp_i16vec3	lib/glm/fwd.hpp	/^	typedef tvec3<i16, highp>		highp_i16vec3;$/;"	t	namespace:glm
highp_i16vec4	lib/glm/fwd.hpp	/^	typedef tvec4<i16, highp>		highp_i16vec4;$/;"	t	namespace:glm
highp_i32	lib/glm/fwd.hpp	/^	typedef detail::int32 highp_i32;$/;"	t	namespace:glm
highp_i32	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int32 highp_i32;$/;"	t	namespace:glm
highp_i32vec1	lib/glm/fwd.hpp	/^	typedef tvec1<i32, highp>		highp_i32vec1;$/;"	t	namespace:glm
highp_i32vec2	lib/glm/fwd.hpp	/^	typedef tvec2<i32, highp>		highp_i32vec2;$/;"	t	namespace:glm
highp_i32vec3	lib/glm/fwd.hpp	/^	typedef tvec3<i32, highp>		highp_i32vec3;$/;"	t	namespace:glm
highp_i32vec4	lib/glm/fwd.hpp	/^	typedef tvec4<i32, highp>		highp_i32vec4;$/;"	t	namespace:glm
highp_i64	lib/glm/fwd.hpp	/^	typedef detail::int64 highp_i64;$/;"	t	namespace:glm
highp_i64	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int64 highp_i64;$/;"	t	namespace:glm
highp_i64vec1	lib/glm/fwd.hpp	/^	typedef tvec1<i64, highp>		highp_i64vec1;$/;"	t	namespace:glm
highp_i64vec2	lib/glm/fwd.hpp	/^	typedef tvec2<i64, highp>		highp_i64vec2;$/;"	t	namespace:glm
highp_i64vec3	lib/glm/fwd.hpp	/^	typedef tvec3<i64, highp>		highp_i64vec3;$/;"	t	namespace:glm
highp_i64vec4	lib/glm/fwd.hpp	/^	typedef tvec4<i64, highp>		highp_i64vec4;$/;"	t	namespace:glm
highp_i8	lib/glm/fwd.hpp	/^	typedef detail::int8 highp_i8;$/;"	t	namespace:glm
highp_i8	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int8 highp_i8;$/;"	t	namespace:glm
highp_i8vec1	lib/glm/fwd.hpp	/^	typedef tvec1<i8, highp> highp_i8vec1;$/;"	t	namespace:glm
highp_i8vec2	lib/glm/fwd.hpp	/^	typedef tvec2<i8, highp> highp_i8vec2;$/;"	t	namespace:glm
highp_i8vec3	lib/glm/fwd.hpp	/^	typedef tvec3<i8, highp> highp_i8vec3;$/;"	t	namespace:glm
highp_i8vec4	lib/glm/fwd.hpp	/^	typedef tvec4<i8, highp> highp_i8vec4;$/;"	t	namespace:glm
highp_imat2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<int, highp>				highp_imat2;$/;"	t	namespace:glm
highp_imat2x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<int, highp>				highp_imat2x2;$/;"	t	namespace:glm
highp_imat2x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x3<int, highp>				highp_imat2x3;$/;"	t	namespace:glm
highp_imat2x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x4<int, highp>				highp_imat2x4;$/;"	t	namespace:glm
highp_imat3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<int, highp>				highp_imat3;$/;"	t	namespace:glm
highp_imat3x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x2<int, highp>				highp_imat3x2;$/;"	t	namespace:glm
highp_imat3x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<int, highp>				highp_imat3x3;$/;"	t	namespace:glm
highp_imat3x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x4<int, highp>				highp_imat3x4;$/;"	t	namespace:glm
highp_imat4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<int, highp>				highp_imat4;$/;"	t	namespace:glm
highp_imat4x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x2<int, highp>				highp_imat4x2;$/;"	t	namespace:glm
highp_imat4x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x3<int, highp>				highp_imat4x3;$/;"	t	namespace:glm
highp_imat4x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<int, highp>				highp_imat4x4;$/;"	t	namespace:glm
highp_int	lib/glm/detail/type_int.hpp	/^	typedef detail::highp_int_t				highp_int;$/;"	t	namespace:glm
highp_int16	lib/glm/fwd.hpp	/^	typedef detail::int16 highp_int16;$/;"	t	namespace:glm
highp_int16	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int16 highp_int16;$/;"	t	namespace:glm
highp_int16_t	lib/glm/fwd.hpp	/^	typedef detail::int16 highp_int16_t;$/;"	t	namespace:glm
highp_int16_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int16 highp_int16_t;$/;"	t	namespace:glm
highp_int32	lib/glm/fwd.hpp	/^	typedef detail::int32 highp_int32;$/;"	t	namespace:glm
highp_int32	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int32 highp_int32;$/;"	t	namespace:glm
highp_int32_t	lib/glm/fwd.hpp	/^	typedef detail::int32 highp_int32_t;$/;"	t	namespace:glm
highp_int32_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int32 highp_int32_t;$/;"	t	namespace:glm
highp_int64	lib/glm/fwd.hpp	/^	typedef detail::int64 highp_int64;$/;"	t	namespace:glm
highp_int64	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int64 highp_int64;$/;"	t	namespace:glm
highp_int64_t	lib/glm/fwd.hpp	/^	typedef detail::int64 highp_int64_t;$/;"	t	namespace:glm
highp_int64_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int64 highp_int64_t;$/;"	t	namespace:glm
highp_int8	lib/glm/fwd.hpp	/^	typedef detail::int8 highp_int8;$/;"	t	namespace:glm
highp_int8	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int8 highp_int8;$/;"	t	namespace:glm
highp_int8_t	lib/glm/fwd.hpp	/^	typedef detail::int8 highp_int8_t;$/;"	t	namespace:glm
highp_int8_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int8 highp_int8_t;$/;"	t	namespace:glm
highp_int_t	lib/glm/detail/type_int.hpp	/^	typedef signed int						highp_int_t;$/;"	t	namespace:glm::detail
highp_ivec1	lib/glm/gtc/vec1.hpp	/^	typedef highp_ivec1_t			highp_ivec1;$/;"	t	namespace:glm
highp_ivec1_t	lib/glm/detail/type_vec.hpp	/^	typedef tvec1<int, highp>		highp_ivec1_t;$/;"	t	namespace:glm
highp_ivec2	lib/glm/detail/type_vec.hpp	/^	typedef tvec2<int, highp>		highp_ivec2;$/;"	t	namespace:glm
highp_ivec3	lib/glm/detail/type_vec.hpp	/^	typedef tvec3<int, highp>		highp_ivec3;$/;"	t	namespace:glm
highp_ivec4	lib/glm/detail/type_vec.hpp	/^	typedef tvec4<int, highp>		highp_ivec4;$/;"	t	namespace:glm
highp_mat2	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x2<float, highp>		highp_mat2;$/;"	t	namespace:glm
highp_mat2	lib/glm/mat2x2.hpp	/^	typedef tmat2x2<float, highp>		highp_mat2;$/;"	t	namespace:glm
highp_mat2x2	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x2<float, highp>		highp_mat2x2;$/;"	t	namespace:glm
highp_mat2x2	lib/glm/mat2x2.hpp	/^	typedef tmat2x2<float, highp>		highp_mat2x2;$/;"	t	namespace:glm
highp_mat2x3	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x3<float, highp>		highp_mat2x3;$/;"	t	namespace:glm
highp_mat2x3	lib/glm/mat2x3.hpp	/^	typedef tmat2x3<float, highp>		highp_mat2x3;$/;"	t	namespace:glm
highp_mat2x4	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x4<float, highp>		highp_mat2x4;$/;"	t	namespace:glm
highp_mat2x4	lib/glm/mat2x4.hpp	/^	typedef tmat2x4<float, highp>		highp_mat2x4;$/;"	t	namespace:glm
highp_mat3	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, highp>		highp_mat3;$/;"	t	namespace:glm
highp_mat3	lib/glm/mat3x3.hpp	/^	typedef tmat3x3<float, highp>		highp_mat3;$/;"	t	namespace:glm
highp_mat3x2	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x2<float, highp>		highp_mat3x2;$/;"	t	namespace:glm
highp_mat3x2	lib/glm/mat3x2.hpp	/^	typedef tmat3x2<float, highp>		highp_mat3x2;$/;"	t	namespace:glm
highp_mat3x3	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, highp>		highp_mat3x3;$/;"	t	namespace:glm
highp_mat3x3	lib/glm/mat3x3.hpp	/^	typedef tmat3x3<float, highp>		highp_mat3x3;$/;"	t	namespace:glm
highp_mat3x4	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x4<float, highp>		highp_mat3x4;$/;"	t	namespace:glm
highp_mat3x4	lib/glm/mat3x4.hpp	/^	typedef tmat3x4<float, highp>		highp_mat3x4;$/;"	t	namespace:glm
highp_mat4	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x4<float, highp>		highp_mat4;$/;"	t	namespace:glm
highp_mat4	lib/glm/mat4x4.hpp	/^	typedef tmat4x4<float, highp>		highp_mat4;$/;"	t	namespace:glm
highp_mat4x2	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x2<float, highp>		highp_mat4x2;$/;"	t	namespace:glm
highp_mat4x2	lib/glm/mat4x2.hpp	/^	typedef tmat4x2<float, highp>		highp_mat4x2;$/;"	t	namespace:glm
highp_mat4x3	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x3<float, highp>		highp_mat4x3;$/;"	t	namespace:glm
highp_mat4x3	lib/glm/mat4x3.hpp	/^	typedef tmat4x3<float, highp>		highp_mat4x3;$/;"	t	namespace:glm
highp_mat4x4	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x4<float, highp>		highp_mat4x4;$/;"	t	namespace:glm
highp_mat4x4	lib/glm/mat4x4.hpp	/^	typedef tmat4x4<float, highp>		highp_mat4x4;$/;"	t	namespace:glm
highp_quat	lib/glm/fwd.hpp	/^	typedef tquat<float, highp>		highp_quat;$/;"	t	namespace:glm
highp_u16	lib/glm/fwd.hpp	/^	typedef detail::uint16 highp_u16;$/;"	t	namespace:glm
highp_u16	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 highp_u16;$/;"	t	namespace:glm
highp_u16vec1	lib/glm/fwd.hpp	/^	typedef tvec1<u16, highp>		highp_u16vec1;$/;"	t	namespace:glm
highp_u16vec2	lib/glm/fwd.hpp	/^	typedef tvec2<u16, highp>		highp_u16vec2;$/;"	t	namespace:glm
highp_u16vec3	lib/glm/fwd.hpp	/^	typedef tvec3<u16, highp>		highp_u16vec3;$/;"	t	namespace:glm
highp_u16vec4	lib/glm/fwd.hpp	/^	typedef tvec4<u16, highp>		highp_u16vec4;$/;"	t	namespace:glm
highp_u32	lib/glm/fwd.hpp	/^	typedef detail::uint32 highp_u32;$/;"	t	namespace:glm
highp_u32	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 highp_u32;$/;"	t	namespace:glm
highp_u32vec1	lib/glm/fwd.hpp	/^	typedef tvec1<u32, highp>		highp_u32vec1;$/;"	t	namespace:glm
highp_u32vec2	lib/glm/fwd.hpp	/^	typedef tvec2<u32, highp>		highp_u32vec2;$/;"	t	namespace:glm
highp_u32vec3	lib/glm/fwd.hpp	/^	typedef tvec3<u32, highp>		highp_u32vec3;$/;"	t	namespace:glm
highp_u32vec4	lib/glm/fwd.hpp	/^	typedef tvec4<u32, highp>		highp_u32vec4;$/;"	t	namespace:glm
highp_u64	lib/glm/fwd.hpp	/^	typedef detail::uint64 highp_u64;$/;"	t	namespace:glm
highp_u64	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 highp_u64;$/;"	t	namespace:glm
highp_u64vec1	lib/glm/fwd.hpp	/^	typedef tvec1<u64, highp>		highp_u64vec1;$/;"	t	namespace:glm
highp_u64vec2	lib/glm/fwd.hpp	/^	typedef tvec2<u64, highp>		highp_u64vec2;$/;"	t	namespace:glm
highp_u64vec3	lib/glm/fwd.hpp	/^	typedef tvec3<u64, highp>		highp_u64vec3;$/;"	t	namespace:glm
highp_u64vec4	lib/glm/fwd.hpp	/^	typedef tvec4<u64, highp>		highp_u64vec4;$/;"	t	namespace:glm
highp_u8	lib/glm/fwd.hpp	/^	typedef detail::uint8 highp_u8;$/;"	t	namespace:glm
highp_u8	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 highp_u8;$/;"	t	namespace:glm
highp_u8vec1	lib/glm/fwd.hpp	/^	typedef tvec1<u8, highp> highp_u8vec1;$/;"	t	namespace:glm
highp_u8vec2	lib/glm/fwd.hpp	/^	typedef tvec2<u8, highp> highp_u8vec2;$/;"	t	namespace:glm
highp_u8vec3	lib/glm/fwd.hpp	/^	typedef tvec3<u8, highp> highp_u8vec3;$/;"	t	namespace:glm
highp_u8vec4	lib/glm/fwd.hpp	/^	typedef tvec4<u8, highp> highp_u8vec4;$/;"	t	namespace:glm
highp_uint	lib/glm/detail/type_int.hpp	/^	typedef detail::highp_uint_t			highp_uint;$/;"	t	namespace:glm
highp_uint16	lib/glm/fwd.hpp	/^	typedef detail::uint16 highp_uint16;$/;"	t	namespace:glm
highp_uint16	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 highp_uint16;$/;"	t	namespace:glm
highp_uint16_t	lib/glm/fwd.hpp	/^	typedef detail::uint16 highp_uint16_t;$/;"	t	namespace:glm
highp_uint16_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 highp_uint16_t;$/;"	t	namespace:glm
highp_uint32	lib/glm/fwd.hpp	/^	typedef detail::uint32 highp_uint32;$/;"	t	namespace:glm
highp_uint32	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 highp_uint32;$/;"	t	namespace:glm
highp_uint32_t	lib/glm/fwd.hpp	/^	typedef detail::uint32 highp_uint32_t;$/;"	t	namespace:glm
highp_uint32_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 highp_uint32_t;$/;"	t	namespace:glm
highp_uint64	lib/glm/fwd.hpp	/^	typedef detail::uint64 highp_uint64;$/;"	t	namespace:glm
highp_uint64	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 highp_uint64;$/;"	t	namespace:glm
highp_uint64_t	lib/glm/fwd.hpp	/^	typedef detail::uint64 highp_uint64_t;$/;"	t	namespace:glm
highp_uint64_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 highp_uint64_t;$/;"	t	namespace:glm
highp_uint8	lib/glm/fwd.hpp	/^	typedef detail::uint8 highp_uint8;$/;"	t	namespace:glm
highp_uint8	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 highp_uint8;$/;"	t	namespace:glm
highp_uint8_t	lib/glm/fwd.hpp	/^	typedef detail::uint8 highp_uint8_t;$/;"	t	namespace:glm
highp_uint8_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 highp_uint8_t;$/;"	t	namespace:glm
highp_uint_t	lib/glm/detail/type_int.hpp	/^	typedef unsigned int					highp_uint_t;$/;"	t	namespace:glm::detail
highp_umat2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<uint, highp>				highp_umat2;	$/;"	t	namespace:glm
highp_umat2x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<uint, highp>				highp_umat2x2;$/;"	t	namespace:glm
highp_umat2x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x3<uint, highp>				highp_umat2x3;$/;"	t	namespace:glm
highp_umat2x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x4<uint, highp>				highp_umat2x4;$/;"	t	namespace:glm
highp_umat3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<uint, highp>				highp_umat3;$/;"	t	namespace:glm
highp_umat3x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x2<uint, highp>				highp_umat3x2;$/;"	t	namespace:glm
highp_umat3x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<uint, highp>				highp_umat3x3;$/;"	t	namespace:glm
highp_umat3x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x4<uint, highp>				highp_umat3x4;$/;"	t	namespace:glm
highp_umat4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<uint, highp>				highp_umat4;$/;"	t	namespace:glm
highp_umat4x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x2<uint, highp>				highp_umat4x2;$/;"	t	namespace:glm
highp_umat4x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x3<uint, highp>				highp_umat4x3;$/;"	t	namespace:glm
highp_umat4x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<uint, highp>				highp_umat4x4;$/;"	t	namespace:glm
highp_uvec1	lib/glm/gtc/vec1.hpp	/^	typedef highp_uvec1_t			highp_uvec1;$/;"	t	namespace:glm
highp_uvec1_t	lib/glm/detail/type_vec.hpp	/^	typedef tvec1<uint, highp>		highp_uvec1_t;$/;"	t	namespace:glm
highp_uvec2	lib/glm/detail/type_vec.hpp	/^	typedef tvec2<uint, highp>		highp_uvec2;$/;"	t	namespace:glm
highp_uvec3	lib/glm/detail/type_vec.hpp	/^	typedef tvec3<uint, highp>		highp_uvec3;$/;"	t	namespace:glm
highp_uvec4	lib/glm/detail/type_vec.hpp	/^	typedef tvec4<uint, highp>		highp_uvec4;$/;"	t	namespace:glm
highp_vec1	lib/glm/fwd.hpp	/^	typedef tvec1<float, highp> highp_vec1;$/;"	t	namespace:glm
highp_vec1	lib/glm/gtc/vec1.hpp	/^	typedef highp_vec1_t			highp_vec1;$/;"	t	namespace:glm
highp_vec1_t	lib/glm/detail/type_vec.hpp	/^	typedef tvec1<float, highp>		highp_vec1_t;$/;"	t	namespace:glm
highp_vec2	lib/glm/detail/type_vec.hpp	/^	typedef tvec2<float, highp>		highp_vec2;$/;"	t	namespace:glm
highp_vec2	lib/glm/fwd.hpp	/^	typedef tvec2<float, highp> highp_vec2;$/;"	t	namespace:glm
highp_vec3	lib/glm/detail/type_vec.hpp	/^	typedef tvec3<float, highp>		highp_vec3;$/;"	t	namespace:glm
highp_vec3	lib/glm/fwd.hpp	/^	typedef tvec3<float, highp> highp_vec3;$/;"	t	namespace:glm
highp_vec4	lib/glm/detail/type_vec.hpp	/^	typedef tvec4<float, highp>		highp_vec4;$/;"	t	namespace:glm
highp_vec4	lib/glm/fwd.hpp	/^	typedef tvec4<float, highp> highp_vec4;$/;"	t	namespace:glm
hinstance	lib/vulkan/vk_icd.h	/^    HINSTANCE hinstance;$/;"	m	struct:__anon47
hinstance	lib/vulkan/vulkan.h	/^    HINSTANCE                       hinstance;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR
hs	lib/stb/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon62
hsz	lib/stb/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon68
huff_ac	lib/stb/stb_image.h	/^   stbi__huffman huff_ac[4];$/;"	m	struct:__anon60
huff_dc	lib/stb/stb_image.h	/^   stbi__huffman huff_dc[4];$/;"	m	struct:__anon60
hwnd	lib/vulkan/vk_icd.h	/^    HWND hwnd;$/;"	m	struct:__anon47
hwnd	lib/vulkan/vulkan.h	/^    HWND                            hwnd;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR
i16	lib/glm/fwd.hpp	/^	typedef detail::int16 i16;$/;"	t	namespace:glm
i16	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int16 i16;$/;"	t	namespace:glm
i16vec1	lib/glm/fwd.hpp	/^	typedef highp_i16vec1			i16vec1;$/;"	t	namespace:glm
i16vec1	lib/glm/fwd.hpp	/^	typedef lowp_i16vec1			i16vec1;$/;"	t	namespace:glm
i16vec1	lib/glm/fwd.hpp	/^	typedef mediump_i16vec1			i16vec1;$/;"	t	namespace:glm
i16vec1	lib/glm/gtc/type_precision.hpp	/^	typedef tvec1<i16, defaultp> i16vec1;$/;"	t	namespace:glm
i16vec2	lib/glm/fwd.hpp	/^	typedef highp_i16vec2			i16vec2;$/;"	t	namespace:glm
i16vec2	lib/glm/fwd.hpp	/^	typedef lowp_i16vec2			i16vec2;$/;"	t	namespace:glm
i16vec2	lib/glm/fwd.hpp	/^	typedef mediump_i16vec2			i16vec2;$/;"	t	namespace:glm
i16vec2	lib/glm/gtc/type_precision.hpp	/^	typedef tvec2<i16, defaultp> i16vec2;$/;"	t	namespace:glm
i16vec3	lib/glm/fwd.hpp	/^	typedef highp_i16vec3			i16vec3;$/;"	t	namespace:glm
i16vec3	lib/glm/fwd.hpp	/^	typedef lowp_i16vec3			i16vec3;$/;"	t	namespace:glm
i16vec3	lib/glm/fwd.hpp	/^	typedef mediump_i16vec3			i16vec3;$/;"	t	namespace:glm
i16vec3	lib/glm/gtc/type_precision.hpp	/^	typedef tvec3<i16, defaultp> i16vec3;$/;"	t	namespace:glm
i16vec4	lib/glm/fwd.hpp	/^	typedef highp_i16vec4			i16vec4;$/;"	t	namespace:glm
i16vec4	lib/glm/fwd.hpp	/^	typedef lowp_i16vec4			i16vec4;$/;"	t	namespace:glm
i16vec4	lib/glm/fwd.hpp	/^	typedef mediump_i16vec4			i16vec4;$/;"	t	namespace:glm
i16vec4	lib/glm/gtc/type_precision.hpp	/^	typedef tvec4<i16, defaultp> i16vec4;$/;"	t	namespace:glm
i32	lib/glm/fwd.hpp	/^	typedef detail::int32 i32;$/;"	t	namespace:glm
i32	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int32 i32;$/;"	t	namespace:glm
i32vec1	lib/glm/fwd.hpp	/^	typedef highp_i32vec1			i32vec1;$/;"	t	namespace:glm
i32vec1	lib/glm/fwd.hpp	/^	typedef lowp_i32vec1			i32vec1;$/;"	t	namespace:glm
i32vec1	lib/glm/fwd.hpp	/^	typedef mediump_i32vec1			i32vec1;$/;"	t	namespace:glm
i32vec1	lib/glm/gtc/type_precision.hpp	/^	typedef tvec1<i32, defaultp> i32vec1;$/;"	t	namespace:glm
i32vec2	lib/glm/fwd.hpp	/^	typedef highp_i32vec2			i32vec2;$/;"	t	namespace:glm
i32vec2	lib/glm/fwd.hpp	/^	typedef lowp_i32vec2			i32vec2;$/;"	t	namespace:glm
i32vec2	lib/glm/fwd.hpp	/^	typedef mediump_i32vec2			i32vec2;$/;"	t	namespace:glm
i32vec2	lib/glm/gtc/type_precision.hpp	/^	typedef tvec2<i32, defaultp> i32vec2;$/;"	t	namespace:glm
i32vec3	lib/glm/fwd.hpp	/^	typedef highp_i32vec3			i32vec3;$/;"	t	namespace:glm
i32vec3	lib/glm/fwd.hpp	/^	typedef lowp_i32vec3			i32vec3;$/;"	t	namespace:glm
i32vec3	lib/glm/fwd.hpp	/^	typedef mediump_i32vec3			i32vec3;$/;"	t	namespace:glm
i32vec3	lib/glm/gtc/type_precision.hpp	/^	typedef tvec3<i32, defaultp> i32vec3;$/;"	t	namespace:glm
i32vec4	lib/glm/fwd.hpp	/^	typedef highp_i32vec4			i32vec4;$/;"	t	namespace:glm
i32vec4	lib/glm/fwd.hpp	/^	typedef lowp_i32vec4			i32vec4;$/;"	t	namespace:glm
i32vec4	lib/glm/fwd.hpp	/^	typedef mediump_i32vec4			i32vec4;$/;"	t	namespace:glm
i32vec4	lib/glm/gtc/type_precision.hpp	/^	typedef tvec4<i32, defaultp> i32vec4;$/;"	t	namespace:glm
i64	lib/glm/fwd.hpp	/^	typedef detail::int64 i64;$/;"	t	namespace:glm
i64	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int64 i64;$/;"	t	namespace:glm
i64vec1	lib/glm/fwd.hpp	/^	typedef highp_i64vec1			i64vec1;$/;"	t	namespace:glm
i64vec1	lib/glm/fwd.hpp	/^	typedef lowp_i64vec1			i64vec1;$/;"	t	namespace:glm
i64vec1	lib/glm/fwd.hpp	/^	typedef mediump_i64vec1			i64vec1;$/;"	t	namespace:glm
i64vec1	lib/glm/gtc/type_precision.hpp	/^	typedef tvec1<i64, defaultp> i64vec1;$/;"	t	namespace:glm
i64vec2	lib/glm/fwd.hpp	/^	typedef highp_i64vec2			i64vec2;$/;"	t	namespace:glm
i64vec2	lib/glm/fwd.hpp	/^	typedef lowp_i64vec2			i64vec2;$/;"	t	namespace:glm
i64vec2	lib/glm/fwd.hpp	/^	typedef mediump_i64vec2			i64vec2;$/;"	t	namespace:glm
i64vec2	lib/glm/gtc/type_precision.hpp	/^	typedef tvec2<i64, defaultp> i64vec2;$/;"	t	namespace:glm
i64vec3	lib/glm/fwd.hpp	/^	typedef highp_i64vec3			i64vec3;$/;"	t	namespace:glm
i64vec3	lib/glm/fwd.hpp	/^	typedef lowp_i64vec3			i64vec3;$/;"	t	namespace:glm
i64vec3	lib/glm/fwd.hpp	/^	typedef mediump_i64vec3			i64vec3;$/;"	t	namespace:glm
i64vec3	lib/glm/gtc/type_precision.hpp	/^	typedef tvec3<i64, defaultp> i64vec3;$/;"	t	namespace:glm
i64vec4	lib/glm/fwd.hpp	/^	typedef highp_i64vec4			i64vec4;$/;"	t	namespace:glm
i64vec4	lib/glm/fwd.hpp	/^	typedef lowp_i64vec4			i64vec4;$/;"	t	namespace:glm
i64vec4	lib/glm/fwd.hpp	/^	typedef mediump_i64vec4			i64vec4;$/;"	t	namespace:glm
i64vec4	lib/glm/gtc/type_precision.hpp	/^	typedef tvec4<i64, defaultp> i64vec4;$/;"	t	namespace:glm
i8	lib/glm/fwd.hpp	/^	typedef detail::int8 i8;$/;"	t	namespace:glm
i8	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int8 i8;$/;"	t	namespace:glm
i8vec1	lib/glm/fwd.hpp	/^	typedef highp_i8vec1			i8vec1;$/;"	t	namespace:glm
i8vec1	lib/glm/fwd.hpp	/^	typedef lowp_i8vec1				i8vec1;$/;"	t	namespace:glm
i8vec1	lib/glm/fwd.hpp	/^	typedef mediump_i8vec1			i8vec1;$/;"	t	namespace:glm
i8vec1	lib/glm/gtc/type_precision.hpp	/^	typedef tvec1<i8, defaultp> i8vec1;$/;"	t	namespace:glm
i8vec2	lib/glm/fwd.hpp	/^	typedef highp_i8vec2			i8vec2;$/;"	t	namespace:glm
i8vec2	lib/glm/fwd.hpp	/^	typedef lowp_i8vec2				i8vec2;$/;"	t	namespace:glm
i8vec2	lib/glm/fwd.hpp	/^	typedef mediump_i8vec2			i8vec2;$/;"	t	namespace:glm
i8vec2	lib/glm/gtc/type_precision.hpp	/^	typedef tvec2<i8, defaultp> i8vec2;$/;"	t	namespace:glm
i8vec3	lib/glm/fwd.hpp	/^	typedef highp_i8vec3			i8vec3;$/;"	t	namespace:glm
i8vec3	lib/glm/fwd.hpp	/^	typedef lowp_i8vec3				i8vec3;$/;"	t	namespace:glm
i8vec3	lib/glm/fwd.hpp	/^	typedef mediump_i8vec3			i8vec3;$/;"	t	namespace:glm
i8vec3	lib/glm/gtc/type_precision.hpp	/^	typedef tvec3<i8, defaultp> i8vec3;$/;"	t	namespace:glm
i8vec4	lib/glm/fwd.hpp	/^	typedef highp_i8vec4			i8vec4;$/;"	t	namespace:glm
i8vec4	lib/glm/fwd.hpp	/^	typedef lowp_i8vec4				i8vec4;$/;"	t	namespace:glm
i8vec4	lib/glm/fwd.hpp	/^	typedef mediump_i8vec4			i8vec4;	$/;"	t	namespace:glm
i8vec4	lib/glm/gtc/type_precision.hpp	/^	typedef tvec4<i8, defaultp> i8vec4;$/;"	t	namespace:glm
id	lib/glm/gtx/io.hpp	/^			static std::locale::id id;$/;"	m	class:glm::io::format_punct
id	lib/stb/stb_image.h	/^      int id;$/;"	m	struct:__anon60::__anon61
idata	lib/stb/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon66
idct_block_kernel	lib/stb/stb_image.h	/^   void (*idct_block_kernel)(stbi_uc *out, int out_stride, short data[64]);$/;"	m	struct:__anon60
image	lib/vulkan/vulkan.h	/^    VkImage                           image;$/;"	m	struct:VkSparseImageMemoryBindInfo
image	lib/vulkan/vulkan.h	/^    VkImage                      image;$/;"	m	struct:VkSparseImageOpaqueMemoryBindInfo
image	lib/vulkan/vulkan.h	/^    VkImage                    image;$/;"	m	struct:VkImageMemoryBarrier
image	lib/vulkan/vulkan.h	/^    VkImage                    image;$/;"	m	struct:VkImageViewCreateInfo
image	lib/vulkan/vulkan.h	/^    VkImage            image;$/;"	m	struct:VkDedicatedAllocationMemoryAllocateInfoNV
imageArrayLayers	lib/vulkan/vulkan.h	/^    uint32_t                         imageArrayLayers;$/;"	m	struct:VkSwapchainCreateInfoKHR
imageBindCount	lib/vulkan/vulkan.h	/^    uint32_t                                    imageBindCount;$/;"	m	struct:VkBindSparseInfo
imageColorSpace	lib/vulkan/vulkan.h	/^    VkColorSpaceKHR                  imageColorSpace;$/;"	m	struct:VkSwapchainCreateInfoKHR
imageCubeArray	lib/vulkan/vulkan.h	/^    VkBool32    imageCubeArray;$/;"	m	struct:VkPhysicalDeviceFeatures
imageExtent	lib/vulkan/vk_icd.h	/^    VkExtent2D imageExtent;$/;"	m	struct:__anon50
imageExtent	lib/vulkan/vulkan.h	/^    VkExtent2D                        imageExtent;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
imageExtent	lib/vulkan/vulkan.h	/^    VkExtent2D                       imageExtent;$/;"	m	struct:VkSwapchainCreateInfoKHR
imageExtent	lib/vulkan/vulkan.h	/^    VkExtent3D                  imageExtent;$/;"	m	struct:VkBufferImageCopy
imageFormat	lib/vulkan/vulkan.h	/^    VkFormat                         imageFormat;$/;"	m	struct:VkSwapchainCreateInfoKHR
imageGranularity	lib/vulkan/vulkan.h	/^    VkExtent3D                  imageGranularity;$/;"	m	struct:VkSparseImageFormatProperties
imageLayout	lib/vulkan/vulkan.h	/^    VkImageLayout    imageLayout;$/;"	m	struct:VkDescriptorImageInfo
imageMipTailFirstLod	lib/vulkan/vulkan.h	/^    uint32_t                         imageMipTailFirstLod;$/;"	m	struct:VkSparseImageMemoryRequirements
imageMipTailOffset	lib/vulkan/vulkan.h	/^    VkDeviceSize                     imageMipTailOffset;$/;"	m	struct:VkSparseImageMemoryRequirements
imageMipTailSize	lib/vulkan/vulkan.h	/^    VkDeviceSize                     imageMipTailSize;$/;"	m	struct:VkSparseImageMemoryRequirements
imageMipTailStride	lib/vulkan/vulkan.h	/^    VkDeviceSize                     imageMipTailStride;$/;"	m	struct:VkSparseImageMemoryRequirements
imageOffset	lib/vulkan/vulkan.h	/^    VkOffset3D                  imageOffset;$/;"	m	struct:VkBufferImageCopy
imageOpaqueBindCount	lib/vulkan/vulkan.h	/^    uint32_t                                    imageOpaqueBindCount;$/;"	m	struct:VkBindSparseInfo
imageSharingMode	lib/vulkan/vulkan.h	/^    VkSharingMode                    imageSharingMode;$/;"	m	struct:VkSwapchainCreateInfoKHR
imageSubresource	lib/vulkan/vulkan.h	/^    VkImageSubresourceLayers    imageSubresource;$/;"	m	struct:VkBufferImageCopy
imageType	lib/vulkan/vulkan.h	/^    VkImageType              imageType;$/;"	m	struct:VkImageCreateInfo
imageUsage	lib/vulkan/vulkan.h	/^    VkImageUsageFlags                imageUsage;$/;"	m	struct:VkSwapchainCreateInfoKHR
imageView	lib/vulkan/vulkan.h	/^    VkImageView      imageView;$/;"	m	struct:VkDescriptorImageInfo
imat2	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat2								imat2;$/;"	t	namespace:glm
imat2	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat2								imat2;$/;"	t	namespace:glm
imat2	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat2							imat2;$/;"	t	namespace:glm
imat2x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat2x2							imat2x2;$/;"	t	namespace:glm
imat2x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat2x2							imat2x2;$/;"	t	namespace:glm
imat2x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat2x2							imat2x2;$/;"	t	namespace:glm
imat2x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat2x3							imat2x3;$/;"	t	namespace:glm
imat2x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat2x3							imat2x3;$/;"	t	namespace:glm
imat2x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat2x3							imat2x3;$/;"	t	namespace:glm
imat2x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat2x4							imat2x4;$/;"	t	namespace:glm
imat2x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat2x4							imat2x4;$/;"	t	namespace:glm
imat2x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat2x4							imat2x4;$/;"	t	namespace:glm
imat3	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat3								imat3;$/;"	t	namespace:glm
imat3	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat3								imat3;$/;"	t	namespace:glm
imat3	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat3							imat3;$/;"	t	namespace:glm
imat3x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat3x2							imat3x2;$/;"	t	namespace:glm
imat3x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat3x2							imat3x2;$/;"	t	namespace:glm
imat3x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat3x2							imat3x2;$/;"	t	namespace:glm
imat3x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat3x3							imat3x3;$/;"	t	namespace:glm
imat3x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat3x3							imat3x3;$/;"	t	namespace:glm
imat3x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat3x3							imat3x3;$/;"	t	namespace:glm
imat3x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat3x4							imat3x4;$/;"	t	namespace:glm
imat3x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat3x4							imat3x4;$/;"	t	namespace:glm
imat3x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat3x4							imat3x4;$/;"	t	namespace:glm
imat4	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat4								imat4;$/;"	t	namespace:glm
imat4	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat4								imat4;$/;"	t	namespace:glm
imat4	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat4							imat4;$/;"	t	namespace:glm
imat4x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat4x2							imat4x2;$/;"	t	namespace:glm
imat4x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat4x2							imat4x2;$/;"	t	namespace:glm
imat4x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat4x2							imat4x2;$/;"	t	namespace:glm
imat4x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat4x3							imat4x3;$/;"	t	namespace:glm
imat4x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat4x3							imat4x3;$/;"	t	namespace:glm
imat4x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat4x3							imat4x3;$/;"	t	namespace:glm
imat4x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat4x4							imat4x4;$/;"	t	namespace:glm
imat4x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat4x4							imat4x4;$/;"	t	namespace:glm
imat4x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat4x4							imat4x4;$/;"	t	namespace:glm
img_buffer	lib/stb/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon57
img_buffer_end	lib/stb/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon57
img_buffer_original	lib/stb/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon57
img_buffer_original_end	lib/stb/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon57
img_comp	lib/stb/stb_image.h	/^   } img_comp[4];$/;"	m	struct:__anon60	typeref:struct:__anon60::__anon61
img_h_max	lib/stb/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon60
img_mcu_h	lib/stb/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon60
img_mcu_w	lib/stb/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon60
img_mcu_x	lib/stb/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon60
img_mcu_y	lib/stb/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon60
img_n	lib/stb/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon57
img_out_n	lib/stb/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon57
img_v_max	lib/stb/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon60
img_x	lib/stb/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon57
img_y	lib/stb/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon57
implementationVersion	lib/vulkan/vulkan.h	/^    uint32_t    implementationVersion;$/;"	m	struct:VkLayerProperties
independentBlend	lib/vulkan/vulkan.h	/^    VkBool32    independentBlend;$/;"	m	struct:VkPhysicalDeviceFeatures
index	lib/vulkan/libspirv.h	/^  size_t index;$/;"	m	struct:spv_position_t
indexBuffer	inc/vulkan_manager.h	/^	VkBuffer vertexBuffer, indexBuffer, uniformBuffer, uniformStagingBuffer;$/;"	m	class:VulkanManager
indexBufferMem	inc/quad.h	/^	VkDeviceMemory vertexBufferMem, indexBufferMem;$/;"	m	class:Quad
indexBufferMem	inc/vulkan_manager.h	/^	VkDeviceMemory vertexBufferMem, indexBufferMem, uniformBufferMem, uniformStagingBufferMem;$/;"	m	class:VulkanManager
indexCount	lib/vulkan/vulkan.h	/^    uint32_t    indexCount;$/;"	m	struct:VkDrawIndexedIndirectCommand
inheritedQueries	lib/vulkan/vulkan.h	/^    VkBool32    inheritedQueries;$/;"	m	struct:VkPhysicalDeviceFeatures
init	src/engine.cpp	/^void Engine::init() $/;"	f	class:Engine
init	src/input_manager.cpp	/^void InputManager::init() $/;"	f	class:InputManager
init	src/vulkan_manager.cpp	/^void VulkanManager::init() $/;"	f	class:VulkanManager
initBinPath	src/file_manager.cpp	/^void FileManager::initBinPath()$/;"	f	class:FileManager
initBuffers	src/quad.cpp	/^void Quad::initBuffers() $/;"	f	class:Quad
initWindow	src/window.cpp	/^void Window::initWindow(Engine& engine)$/;"	f	class:Window
initialDataSize	lib/vulkan/vulkan.h	/^    size_t                        initialDataSize;$/;"	m	struct:VkPipelineCacheCreateInfo
initialLayout	lib/vulkan/vulkan.h	/^    VkImageLayout                   initialLayout;$/;"	m	struct:VkAttachmentDescription
initialLayout	lib/vulkan/vulkan.h	/^    VkImageLayout            initialLayout;$/;"	m	struct:VkImageCreateInfo
inline	lib/vulkan/vk_sdk_platform.h	28;"	d
inline	lib/vulkan/vk_sdk_platform.h	29;"	d
inputAttachmentCount	lib/vulkan/vulkan.h	/^    uint32_t                        inputAttachmentCount;$/;"	m	struct:VkSubpassDescription
inputRate	lib/vulkan/vulkan.h	/^    VkVertexInputRate    inputRate;$/;"	m	struct:VkVertexInputBindingDescription
instanceCount	lib/vulkan/vulkan.h	/^    uint32_t    instanceCount;$/;"	m	struct:VkDrawIndexedIndirectCommand
instanceCount	lib/vulkan/vulkan.h	/^    uint32_t    instanceCount;$/;"	m	struct:VkDrawIndirectCommand
int1	lib/glm/gtx/compatibility.hpp	/^	typedef int							int1;			\/\/!< \\brief integer vector with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int16	lib/glm/detail/type_int.hpp	/^		typedef std::int16_t				int16;$/;"	t	namespace:glm::detail
int16	lib/glm/detail/type_int.hpp	/^	typedef detail::int16					int16;$/;"	t	namespace:glm
int16	lib/glm/fwd.hpp	/^	typedef detail::int16 int16;$/;"	t	namespace:glm
int16	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int16 int16;$/;"	t	namespace:glm
int16_t	lib/vulkan/vk_platform.h	/^        typedef signed   __int16 int16_t;$/;"	t
int1x1	lib/glm/gtx/compatibility.hpp	/^	typedef int							int1x1;			\/\/!< \\brief integer matrix with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int2	lib/glm/gtx/compatibility.hpp	/^	typedef tvec2<int, highp>			int2;			\/\/!< \\brief integer vector with 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int2x2	lib/glm/gtx/compatibility.hpp	/^	typedef tmat2x2<int, highp>		int2x2;			\/\/!< \\brief integer matrix with 2 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int2x3	lib/glm/gtx/compatibility.hpp	/^	typedef tmat2x3<int, highp>		int2x3;			\/\/!< \\brief integer matrix with 2 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int2x4	lib/glm/gtx/compatibility.hpp	/^	typedef tmat2x4<int, highp>		int2x4;			\/\/!< \\brief integer matrix with 2 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int3	lib/glm/gtx/compatibility.hpp	/^	typedef tvec3<int, highp>			int3;			\/\/!< \\brief integer vector with 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int32	lib/glm/detail/type_int.hpp	/^		typedef std::int32_t				int32;$/;"	t	namespace:glm::detail
int32	lib/glm/detail/type_int.hpp	/^	typedef detail::int32					int32;$/;"	t	namespace:glm
int32	lib/glm/fwd.hpp	/^	typedef detail::int32 int32;$/;"	t	namespace:glm
int32	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int32 int32;$/;"	t	namespace:glm
int32	lib/vulkan/vulkan.h	/^    int32_t     int32[4];$/;"	m	union:VkClearColorValue
int32_t	lib/vulkan/vk_platform.h	/^        typedef signed   __int32 int32_t;$/;"	t
int3x2	lib/glm/gtx/compatibility.hpp	/^	typedef tmat3x2<int, highp>		int3x2;			\/\/!< \\brief integer matrix with 3 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int3x3	lib/glm/gtx/compatibility.hpp	/^	typedef tmat3x3<int, highp>		int3x3;			\/\/!< \\brief integer matrix with 3 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int3x4	lib/glm/gtx/compatibility.hpp	/^	typedef tmat3x4<int, highp>		int3x4;			\/\/!< \\brief integer matrix with 3 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int4	lib/glm/gtx/compatibility.hpp	/^	typedef tvec4<int, highp>			int4;			\/\/!< \\brief integer vector with 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int4x2	lib/glm/gtx/compatibility.hpp	/^	typedef tmat4x2<int, highp>		int4x2;			\/\/!< \\brief integer matrix with 4 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int4x3	lib/glm/gtx/compatibility.hpp	/^	typedef tmat4x3<int, highp>		int4x3;			\/\/!< \\brief integer matrix with 4 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int4x4	lib/glm/gtx/compatibility.hpp	/^	typedef tmat4x4<int, highp>		int4x4;			\/\/!< \\brief integer matrix with 4 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int64	lib/glm/detail/type_int.hpp	/^		typedef std::int64_t				int64;$/;"	t	namespace:glm::detail
int64	lib/glm/detail/type_int.hpp	/^	typedef detail::int64					int64;$/;"	t	namespace:glm
int64	lib/glm/fwd.hpp	/^	typedef detail::int64 int64;$/;"	t	namespace:glm
int64	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int64 int64;$/;"	t	namespace:glm
int64_t	lib/vulkan/vk_platform.h	/^        typedef signed   __int64 int64_t;$/;"	t
int8	lib/glm/detail/type_int.hpp	/^		typedef std::int8_t					int8;$/;"	t	namespace:glm::detail
int8	lib/glm/detail/type_int.hpp	/^	typedef detail::int8					int8;$/;"	t	namespace:glm
int8	lib/glm/fwd.hpp	/^	typedef detail::int8 int8;$/;"	t	namespace:glm
int8	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int8 int8;$/;"	t	namespace:glm
int8_t	lib/vulkan/vk_platform.h	/^        typedef signed   __int8  int8_t;$/;"	t
int_t	lib/glm/detail/type_int.hpp	/^	typedef highp_int					int_t;$/;"	t	namespace:glm
int_t	lib/glm/detail/type_int.hpp	/^	typedef lowp_int					int_t;$/;"	t	namespace:glm
int_t	lib/glm/detail/type_int.hpp	/^	typedef mediump_int					int_t;$/;"	t	namespace:glm
io	lib/glm/gtx/io.hpp	/^	namespace io$/;"	n	namespace:glm
io	lib/stb/stb_image.h	/^   stbi_io_callbacks io;$/;"	m	struct:__anon57
io_user_data	lib/stb/stb_image.h	/^   void *io_user_data;$/;"	m	struct:__anon57
isOpen	inc/window.h	/^	inline bool isOpen() { return !glfwWindowShouldClose(mGlfwWindow); }$/;"	f	class:Window
isTextSource	lib/vulkan/libspirv.h	/^  bool isTextSource;$/;"	m	struct:spv_diagnostic_t
is_aligned	lib/glm/detail/precision.hpp	/^		struct is_aligned<glm::aligned_highp>$/;"	s	namespace:glm::detail
is_aligned	lib/glm/detail/precision.hpp	/^		struct is_aligned<glm::aligned_lowp>$/;"	s	namespace:glm::detail
is_aligned	lib/glm/detail/precision.hpp	/^		struct is_aligned<glm::aligned_mediump>$/;"	s	namespace:glm::detail
is_aligned	lib/glm/detail/precision.hpp	/^	struct is_aligned$/;"	s	namespace:glm::detail
is_mat	lib/glm/gtx/type_trait.hpp	/^		static bool const is_mat = false;$/;"	m	struct:glm::type
is_mat	lib/glm/gtx/type_trait.hpp	/^		static bool const is_mat = true;$/;"	m	struct:glm::type
is_quat	lib/glm/gtx/type_trait.hpp	/^		static bool const is_quat = false;$/;"	m	struct:glm::type
is_quat	lib/glm/gtx/type_trait.hpp	/^		static bool const is_quat = true;$/;"	m	struct:glm::type
is_vec	lib/glm/gtx/type_trait.hpp	/^		static bool const is_vec = false;$/;"	m	struct:glm::type
is_vec	lib/glm/gtx/type_trait.hpp	/^		static bool const is_vec = true;$/;"	m	struct:glm::type
is_vector	lib/glm/detail/type_gentype.hpp	/^	bool genType<VALTYPE, TYPE>::is_vector()$/;"	f	class:glm::detail::genType
isfinite	lib/glm/gtx/compatibility.hpp	29;"	d
isinf	lib/glm/detail/_fixes.hpp	23;"	d
isnan	lib/glm/detail/_fixes.hpp	18;"	d
ivec1	lib/glm/gtc/vec1.hpp	/^	typedef highp_ivec1			ivec1;$/;"	t	namespace:glm
ivec1	lib/glm/gtc/vec1.hpp	/^	typedef lowp_ivec1			ivec1;$/;"	t	namespace:glm
ivec1	lib/glm/gtc/vec1.hpp	/^	typedef mediump_ivec1		ivec1;$/;"	t	namespace:glm
ivec2	lib/glm/detail/type_vec.hpp	/^	typedef highp_ivec2			ivec2;$/;"	t	namespace:glm
ivec2	lib/glm/detail/type_vec.hpp	/^	typedef lowp_ivec2			ivec2;$/;"	t	namespace:glm
ivec2	lib/glm/detail/type_vec.hpp	/^	typedef mediump_ivec2		ivec2;$/;"	t	namespace:glm
ivec3	lib/glm/detail/type_vec.hpp	/^	typedef highp_ivec3			ivec3;$/;"	t	namespace:glm
ivec3	lib/glm/detail/type_vec.hpp	/^	typedef lowp_ivec3			ivec3;$/;"	t	namespace:glm
ivec3	lib/glm/detail/type_vec.hpp	/^	typedef mediump_ivec3		ivec3;$/;"	t	namespace:glm
ivec4	lib/glm/detail/type_vec.hpp	/^	typedef highp_ivec4			ivec4;$/;"	t	namespace:glm
ivec4	lib/glm/detail/type_vec.hpp	/^	typedef lowp_ivec4			ivec4;$/;"	t	namespace:glm
ivec4	lib/glm/detail/type_vec.hpp	/^	typedef mediump_ivec4		ivec4;$/;"	t	namespace:glm
keyCallback	src/input_manager.cpp	/^void keyCallback(GLFWwindow* window, int key, int scancode, int action, int mode)$/;"	f
largePoints	lib/vulkan/vulkan.h	/^    VkBool32    largePoints;$/;"	m	struct:VkPhysicalDeviceFeatures
layerCount	lib/vulkan/vulkan.h	/^    uint32_t              layerCount;$/;"	m	struct:VkImageSubresourceLayers
layerCount	lib/vulkan/vulkan.h	/^    uint32_t              layerCount;$/;"	m	struct:VkImageSubresourceRange
layerCount	lib/vulkan/vulkan.h	/^    uint32_t    layerCount;$/;"	m	struct:VkClearRect
layerName	lib/vulkan/vulkan.h	/^    char        layerName[VK_MAX_EXTENSION_NAME_SIZE];$/;"	m	struct:VkLayerProperties
layers	lib/vulkan/vulkan.h	/^    uint32_t                    layers;$/;"	m	struct:VkFramebufferCreateInfo
layout	lib/vulkan/vulkan.h	/^    VkImageLayout    layout;$/;"	m	struct:VkAttachmentReference
layout	lib/vulkan/vulkan.h	/^    VkPipelineLayout                                 layout;$/;"	m	struct:VkGraphicsPipelineCreateInfo
layout	lib/vulkan/vulkan.h	/^    VkPipelineLayout                   layout;$/;"	m	struct:VkComputePipelineCreateInfo
length	lib/stb/stb_image.h	/^   stbi__uint32 length;$/;"	m	struct:__anon65
length	lib/vulkan/libspirv.h	/^  size_t length;$/;"	m	struct:spv_text_t
length_t	lib/glm/detail/setup.hpp	/^		typedef size_t length_t;$/;"	t	namespace:glm
length_type	lib/glm/detail/type_mat2x2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tmat2x2
length_type	lib/glm/detail/type_mat2x3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tmat2x3
length_type	lib/glm/detail/type_mat2x4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tmat2x4
length_type	lib/glm/detail/type_mat3x2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tmat3x2
length_type	lib/glm/detail/type_mat3x3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tmat3x3
length_type	lib/glm/detail/type_mat3x4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tmat3x4
length_type	lib/glm/detail/type_mat4x2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tmat4x2
length_type	lib/glm/detail/type_mat4x3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tmat4x3
length_type	lib/glm/detail/type_mat4x4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tmat4x4
length_type	lib/glm/detail/type_vec1.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tvec1
length_type	lib/glm/detail/type_vec2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tvec2
length_type	lib/glm/detail/type_vec3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tvec3
length_type	lib/glm/detail/type_vec4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tvec4
length_type	lib/glm/gtc/quaternion.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tquat
length_type	lib/glm/gtx/dual_quaternion.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tdualquat
lerp	lib/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec2<T, P> lerp(const tvec2<T, P>& x, const tvec2<T, P>& y, T a){return mix(x, y, a);}							\/\/!< \\brief Returns x * (1.0 - a) + y * a, i.e., the linear blend of x and y using the floating-point value a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
lerp	lib/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec2<T, P> lerp(const tvec2<T, P>& x, const tvec2<T, P>& y, const tvec2<T, P>& a){return mix(x, y, a);}	\/\/!< \\brief Returns the component-wise result of x * (1.0 - a) + y * a, i.e., the linear blend of x and y using vector a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
lerp	lib/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec3<T, P> lerp(const tvec3<T, P>& x, const tvec3<T, P>& y, T a){return mix(x, y, a);}							\/\/!< \\brief Returns x * (1.0 - a) + y * a, i.e., the linear blend of x and y using the floating-point value a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
lerp	lib/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec3<T, P> lerp(const tvec3<T, P>& x, const tvec3<T, P>& y, const tvec3<T, P>& a){return mix(x, y, a);}	\/\/!< \\brief Returns the component-wise result of x * (1.0 - a) + y * a, i.e., the linear blend of x and y using vector a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
lerp	lib/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec4<T, P> lerp(const tvec4<T, P>& x, const tvec4<T, P>& y, T a){return mix(x, y, a);}							\/\/!< \\brief Returns x * (1.0 - a) + y * a, i.e., the linear blend of x and y using the floating-point value a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
lerp	lib/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec4<T, P> lerp(const tvec4<T, P>& x, const tvec4<T, P>& y, const tvec4<T, P>& a){return mix(x, y, a);}	\/\/!< \\brief Returns the component-wise result of x * (1.0 - a) + y * a, i.e., the linear blend of x and y using vector a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
lerp	lib/glm/gtx/compatibility.hpp	/^	template <typename T> GLM_FUNC_QUALIFIER T lerp(T x, T y, T a){return mix(x, y, a);}																					\/\/!< \\brief Returns x * (1.0 - a) + y * a, i.e., the linear blend of x and y using the floating-point value a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
level	lib/vulkan/vulkan.h	/^    VkCommandBufferLevel    level;$/;"	m	struct:VkCommandBufferAllocateInfo
levelCount	lib/vulkan/vulkan.h	/^    uint32_t              levelCount;$/;"	m	struct:VkImageSubresourceRange
lflags	lib/stb/stb_image.h	/^   int lflags;$/;"	m	struct:__anon71
limits	lib/vulkan/vulkan.h	/^    VkPhysicalDeviceLimits              limits;$/;"	m	struct:VkPhysicalDeviceProperties
line	lib/vulkan/libspirv.h	/^  size_t line;$/;"	m	struct:spv_position_t
line0	lib/stb/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon62
line1	lib/stb/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon62
lineWidth	lib/vulkan/vulkan.h	/^    float                                      lineWidth;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
lineWidthGranularity	lib/vulkan/vulkan.h	/^    float                 lineWidthGranularity;$/;"	m	struct:VkPhysicalDeviceLimits
lineWidthRange	lib/vulkan/vulkan.h	/^    float                 lineWidthRange[2];$/;"	m	struct:VkPhysicalDeviceLimits
line_size	lib/stb/stb_image.h	/^   int line_size;$/;"	m	struct:__anon71
linearTilingFeatures	lib/vulkan/vulkan.h	/^    VkFormatFeatureFlags    linearTilingFeatures;$/;"	m	struct:VkFormatProperties
linebuf	lib/stb/stb_image.h	/^      stbi_uc *linebuf;$/;"	m	struct:__anon60::__anon61
loadOp	lib/vulkan/vulkan.h	/^    VkAttachmentLoadOp              loadOp;$/;"	m	struct:VkAttachmentDescription
load_jpeg_image	lib/stb/stb_image.h	/^static stbi_uc *load_jpeg_image(stbi__jpeg *z, int *out_x, int *out_y, int *comp, int req_comp)$/;"	f
loaderData	lib/vulkan/vk_icd.h	/^    void *loaderData;$/;"	m	union:__anon42
loaderMagic	lib/vulkan/vk_icd.h	/^    uintptr_t loaderMagic;$/;"	m	union:__anon42
locale_	lib/glm/gtx/io.hpp	/^			locale_type     locale_;$/;"	m	class:glm::io::basic_state_saver
locale_type	lib/glm/gtx/io.hpp	/^			typedef ::std::locale const            locale_type;$/;"	t	class:glm::io::basic_state_saver::std
location	lib/vulkan/vulkan.h	/^    uint32_t    location;$/;"	m	struct:VkVertexInputAttributeDescription
log2	lib/glm/detail/_fixes.hpp	28;"	d
logicOp	lib/vulkan/vulkan.h	/^    VkBool32    logicOp;$/;"	m	struct:VkPhysicalDeviceFeatures
logicOp	lib/vulkan/vulkan.h	/^    VkLogicOp                                     logicOp;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo
logicOpEnable	lib/vulkan/vulkan.h	/^    VkBool32                                      logicOpEnable;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo
lowp	lib/glm/detail/precision.hpp	/^		lowp = packed_lowp,$/;"	e	enum:glm::precision
lowp_bvec1	lib/glm/gtc/vec1.hpp	/^	typedef lowp_bvec1_t			lowp_bvec1;$/;"	t	namespace:glm
lowp_bvec1_t	lib/glm/detail/type_vec.hpp	/^	typedef tvec1<bool, lowp>		lowp_bvec1_t;$/;"	t	namespace:glm
lowp_bvec2	lib/glm/detail/type_vec.hpp	/^	typedef tvec2<bool, lowp>		lowp_bvec2;$/;"	t	namespace:glm
lowp_bvec3	lib/glm/detail/type_vec.hpp	/^	typedef tvec3<bool, lowp>		lowp_bvec3;$/;"	t	namespace:glm
lowp_bvec4	lib/glm/detail/type_vec.hpp	/^	typedef tvec4<bool, lowp>		lowp_bvec4;$/;"	t	namespace:glm
lowp_ddualquat	lib/glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<double, lowp>		lowp_ddualquat;$/;"	t	namespace:glm
lowp_dmat2	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x2<double, lowp>		lowp_dmat2;$/;"	t	namespace:glm
lowp_dmat2x2	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x2<double, lowp>		lowp_dmat2x2;$/;"	t	namespace:glm
lowp_dmat2x3	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x3<double, lowp>		lowp_dmat2x3;$/;"	t	namespace:glm
lowp_dmat2x4	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x4<double, lowp>		lowp_dmat2x4;$/;"	t	namespace:glm
lowp_dmat3	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, lowp>		lowp_dmat3;$/;"	t	namespace:glm
lowp_dmat3x2	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x2<double, lowp>		lowp_dmat3x2;$/;"	t	namespace:glm
lowp_dmat3x3	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x3<double, lowp>		lowp_dmat3x3;$/;"	t	namespace:glm
lowp_dmat3x4	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x4<double, lowp>		lowp_dmat3x4;$/;"	t	namespace:glm
lowp_dmat4	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x4<double, lowp>		lowp_dmat4;$/;"	t	namespace:glm
lowp_dmat4x2	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x2<double, lowp>		lowp_dmat4x2;$/;"	t	namespace:glm
lowp_dmat4x3	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x3<double, lowp>		lowp_dmat4x3;$/;"	t	namespace:glm
lowp_dmat4x4	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x4<double, lowp>		lowp_dmat4x4;$/;"	t	namespace:glm
lowp_dquat	lib/glm/fwd.hpp	/^	typedef tquat<double, lowp>		lowp_dquat;$/;"	t	namespace:glm
lowp_dualquat	lib/glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, lowp>		lowp_dualquat;$/;"	t	namespace:glm
lowp_dvec1	lib/glm/gtc/vec1.hpp	/^	typedef lowp_dvec1_t			lowp_dvec1;$/;"	t	namespace:glm
lowp_dvec1_t	lib/glm/detail/type_vec.hpp	/^	typedef tvec1<double, lowp>		lowp_dvec1_t;$/;"	t	namespace:glm
lowp_dvec2	lib/glm/detail/type_vec.hpp	/^	typedef tvec2<double, lowp>		lowp_dvec2;$/;"	t	namespace:glm
lowp_dvec3	lib/glm/detail/type_vec.hpp	/^	typedef tvec3<double, lowp>		lowp_dvec3;$/;"	t	namespace:glm
lowp_dvec4	lib/glm/detail/type_vec.hpp	/^	typedef tvec4<double, lowp>		lowp_dvec4;$/;"	t	namespace:glm
lowp_f32	lib/glm/fwd.hpp	/^	typedef float32 lowp_f32;$/;"	t	namespace:glm
lowp_f32mat2	lib/glm/fwd.hpp	/^	typedef lowp_f32mat2x2 lowp_f32mat2;$/;"	t	namespace:glm
lowp_f32mat2x2	lib/glm/fwd.hpp	/^	typedef tmat2x2<f32, lowp> lowp_f32mat2x2;$/;"	t	namespace:glm
lowp_f32mat2x3	lib/glm/fwd.hpp	/^	typedef tmat2x3<f32, lowp> lowp_f32mat2x3;$/;"	t	namespace:glm
lowp_f32mat2x4	lib/glm/fwd.hpp	/^	typedef tmat2x4<f32, lowp> lowp_f32mat2x4;$/;"	t	namespace:glm
lowp_f32mat3	lib/glm/fwd.hpp	/^	typedef lowp_f32mat3x3 lowp_f32mat3;$/;"	t	namespace:glm
lowp_f32mat3x2	lib/glm/fwd.hpp	/^	typedef tmat3x2<f32, lowp> lowp_f32mat3x2;$/;"	t	namespace:glm
lowp_f32mat3x3	lib/glm/fwd.hpp	/^	typedef tmat3x3<f32, lowp> lowp_f32mat3x3;$/;"	t	namespace:glm
lowp_f32mat3x4	lib/glm/fwd.hpp	/^	typedef tmat3x4<f32, lowp> lowp_f32mat3x4;$/;"	t	namespace:glm
lowp_f32mat4	lib/glm/fwd.hpp	/^	typedef lowp_f32mat4x4 lowp_f32mat4;$/;"	t	namespace:glm
lowp_f32mat4x2	lib/glm/fwd.hpp	/^	typedef tmat4x2<f32, lowp> lowp_f32mat4x2;$/;"	t	namespace:glm
lowp_f32mat4x3	lib/glm/fwd.hpp	/^	typedef tmat4x3<f32, lowp> lowp_f32mat4x3;$/;"	t	namespace:glm
lowp_f32mat4x4	lib/glm/fwd.hpp	/^	typedef tmat4x4<f32, lowp> lowp_f32mat4x4;$/;"	t	namespace:glm
lowp_f32quat	lib/glm/fwd.hpp	/^	typedef tquat<f32, lowp> lowp_f32quat;$/;"	t	namespace:glm
lowp_f32vec1	lib/glm/fwd.hpp	/^	typedef tvec1<f32, lowp> lowp_f32vec1;$/;"	t	namespace:glm
lowp_f32vec2	lib/glm/fwd.hpp	/^	typedef tvec2<f32, lowp> lowp_f32vec2;$/;"	t	namespace:glm
lowp_f32vec3	lib/glm/fwd.hpp	/^	typedef tvec3<f32, lowp> lowp_f32vec3;$/;"	t	namespace:glm
lowp_f32vec4	lib/glm/fwd.hpp	/^	typedef tvec4<f32, lowp> lowp_f32vec4;$/;"	t	namespace:glm
lowp_f64	lib/glm/fwd.hpp	/^	typedef float64 lowp_f64;$/;"	t	namespace:glm
lowp_f64mat2	lib/glm/fwd.hpp	/^	typedef lowp_f64mat2x2 lowp_f64mat2;$/;"	t	namespace:glm
lowp_f64mat2x2	lib/glm/fwd.hpp	/^	typedef tmat2x2<f64, lowp> lowp_f64mat2x2;$/;"	t	namespace:glm
lowp_f64mat2x3	lib/glm/fwd.hpp	/^	typedef tmat2x3<f64, lowp> lowp_f64mat2x3;$/;"	t	namespace:glm
lowp_f64mat2x4	lib/glm/fwd.hpp	/^	typedef tmat2x4<f64, lowp> lowp_f64mat2x4;$/;"	t	namespace:glm
lowp_f64mat3	lib/glm/fwd.hpp	/^	typedef lowp_f64mat3x3 lowp_f64mat3;$/;"	t	namespace:glm
lowp_f64mat3x2	lib/glm/fwd.hpp	/^	typedef tmat3x2<f64, lowp> lowp_f64mat3x2;$/;"	t	namespace:glm
lowp_f64mat3x3	lib/glm/fwd.hpp	/^	typedef tmat3x3<f64, lowp> lowp_f64mat3x3;$/;"	t	namespace:glm
lowp_f64mat3x4	lib/glm/fwd.hpp	/^	typedef tmat3x4<f64, lowp> lowp_f64mat3x4;$/;"	t	namespace:glm
lowp_f64mat4	lib/glm/fwd.hpp	/^	typedef lowp_f64mat4x4 lowp_f64mat4;$/;"	t	namespace:glm
lowp_f64mat4x2	lib/glm/fwd.hpp	/^	typedef tmat4x2<f64, lowp> lowp_f64mat4x2;$/;"	t	namespace:glm
lowp_f64mat4x3	lib/glm/fwd.hpp	/^	typedef tmat4x3<f64, lowp> lowp_f64mat4x3;$/;"	t	namespace:glm
lowp_f64mat4x4	lib/glm/fwd.hpp	/^	typedef tmat4x4<f64, lowp> lowp_f64mat4x4;$/;"	t	namespace:glm
lowp_f64quat	lib/glm/fwd.hpp	/^	typedef tquat<f64, lowp> lowp_f64quat;$/;"	t	namespace:glm
lowp_f64vec1	lib/glm/fwd.hpp	/^	typedef tvec1<f64, lowp> lowp_f64vec1;$/;"	t	namespace:glm
lowp_f64vec2	lib/glm/fwd.hpp	/^	typedef tvec2<f64, lowp> lowp_f64vec2;$/;"	t	namespace:glm
lowp_f64vec3	lib/glm/fwd.hpp	/^	typedef tvec3<f64, lowp> lowp_f64vec3;$/;"	t	namespace:glm
lowp_f64vec4	lib/glm/fwd.hpp	/^	typedef tvec4<f64, lowp> lowp_f64vec4;$/;"	t	namespace:glm
lowp_fdualquat	lib/glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, lowp>		lowp_fdualquat;$/;"	t	namespace:glm
lowp_float	lib/glm/detail/type_float.hpp	/^	typedef lowp_float_t		lowp_float;$/;"	t	namespace:glm
lowp_float32	lib/glm/fwd.hpp	/^	typedef detail::float32 lowp_float32;$/;"	t	namespace:glm
lowp_float32_t	lib/glm/fwd.hpp	/^	typedef detail::float32 lowp_float32_t;$/;"	t	namespace:glm
lowp_float64	lib/glm/fwd.hpp	/^	typedef detail::float64 lowp_float64;$/;"	t	namespace:glm
lowp_float64_t	lib/glm/fwd.hpp	/^	typedef detail::float64 lowp_float64_t;$/;"	t	namespace:glm
lowp_float_t	lib/glm/detail/type_float.hpp	/^	typedef float				lowp_float_t;$/;"	t	namespace:glm
lowp_fmat2	lib/glm/fwd.hpp	/^	typedef lowp_fmat2x2 lowp_fmat2;$/;"	t	namespace:glm
lowp_fmat2x2	lib/glm/fwd.hpp	/^	typedef tmat2x2<f32, lowp> lowp_fmat2x2;$/;"	t	namespace:glm
lowp_fmat2x3	lib/glm/fwd.hpp	/^	typedef tmat2x3<f32, lowp> lowp_fmat2x3;$/;"	t	namespace:glm
lowp_fmat2x4	lib/glm/fwd.hpp	/^	typedef tmat2x4<f32, lowp> lowp_fmat2x4;$/;"	t	namespace:glm
lowp_fmat3	lib/glm/fwd.hpp	/^	typedef lowp_fmat3x3 lowp_fmat3;$/;"	t	namespace:glm
lowp_fmat3x2	lib/glm/fwd.hpp	/^	typedef tmat3x2<f32, lowp> lowp_fmat3x2;$/;"	t	namespace:glm
lowp_fmat3x3	lib/glm/fwd.hpp	/^	typedef tmat3x3<f32, lowp> lowp_fmat3x3;$/;"	t	namespace:glm
lowp_fmat3x4	lib/glm/fwd.hpp	/^	typedef tmat3x4<f32, lowp> lowp_fmat3x4;$/;"	t	namespace:glm
lowp_fmat4	lib/glm/fwd.hpp	/^	typedef lowp_fmat4x4 lowp_fmat4;$/;"	t	namespace:glm
lowp_fmat4x2	lib/glm/fwd.hpp	/^	typedef tmat4x2<f32, lowp> lowp_fmat4x2;$/;"	t	namespace:glm
lowp_fmat4x3	lib/glm/fwd.hpp	/^	typedef tmat4x3<f32, lowp> lowp_fmat4x3;$/;"	t	namespace:glm
lowp_fmat4x4	lib/glm/fwd.hpp	/^	typedef tmat4x4<f32, lowp> lowp_fmat4x4;$/;"	t	namespace:glm
lowp_fquat	lib/glm/fwd.hpp	/^	typedef lowp_quat			lowp_fquat;$/;"	t	namespace:glm
lowp_fvec1	lib/glm/fwd.hpp	/^	typedef tvec1<float, lowp> lowp_fvec1;$/;"	t	namespace:glm
lowp_fvec2	lib/glm/fwd.hpp	/^	typedef tvec2<float, lowp> lowp_fvec2;$/;"	t	namespace:glm
lowp_fvec3	lib/glm/fwd.hpp	/^	typedef tvec3<float, lowp> lowp_fvec3;$/;"	t	namespace:glm
lowp_fvec4	lib/glm/fwd.hpp	/^	typedef tvec4<float, lowp> lowp_fvec4;$/;"	t	namespace:glm
lowp_i16	lib/glm/fwd.hpp	/^	typedef detail::int16 lowp_i16;$/;"	t	namespace:glm
lowp_i16	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int16 lowp_i16;$/;"	t	namespace:glm
lowp_i16vec1	lib/glm/fwd.hpp	/^	typedef tvec1<i16, lowp>		lowp_i16vec1;$/;"	t	namespace:glm
lowp_i16vec2	lib/glm/fwd.hpp	/^	typedef tvec2<i16, lowp>		lowp_i16vec2;$/;"	t	namespace:glm
lowp_i16vec3	lib/glm/fwd.hpp	/^	typedef tvec3<i16, lowp>		lowp_i16vec3;$/;"	t	namespace:glm
lowp_i16vec4	lib/glm/fwd.hpp	/^	typedef tvec4<i16, lowp>		lowp_i16vec4;$/;"	t	namespace:glm
lowp_i32	lib/glm/fwd.hpp	/^	typedef detail::int32 lowp_i32;$/;"	t	namespace:glm
lowp_i32	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int32 lowp_i32;$/;"	t	namespace:glm
lowp_i32vec1	lib/glm/fwd.hpp	/^	typedef tvec1<i32, lowp>		lowp_i32vec1;$/;"	t	namespace:glm
lowp_i32vec2	lib/glm/fwd.hpp	/^	typedef tvec2<i32, lowp>		lowp_i32vec2;$/;"	t	namespace:glm
lowp_i32vec3	lib/glm/fwd.hpp	/^	typedef tvec3<i32, lowp>		lowp_i32vec3;$/;"	t	namespace:glm
lowp_i32vec4	lib/glm/fwd.hpp	/^	typedef tvec4<i32, lowp>		lowp_i32vec4;$/;"	t	namespace:glm
lowp_i64	lib/glm/fwd.hpp	/^	typedef detail::int64 lowp_i64;$/;"	t	namespace:glm
lowp_i64	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int64 lowp_i64;$/;"	t	namespace:glm
lowp_i64vec1	lib/glm/fwd.hpp	/^	typedef tvec1<i64, lowp>		lowp_i64vec1;$/;"	t	namespace:glm
lowp_i64vec2	lib/glm/fwd.hpp	/^	typedef tvec2<i64, lowp>		lowp_i64vec2;$/;"	t	namespace:glm
lowp_i64vec3	lib/glm/fwd.hpp	/^	typedef tvec3<i64, lowp>		lowp_i64vec3;$/;"	t	namespace:glm
lowp_i64vec4	lib/glm/fwd.hpp	/^	typedef tvec4<i64, lowp>		lowp_i64vec4;$/;"	t	namespace:glm
lowp_i8	lib/glm/fwd.hpp	/^	typedef detail::int8 lowp_i8;$/;"	t	namespace:glm
lowp_i8	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int8 lowp_i8;$/;"	t	namespace:glm
lowp_i8vec1	lib/glm/fwd.hpp	/^	typedef tvec1<i8, lowp> lowp_i8vec1;$/;"	t	namespace:glm
lowp_i8vec2	lib/glm/fwd.hpp	/^	typedef tvec2<i8, lowp> lowp_i8vec2;$/;"	t	namespace:glm
lowp_i8vec3	lib/glm/fwd.hpp	/^	typedef tvec3<i8, lowp> lowp_i8vec3;$/;"	t	namespace:glm
lowp_i8vec4	lib/glm/fwd.hpp	/^	typedef tvec4<i8, lowp> lowp_i8vec4;$/;"	t	namespace:glm
lowp_imat2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<int, lowp>				lowp_imat2;$/;"	t	namespace:glm
lowp_imat2x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<int, lowp>				lowp_imat2x2;$/;"	t	namespace:glm
lowp_imat2x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x3<int, lowp>				lowp_imat2x3;$/;"	t	namespace:glm
lowp_imat2x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x4<int, lowp>				lowp_imat2x4;$/;"	t	namespace:glm
lowp_imat3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<int, lowp>				lowp_imat3;$/;"	t	namespace:glm
lowp_imat3x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x2<int, lowp>				lowp_imat3x2;$/;"	t	namespace:glm
lowp_imat3x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<int, lowp>				lowp_imat3x3;$/;"	t	namespace:glm
lowp_imat3x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x4<int, lowp>				lowp_imat3x4;$/;"	t	namespace:glm
lowp_imat4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<int, lowp>				lowp_imat4;$/;"	t	namespace:glm
lowp_imat4x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x2<int, lowp>				lowp_imat4x2;$/;"	t	namespace:glm
lowp_imat4x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x3<int, lowp>				lowp_imat4x3;$/;"	t	namespace:glm
lowp_imat4x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<int, lowp>				lowp_imat4x4;$/;"	t	namespace:glm
lowp_int	lib/glm/detail/type_int.hpp	/^	typedef detail::lowp_int_t				lowp_int;$/;"	t	namespace:glm
lowp_int16	lib/glm/fwd.hpp	/^	typedef detail::int16 lowp_int16;$/;"	t	namespace:glm
lowp_int16	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int16 lowp_int16;$/;"	t	namespace:glm
lowp_int16_t	lib/glm/fwd.hpp	/^	typedef detail::int16 lowp_int16_t;$/;"	t	namespace:glm
lowp_int16_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int16 lowp_int16_t;$/;"	t	namespace:glm
lowp_int32	lib/glm/fwd.hpp	/^	typedef detail::int32 lowp_int32;$/;"	t	namespace:glm
lowp_int32	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int32 lowp_int32;$/;"	t	namespace:glm
lowp_int32_t	lib/glm/fwd.hpp	/^	typedef detail::int32 lowp_int32_t;$/;"	t	namespace:glm
lowp_int32_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int32 lowp_int32_t;$/;"	t	namespace:glm
lowp_int64	lib/glm/fwd.hpp	/^	typedef detail::int64 lowp_int64;$/;"	t	namespace:glm
lowp_int64	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int64 lowp_int64;$/;"	t	namespace:glm
lowp_int64_t	lib/glm/fwd.hpp	/^	typedef detail::int64 lowp_int64_t;$/;"	t	namespace:glm
lowp_int64_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int64 lowp_int64_t;$/;"	t	namespace:glm
lowp_int8	lib/glm/fwd.hpp	/^	typedef detail::int8 lowp_int8;$/;"	t	namespace:glm
lowp_int8	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int8 lowp_int8;$/;"	t	namespace:glm
lowp_int8_t	lib/glm/fwd.hpp	/^	typedef detail::int8 lowp_int8_t;$/;"	t	namespace:glm
lowp_int8_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int8 lowp_int8_t;$/;"	t	namespace:glm
lowp_int_t	lib/glm/detail/type_int.hpp	/^	typedef signed int						lowp_int_t;$/;"	t	namespace:glm::detail
lowp_ivec1	lib/glm/gtc/vec1.hpp	/^	typedef lowp_ivec1_t			lowp_ivec1;$/;"	t	namespace:glm
lowp_ivec1_t	lib/glm/detail/type_vec.hpp	/^	typedef tvec1<int, lowp>		lowp_ivec1_t;$/;"	t	namespace:glm
lowp_ivec2	lib/glm/detail/type_vec.hpp	/^	typedef tvec2<int, lowp>		lowp_ivec2;$/;"	t	namespace:glm
lowp_ivec3	lib/glm/detail/type_vec.hpp	/^	typedef tvec3<int, lowp>		lowp_ivec3;$/;"	t	namespace:glm
lowp_ivec4	lib/glm/detail/type_vec.hpp	/^	typedef tvec4<int, lowp>		lowp_ivec4;$/;"	t	namespace:glm
lowp_mat2	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x2<float, lowp>		lowp_mat2;$/;"	t	namespace:glm
lowp_mat2	lib/glm/mat2x2.hpp	/^	typedef tmat2x2<float, lowp>		lowp_mat2;$/;"	t	namespace:glm
lowp_mat2x2	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x2<float, lowp>		lowp_mat2x2;$/;"	t	namespace:glm
lowp_mat2x2	lib/glm/mat2x2.hpp	/^	typedef tmat2x2<float, lowp>		lowp_mat2x2;$/;"	t	namespace:glm
lowp_mat2x3	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x3<float, lowp>		lowp_mat2x3;$/;"	t	namespace:glm
lowp_mat2x3	lib/glm/mat2x3.hpp	/^	typedef tmat2x3<float, lowp>		lowp_mat2x3;$/;"	t	namespace:glm
lowp_mat2x4	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x4<float, lowp>		lowp_mat2x4;$/;"	t	namespace:glm
lowp_mat2x4	lib/glm/mat2x4.hpp	/^	typedef tmat2x4<float, lowp>		lowp_mat2x4;$/;"	t	namespace:glm
lowp_mat3	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, lowp>		lowp_mat3;$/;"	t	namespace:glm
lowp_mat3	lib/glm/mat3x3.hpp	/^	typedef tmat3x3<float, lowp>		lowp_mat3;$/;"	t	namespace:glm
lowp_mat3x2	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x2<float, lowp>		lowp_mat3x2;$/;"	t	namespace:glm
lowp_mat3x2	lib/glm/mat3x2.hpp	/^	typedef tmat3x2<float, lowp>		lowp_mat3x2;$/;"	t	namespace:glm
lowp_mat3x3	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, lowp>		lowp_mat3x3;$/;"	t	namespace:glm
lowp_mat3x3	lib/glm/mat3x3.hpp	/^	typedef tmat3x3<float, lowp>		lowp_mat3x3;$/;"	t	namespace:glm
lowp_mat3x4	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x4<float, lowp>		lowp_mat3x4;$/;"	t	namespace:glm
lowp_mat3x4	lib/glm/mat3x4.hpp	/^	typedef tmat3x4<float, lowp>		lowp_mat3x4;$/;"	t	namespace:glm
lowp_mat4	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x4<float, lowp>		lowp_mat4;$/;"	t	namespace:glm
lowp_mat4	lib/glm/mat4x4.hpp	/^	typedef tmat4x4<float, lowp>		lowp_mat4;$/;"	t	namespace:glm
lowp_mat4x2	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x2<float, lowp>		lowp_mat4x2;$/;"	t	namespace:glm
lowp_mat4x2	lib/glm/mat4x2.hpp	/^	typedef tmat4x2<float, lowp>		lowp_mat4x2;$/;"	t	namespace:glm
lowp_mat4x3	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x3<float, lowp>		lowp_mat4x3;$/;"	t	namespace:glm
lowp_mat4x3	lib/glm/mat4x3.hpp	/^	typedef tmat4x3<float, lowp>		lowp_mat4x3;$/;"	t	namespace:glm
lowp_mat4x4	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x4<float, lowp>		lowp_mat4x4;$/;"	t	namespace:glm
lowp_mat4x4	lib/glm/mat4x4.hpp	/^	typedef tmat4x4<float, lowp>		lowp_mat4x4;$/;"	t	namespace:glm
lowp_quat	lib/glm/fwd.hpp	/^	typedef tquat<float, lowp>		lowp_quat;$/;"	t	namespace:glm
lowp_u16	lib/glm/fwd.hpp	/^	typedef detail::uint16 lowp_u16;$/;"	t	namespace:glm
lowp_u16	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 lowp_u16;$/;"	t	namespace:glm
lowp_u16vec1	lib/glm/fwd.hpp	/^	typedef tvec1<u16, lowp>		lowp_u16vec1;$/;"	t	namespace:glm
lowp_u16vec2	lib/glm/fwd.hpp	/^	typedef tvec2<u16, lowp>		lowp_u16vec2;$/;"	t	namespace:glm
lowp_u16vec3	lib/glm/fwd.hpp	/^	typedef tvec3<u16, lowp>		lowp_u16vec3;$/;"	t	namespace:glm
lowp_u16vec4	lib/glm/fwd.hpp	/^	typedef tvec4<u16, lowp>		lowp_u16vec4;$/;"	t	namespace:glm
lowp_u32	lib/glm/fwd.hpp	/^	typedef detail::uint32 lowp_u32;$/;"	t	namespace:glm
lowp_u32	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 lowp_u32;$/;"	t	namespace:glm
lowp_u32vec1	lib/glm/fwd.hpp	/^	typedef tvec1<u32, lowp>		lowp_u32vec1;$/;"	t	namespace:glm
lowp_u32vec2	lib/glm/fwd.hpp	/^	typedef tvec2<u32, lowp>		lowp_u32vec2;$/;"	t	namespace:glm
lowp_u32vec3	lib/glm/fwd.hpp	/^	typedef tvec3<u32, lowp>		lowp_u32vec3;$/;"	t	namespace:glm
lowp_u32vec4	lib/glm/fwd.hpp	/^	typedef tvec4<u32, lowp>		lowp_u32vec4;$/;"	t	namespace:glm
lowp_u64	lib/glm/fwd.hpp	/^	typedef detail::uint64 lowp_u64;$/;"	t	namespace:glm
lowp_u64	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 lowp_u64;$/;"	t	namespace:glm
lowp_u64vec1	lib/glm/fwd.hpp	/^	typedef tvec1<u64, lowp>		lowp_u64vec1;$/;"	t	namespace:glm
lowp_u64vec2	lib/glm/fwd.hpp	/^	typedef tvec2<u64, lowp>		lowp_u64vec2;$/;"	t	namespace:glm
lowp_u64vec3	lib/glm/fwd.hpp	/^	typedef tvec3<u64, lowp>		lowp_u64vec3;$/;"	t	namespace:glm
lowp_u64vec4	lib/glm/fwd.hpp	/^	typedef tvec4<u64, lowp>		lowp_u64vec4;$/;"	t	namespace:glm
lowp_u8	lib/glm/fwd.hpp	/^	typedef detail::uint8 lowp_u8;$/;"	t	namespace:glm
lowp_u8	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 lowp_u8;$/;"	t	namespace:glm
lowp_u8vec1	lib/glm/fwd.hpp	/^	typedef tvec1<u8, lowp> lowp_u8vec1;$/;"	t	namespace:glm
lowp_u8vec2	lib/glm/fwd.hpp	/^	typedef tvec2<u8, lowp> lowp_u8vec2;$/;"	t	namespace:glm
lowp_u8vec3	lib/glm/fwd.hpp	/^	typedef tvec3<u8, lowp> lowp_u8vec3;$/;"	t	namespace:glm
lowp_u8vec4	lib/glm/fwd.hpp	/^	typedef tvec4<u8, lowp> lowp_u8vec4;$/;"	t	namespace:glm
lowp_uint	lib/glm/detail/type_int.hpp	/^	typedef detail::lowp_uint_t				lowp_uint;$/;"	t	namespace:glm
lowp_uint16	lib/glm/fwd.hpp	/^	typedef detail::uint16 lowp_uint16;$/;"	t	namespace:glm
lowp_uint16	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 lowp_uint16;$/;"	t	namespace:glm
lowp_uint16_t	lib/glm/fwd.hpp	/^	typedef detail::uint16 lowp_uint16_t;$/;"	t	namespace:glm
lowp_uint16_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 lowp_uint16_t;$/;"	t	namespace:glm
lowp_uint32	lib/glm/fwd.hpp	/^	typedef detail::uint32 lowp_uint32;$/;"	t	namespace:glm
lowp_uint32	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 lowp_uint32;$/;"	t	namespace:glm
lowp_uint32_t	lib/glm/fwd.hpp	/^	typedef detail::uint32 lowp_uint32_t;$/;"	t	namespace:glm
lowp_uint32_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 lowp_uint32_t;$/;"	t	namespace:glm
lowp_uint64	lib/glm/fwd.hpp	/^	typedef detail::uint64 lowp_uint64;$/;"	t	namespace:glm
lowp_uint64	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 lowp_uint64;$/;"	t	namespace:glm
lowp_uint64_t	lib/glm/fwd.hpp	/^	typedef detail::uint64 lowp_uint64_t;$/;"	t	namespace:glm
lowp_uint64_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 lowp_uint64_t;$/;"	t	namespace:glm
lowp_uint8	lib/glm/fwd.hpp	/^	typedef detail::uint8 lowp_uint8;$/;"	t	namespace:glm
lowp_uint8	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 lowp_uint8;$/;"	t	namespace:glm
lowp_uint8_t	lib/glm/fwd.hpp	/^	typedef detail::uint8 lowp_uint8_t;$/;"	t	namespace:glm
lowp_uint8_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 lowp_uint8_t;$/;"	t	namespace:glm
lowp_uint_t	lib/glm/detail/type_int.hpp	/^	typedef unsigned int					lowp_uint_t;$/;"	t	namespace:glm::detail
lowp_umat2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<uint, lowp>				lowp_umat2;$/;"	t	namespace:glm
lowp_umat2x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<uint, lowp>				lowp_umat2x2;$/;"	t	namespace:glm
lowp_umat2x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x3<uint, lowp>				lowp_umat2x3;$/;"	t	namespace:glm
lowp_umat2x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x4<uint, lowp>				lowp_umat2x4;$/;"	t	namespace:glm
lowp_umat3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<uint, lowp>				lowp_umat3;$/;"	t	namespace:glm
lowp_umat3x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x2<uint, lowp>				lowp_umat3x2;$/;"	t	namespace:glm
lowp_umat3x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<uint, lowp>				lowp_umat3x3;$/;"	t	namespace:glm
lowp_umat3x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x4<uint, lowp>				lowp_umat3x4;$/;"	t	namespace:glm
lowp_umat4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<uint, lowp>				lowp_umat4;$/;"	t	namespace:glm
lowp_umat4x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x2<uint, lowp>				lowp_umat4x2;$/;"	t	namespace:glm
lowp_umat4x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x3<uint, lowp>				lowp_umat4x3;$/;"	t	namespace:glm
lowp_umat4x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<uint, lowp>				lowp_umat4x4;$/;"	t	namespace:glm
lowp_uvec1	lib/glm/gtc/vec1.hpp	/^	typedef lowp_uvec1_t			lowp_uvec1;$/;"	t	namespace:glm
lowp_uvec1_t	lib/glm/detail/type_vec.hpp	/^	typedef tvec1<uint, lowp>		lowp_uvec1_t;$/;"	t	namespace:glm
lowp_uvec2	lib/glm/detail/type_vec.hpp	/^	typedef tvec2<uint, lowp>		lowp_uvec2;$/;"	t	namespace:glm
lowp_uvec3	lib/glm/detail/type_vec.hpp	/^	typedef tvec3<uint, lowp>		lowp_uvec3;$/;"	t	namespace:glm
lowp_uvec4	lib/glm/detail/type_vec.hpp	/^	typedef tvec4<uint, lowp>		lowp_uvec4;$/;"	t	namespace:glm
lowp_vec1	lib/glm/fwd.hpp	/^	typedef tvec1<float, lowp> lowp_vec1;$/;"	t	namespace:glm
lowp_vec1	lib/glm/gtc/vec1.hpp	/^	typedef lowp_vec1_t				lowp_vec1;$/;"	t	namespace:glm
lowp_vec1_t	lib/glm/detail/type_vec.hpp	/^	typedef tvec1<float, lowp>		lowp_vec1_t;$/;"	t	namespace:glm
lowp_vec2	lib/glm/detail/type_vec.hpp	/^	typedef tvec2<float, lowp>		lowp_vec2;$/;"	t	namespace:glm
lowp_vec2	lib/glm/fwd.hpp	/^	typedef tvec2<float, lowp> lowp_vec2;$/;"	t	namespace:glm
lowp_vec3	lib/glm/detail/type_vec.hpp	/^	typedef tvec3<float, lowp>		lowp_vec3;$/;"	t	namespace:glm
lowp_vec3	lib/glm/fwd.hpp	/^	typedef tvec3<float, lowp> lowp_vec3;$/;"	t	namespace:glm
lowp_vec4	lib/glm/detail/type_vec.hpp	/^	typedef tvec4<float, lowp>		lowp_vec4;$/;"	t	namespace:glm
lowp_vec4	lib/glm/fwd.hpp	/^	typedef tvec4<float, lowp> lowp_vec4;$/;"	t	namespace:glm
lpal	lib/stb/stb_image.h	/^   stbi_uc lpal[256][4];$/;"	m	struct:__anon71
mAspect	inc/window.h	/^	float mAspect;$/;"	m	class:Window
mBinPath	inc/file_manager.h	/^	std::string mBinPath, mEngineRoot, mShaderDir, mResourceDir;$/;"	m	class:FileManager
mComputeIndex	inc/device_queue_indices.h	/^	int mGraphicsIndex, mSupportedIndex, mComputeIndex, mTransferIndex;$/;"	m	class:DeviceQueueIndicies
mCondition	inc/task_manager.h	/^	std::condition_variable mCondition;$/;"	m	class:TaskManager
mContinue	inc/task_manager.h	/^	std::atomic_bool mContinue;$/;"	m	class:TaskManager
mDepthImage	inc/vulkan_manager.h	/^	VkImage mDepthImage;$/;"	m	class:VulkanManager
mDepthImageDeviceMem	inc/vulkan_manager.h	/^	VkDeviceMemory mDepthImageDeviceMem;$/;"	m	class:VulkanManager
mDepthImageView	inc/vulkan_manager.h	/^	VkImageView mDepthImageView;$/;"	m	class:VulkanManager
mDeviceQueueIndices	inc/vulkan_context.h	/^	DeviceQueueIndicies mDeviceQueueIndices;$/;"	m	class:VulkanContext
mDeviceQueueIndices	inc/vulkan_manager.h	/^	DeviceQueueIndicies mDeviceQueueIndices;$/;"	m	class:VulkanManager
mDeviceQueueIndiciesArr	inc/device_queue_indices.h	/^	int *mDeviceQueueIndiciesArr[NUM_DEVICE_QUEUE_INDICES];$/;"	m	class:DeviceQueueIndicies
mEngineRoot	inc/file_manager.h	/^	std::string mBinPath, mEngineRoot, mShaderDir, mResourceDir;$/;"	m	class:FileManager
mGlfwWindow	inc/input_manager.h	/^	GLFWwindow* mGlfwWindow;$/;"	m	class:InputManager
mGlfwWindow	inc/window.h	/^	GLFWwindow* mGlfwWindow;$/;"	m	class:Window
mGraphicsIndex	inc/device_queue_indices.h	/^	int mGraphicsIndex, mSupportedIndex, mComputeIndex, mTransferIndex;$/;"	m	class:DeviceQueueIndicies
mGraphicsQueue	inc/vulkan_context.h	/^	VkQueue mGraphicsQueue, mSupportedQueue;$/;"	m	class:VulkanContext
mGraphicsQueue	inc/vulkan_manager.h	/^	VkQueue mGraphicsQueue, mSupportedQueue;$/;"	m	class:VulkanManager
mHeight	inc/window.h	/^	unsigned mWidth, mHeight;$/;"	m	class:Window
mId	inc/task_manager.h	/^	int mId;$/;"	m	class:MessageTask
mImageAvailableSemaphore	inc/vulkan_context.h	/^	VkSemaphore mImageAvailableSemaphore, mRenderFinishedSemaphore;$/;"	m	class:VulkanContext
mImageAvailableSemaphore	inc/vulkan_manager.h	/^	VkSemaphore mImageAvailableSemaphore, mRenderFinishedSemaphore;$/;"	m	class:VulkanManager
mIndexBuffer	inc/quad.h	/^	VkBuffer mVertexBuffer, mIndexBuffer;$/;"	m	class:Quad
mInputManager	inc/window.h	/^	InputManager mInputManager;$/;"	m	class:Window
mNumIndices	inc/quad.h	/^	uint32_t mNumIndices;$/;"	m	class:Quad
mNumIndices	inc/vulkan_manager.h	/^	size_t mNumIndices;$/;"	m	class:VulkanManager
mNumIndicesFound	inc/device_queue_indices.h	/^	int mNumIndicesFound; $/;"	m	class:DeviceQueueIndicies
mNumThreads	inc/task_manager.h	/^	size_t mNumThreads;$/;"	m	class:TaskManager
mPool	inc/task_manager.h	/^	std::vector<std::thread> mPool;$/;"	m	class:TaskManager
mPresentModes	inc/vulkan_context.h	/^		std::vector<VkPresentModeKHR> mPresentModes;$/;"	m	struct:VulkanContext::SwapChainDesc
mPresentModes	inc/vulkan_manager.h	/^		std::vector<VkPresentModeKHR> mPresentModes;$/;"	m	struct:VulkanManager::SwapChainDesc
mRenderFinishedSemaphore	inc/vulkan_context.h	/^	VkSemaphore mImageAvailableSemaphore, mRenderFinishedSemaphore;$/;"	m	class:VulkanContext
mRenderFinishedSemaphore	inc/vulkan_manager.h	/^	VkSemaphore mImageAvailableSemaphore, mRenderFinishedSemaphore;$/;"	m	class:VulkanManager
mResourceDir	inc/file_manager.h	/^	std::string mBinPath, mEngineRoot, mShaderDir, mResourceDir;$/;"	m	class:FileManager
mShaderDir	inc/file_manager.h	/^	std::string mBinPath, mEngineRoot, mShaderDir, mResourceDir;$/;"	m	class:FileManager
mSupportedIndex	inc/device_queue_indices.h	/^	int mGraphicsIndex, mSupportedIndex, mComputeIndex, mTransferIndex;$/;"	m	class:DeviceQueueIndicies
mSupportedQueue	inc/vulkan_context.h	/^	VkQueue mGraphicsQueue, mSupportedQueue;$/;"	m	class:VulkanContext
mSupportedQueue	inc/vulkan_manager.h	/^	VkQueue mGraphicsQueue, mSupportedQueue;$/;"	m	class:VulkanManager
mSurfaceCapabilities	inc/vulkan_context.h	/^		VkSurfaceCapabilitiesKHR mSurfaceCapabilities;$/;"	m	struct:VulkanContext::SwapChainDesc
mSurfaceCapabilities	inc/vulkan_manager.h	/^		VkSurfaceCapabilitiesKHR mSurfaceCapabilities;$/;"	m	struct:VulkanManager::SwapChainDesc
mSurfaceFormats	inc/vulkan_context.h	/^		std::vector<VkSurfaceFormatKHR> mSurfaceFormats;$/;"	m	struct:VulkanContext::SwapChainDesc
mSurfaceFormats	inc/vulkan_manager.h	/^		std::vector<VkSurfaceFormatKHR> mSurfaceFormats;$/;"	m	struct:VulkanManager::SwapChainDesc
mSwapChainDesc	inc/vulkan_context.h	/^	SwapChainDesc mSwapChainDesc;$/;"	m	class:VulkanContext
mSwapChainDesc	inc/vulkan_manager.h	/^	SwapChainDesc mSwapChainDesc;$/;"	m	class:VulkanManager
mSwapChainExtent	inc/vulkan_context.h	/^	VkExtent2D mSwapChainExtent;$/;"	m	class:VulkanContext
mSwapChainExtent	inc/vulkan_manager.h	/^	VkExtent2D mSwapChainExtent;$/;"	m	class:VulkanManager
mSwapChainFramebuffers	inc/vulkan_context.h	/^	std::vector<VkFramebuffer> mSwapChainFramebuffers;$/;"	m	class:VulkanContext
mSwapChainFramebuffers	inc/vulkan_manager.h	/^	std::vector<VkFramebuffer> mSwapChainFramebuffers;$/;"	m	class:VulkanManager
mSwapChainImageFormat	inc/vulkan_context.h	/^	VkFormat mSwapChainImageFormat;$/;"	m	class:VulkanContext
mSwapChainImageFormat	inc/vulkan_manager.h	/^	VkFormat mSwapChainImageFormat;$/;"	m	class:VulkanManager
mSwapChainImageViews	inc/vulkan_context.h	/^	std::vector<VkImageView> mSwapChainImageViews;$/;"	m	class:VulkanContext
mSwapChainImageViews	inc/vulkan_manager.h	/^	std::vector<VkImageView> mSwapChainImageViews;$/;"	m	class:VulkanManager
mSwapChainImages	inc/vulkan_context.h	/^	std::vector<VkImage> mSwapChainImages;$/;"	m	class:VulkanContext
mSwapChainImages	inc/vulkan_manager.h	/^	std::vector<VkImage> mSwapChainImages;$/;"	m	class:VulkanManager
mTaskManager	inc/engine.h	/^	TaskManager mTaskManager;$/;"	m	class:Engine
mTasks	inc/task_manager.h	/^	std::queue<Task*> mTasks;$/;"	m	class:TaskManager
mTasksMutex	inc/task_manager.h	/^	std::mutex mTasksMutex;$/;"	m	class:TaskManager
mTextureImage	inc/vulkan_manager.h	/^	VkImage mTextureImage;$/;"	m	class:VulkanManager
mTextureImageMem	inc/vulkan_manager.h	/^	VkDeviceMemory mTextureImageMem;$/;"	m	class:VulkanManager
mTextureImageView	inc/vulkan_manager.h	/^	VkImageView mTextureImageView;$/;"	m	class:VulkanManager
mTextureSampler	inc/vulkan_manager.h	/^	VkSampler mTextureSampler;$/;"	m	class:VulkanManager
mTransferIndex	inc/device_queue_indices.h	/^	int mGraphicsIndex, mSupportedIndex, mComputeIndex, mTransferIndex;$/;"	m	class:DeviceQueueIndicies
mVertexBuffer	inc/quad.h	/^	VkBuffer mVertexBuffer, mIndexBuffer;$/;"	m	class:Quad
mVkCommandBuffers	inc/vulkan_context.h	/^	std::vector<VkCommandBuffer> mVkCommandBuffers;$/;"	m	class:VulkanContext
mVkCommandBuffers	inc/vulkan_manager.h	/^	std::vector<VkCommandBuffer> mVkCommandBuffers;$/;"	m	class:VulkanManager
mVkCommandPool	inc/vulkan_context.h	/^	VkCommandPool mVkCommandPool;$/;"	m	class:VulkanContext
mVkCommandPool	inc/vulkan_manager.h	/^	VkCommandPool mVkCommandPool;$/;"	m	class:VulkanManager
mVkDescriptorPool	inc/vulkan_manager.h	/^	VkDescriptorPool mVkDescriptorPool;$/;"	m	class:VulkanManager
mVkDescriptorSet	inc/vulkan_manager.h	/^	VkDescriptorSet mVkDescriptorSet;$/;"	m	class:VulkanManager
mVkDescriptorSetLayout	inc/vulkan_manager.h	/^	VkDescriptorSetLayout mVkDescriptorSetLayout;$/;"	m	class:VulkanManager
mVkDevice	inc/quad.h	/^	VkDevice mVkDevice;$/;"	m	class:Quad
mVkDevice	inc/vulkan_context.h	/^	VkDevice mVkDevice;$/;"	m	class:VulkanContext
mVkDevice	inc/vulkan_manager.h	/^	VkDevice mVkDevice;$/;"	m	class:VulkanManager
mVkInstance	inc/vulkan_context.h	/^	VkInstance mVkInstance;$/;"	m	class:VulkanContext
mVkInstance	inc/vulkan_manager.h	/^	VkInstance mVkInstance;$/;"	m	class:VulkanManager
mVkPhysicalDevice	inc/vulkan_context.h	/^	VkPhysicalDevice mVkPhysicalDevice;	$/;"	m	class:VulkanContext
mVkPhysicalDevice	inc/vulkan_manager.h	/^	VkPhysicalDevice mVkPhysicalDevice;	$/;"	m	class:VulkanManager
mVkPipeline	inc/vulkan_context.h	/^	VkPipeline mVkPipeline;$/;"	m	class:VulkanContext
mVkPipeline	inc/vulkan_manager.h	/^	VkPipeline mVkPipeline;$/;"	m	class:VulkanManager
mVkPipelineLayout	inc/vulkan_context.h	/^	VkPipelineLayout mVkPipelineLayout;$/;"	m	class:VulkanContext
mVkPipelineLayout	inc/vulkan_manager.h	/^	VkPipelineLayout mVkPipelineLayout;$/;"	m	class:VulkanManager
mVkRenderPass	inc/vulkan_context.h	/^	VkRenderPass mVkRenderPass;$/;"	m	class:VulkanContext
mVkRenderPass	inc/vulkan_manager.h	/^	VkRenderPass mVkRenderPass;$/;"	m	class:VulkanManager
mVkSurface	inc/vulkan_context.h	/^	VkSurfaceKHR mVkSurface;$/;"	m	class:VulkanContext
mVkSurface	inc/vulkan_manager.h	/^	VkSurfaceKHR mVkSurface;$/;"	m	class:VulkanManager
mVkSwapChain	inc/vulkan_context.h	/^	VkSwapchainKHR mVkSwapChain;$/;"	m	class:VulkanContext
mVkSwapChain	inc/vulkan_manager.h	/^	VkSwapchainKHR mVkSwapChain;$/;"	m	class:VulkanManager
mVulkanManager	inc/engine.h	/^	VulkanManager mVulkanManager;$/;"	m	class:Engine
mWidth	inc/window.h	/^	unsigned mWidth, mHeight;$/;"	m	class:Window
mWindow	inc/engine.h	/^	Window mWindow;$/;"	m	class:Engine
mWindow	inc/vulkan_manager.h	/^	const Window& mWindow;$/;"	m	class:VulkanManager
ma	lib/stb/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon68
magFilter	lib/vulkan/vulkan.h	/^    VkFilter                magFilter;$/;"	m	struct:VkSamplerCreateInfo
main	lib/glm/detail/dummy.cpp	/^int main()$/;"	f
main	main.cpp	/^int main() {$/;"	f
mapEntryCount	lib/vulkan/vulkan.h	/^    uint32_t                           mapEntryCount;$/;"	m	struct:VkSpecializationInfo
marker	lib/stb/stb_image.h	/^   unsigned char  marker;      \/\/ marker seen while filling entropy buffer$/;"	m	struct:__anon60
mat2	lib/glm/detail/type_mat.hpp	/^	typedef mat2x2					mat2;$/;"	t	namespace:glm
mat2x2	lib/glm/detail/type_mat.hpp	/^	typedef highp_mat2x2			mat2x2;$/;"	t	namespace:glm
mat2x2	lib/glm/detail/type_mat.hpp	/^	typedef lowp_mat2x2			mat2x2;$/;"	t	namespace:glm
mat2x2	lib/glm/detail/type_mat.hpp	/^	typedef mediump_mat2x2		mat2x2;$/;"	t	namespace:glm
mat2x3	lib/glm/detail/type_mat.hpp	/^	typedef highp_mat2x3			mat2x3;$/;"	t	namespace:glm
mat2x3	lib/glm/detail/type_mat.hpp	/^	typedef lowp_mat2x3			mat2x3;$/;"	t	namespace:glm
mat2x3	lib/glm/detail/type_mat.hpp	/^	typedef mediump_mat2x3		mat2x3;$/;"	t	namespace:glm
mat2x4	lib/glm/detail/type_mat.hpp	/^	typedef highp_mat2x4			mat2x4;$/;"	t	namespace:glm
mat2x4	lib/glm/detail/type_mat.hpp	/^	typedef lowp_mat2x4			mat2x4;$/;"	t	namespace:glm
mat2x4	lib/glm/detail/type_mat.hpp	/^	typedef mediump_mat2x4		mat2x4;$/;"	t	namespace:glm
mat3	lib/glm/detail/type_mat.hpp	/^	typedef mat3x3					mat3;$/;"	t	namespace:glm
mat3x2	lib/glm/detail/type_mat.hpp	/^	typedef highp_mat3x2			mat3x2;$/;"	t	namespace:glm
mat3x2	lib/glm/detail/type_mat.hpp	/^	typedef lowp_mat3x2			mat3x2;$/;"	t	namespace:glm
mat3x2	lib/glm/detail/type_mat.hpp	/^	typedef mediump_mat3x2		mat3x2;$/;"	t	namespace:glm
mat3x3	lib/glm/detail/type_mat.hpp	/^	typedef highp_mat3x3			mat3x3;$/;"	t	namespace:glm
mat3x3	lib/glm/detail/type_mat.hpp	/^	typedef lowp_mat3x3			mat3x3;$/;"	t	namespace:glm
mat3x3	lib/glm/detail/type_mat.hpp	/^	typedef mediump_mat3x3		mat3x3;$/;"	t	namespace:glm
mat3x4	lib/glm/detail/type_mat.hpp	/^	typedef highp_mat3x4			mat3x4;$/;"	t	namespace:glm
mat3x4	lib/glm/detail/type_mat.hpp	/^	typedef lowp_mat3x4			mat3x4;$/;"	t	namespace:glm
mat3x4	lib/glm/detail/type_mat.hpp	/^	typedef mediump_mat3x4		mat3x4;$/;"	t	namespace:glm
mat4	lib/glm/detail/type_mat.hpp	/^	typedef mat4x4					mat4;$/;"	t	namespace:glm
mat4x2	lib/glm/detail/type_mat.hpp	/^	typedef highp_mat4x2			mat4x2;$/;"	t	namespace:glm
mat4x2	lib/glm/detail/type_mat.hpp	/^	typedef lowp_mat4x2			mat4x2;$/;"	t	namespace:glm
mat4x2	lib/glm/detail/type_mat.hpp	/^	typedef mediump_mat4x2		mat4x2;$/;"	t	namespace:glm
mat4x3	lib/glm/detail/type_mat.hpp	/^	typedef highp_mat4x3			mat4x3;$/;"	t	namespace:glm
mat4x3	lib/glm/detail/type_mat.hpp	/^	typedef lowp_mat4x3			mat4x3;$/;"	t	namespace:glm
mat4x3	lib/glm/detail/type_mat.hpp	/^	typedef mediump_mat4x3		mat4x3;$/;"	t	namespace:glm
mat4x4	lib/glm/detail/type_mat.hpp	/^	typedef highp_mat4x4			mat4x4;$/;"	t	namespace:glm
mat4x4	lib/glm/detail/type_mat.hpp	/^	typedef lowp_mat4x4			mat4x4;$/;"	t	namespace:glm
mat4x4	lib/glm/detail/type_mat.hpp	/^	typedef mediump_mat4x4		mat4x4;$/;"	t	namespace:glm
max	lib/glm/detail/_fixes.hpp	8;"	d
maxAnisotropy	lib/vulkan/vulkan.h	/^    float                   maxAnisotropy;$/;"	m	struct:VkSamplerCreateInfo
maxArrayLayers	lib/vulkan/vulkan.h	/^    uint32_t              maxArrayLayers;$/;"	m	struct:VkImageFormatProperties
maxBoundDescriptorSets	lib/vulkan/vulkan.h	/^    uint32_t              maxBoundDescriptorSets;$/;"	m	struct:VkPhysicalDeviceLimits
maxClipDistances	lib/vulkan/vulkan.h	/^    uint32_t              maxClipDistances;$/;"	m	struct:VkPhysicalDeviceLimits
maxColorAttachments	lib/vulkan/vulkan.h	/^    uint32_t              maxColorAttachments;$/;"	m	struct:VkPhysicalDeviceLimits
maxCombinedClipAndCullDistances	lib/vulkan/vulkan.h	/^    uint32_t              maxCombinedClipAndCullDistances;$/;"	m	struct:VkPhysicalDeviceLimits
maxComputeSharedMemorySize	lib/vulkan/vulkan.h	/^    uint32_t              maxComputeSharedMemorySize;$/;"	m	struct:VkPhysicalDeviceLimits
maxComputeWorkGroupCount	lib/vulkan/vulkan.h	/^    uint32_t              maxComputeWorkGroupCount[3];$/;"	m	struct:VkPhysicalDeviceLimits
maxComputeWorkGroupInvocations	lib/vulkan/vulkan.h	/^    uint32_t              maxComputeWorkGroupInvocations;$/;"	m	struct:VkPhysicalDeviceLimits
maxComputeWorkGroupSize	lib/vulkan/vulkan.h	/^    uint32_t              maxComputeWorkGroupSize[3];$/;"	m	struct:VkPhysicalDeviceLimits
maxCullDistances	lib/vulkan/vulkan.h	/^    uint32_t              maxCullDistances;$/;"	m	struct:VkPhysicalDeviceLimits
maxDepth	lib/vulkan/vulkan.h	/^    float    maxDepth;$/;"	m	struct:VkViewport
maxDepthBounds	lib/vulkan/vulkan.h	/^    float                                     maxDepthBounds;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
maxDescriptorSetInputAttachments	lib/vulkan/vulkan.h	/^    uint32_t              maxDescriptorSetInputAttachments;$/;"	m	struct:VkPhysicalDeviceLimits
maxDescriptorSetSampledImages	lib/vulkan/vulkan.h	/^    uint32_t              maxDescriptorSetSampledImages;$/;"	m	struct:VkPhysicalDeviceLimits
maxDescriptorSetSamplers	lib/vulkan/vulkan.h	/^    uint32_t              maxDescriptorSetSamplers;$/;"	m	struct:VkPhysicalDeviceLimits
maxDescriptorSetStorageBuffers	lib/vulkan/vulkan.h	/^    uint32_t              maxDescriptorSetStorageBuffers;$/;"	m	struct:VkPhysicalDeviceLimits
maxDescriptorSetStorageBuffersDynamic	lib/vulkan/vulkan.h	/^    uint32_t              maxDescriptorSetStorageBuffersDynamic;$/;"	m	struct:VkPhysicalDeviceLimits
maxDescriptorSetStorageImages	lib/vulkan/vulkan.h	/^    uint32_t              maxDescriptorSetStorageImages;$/;"	m	struct:VkPhysicalDeviceLimits
maxDescriptorSetUniformBuffers	lib/vulkan/vulkan.h	/^    uint32_t              maxDescriptorSetUniformBuffers;$/;"	m	struct:VkPhysicalDeviceLimits
maxDescriptorSetUniformBuffersDynamic	lib/vulkan/vulkan.h	/^    uint32_t              maxDescriptorSetUniformBuffersDynamic;$/;"	m	struct:VkPhysicalDeviceLimits
maxDrawIndexedIndexValue	lib/vulkan/vulkan.h	/^    uint32_t              maxDrawIndexedIndexValue;$/;"	m	struct:VkPhysicalDeviceLimits
maxDrawIndirectCount	lib/vulkan/vulkan.h	/^    uint32_t              maxDrawIndirectCount;$/;"	m	struct:VkPhysicalDeviceLimits
maxDstExtent	lib/vulkan/vulkan.h	/^    VkExtent2D                     maxDstExtent;$/;"	m	struct:VkDisplayPlaneCapabilitiesKHR
maxDstPosition	lib/vulkan/vulkan.h	/^    VkOffset2D                     maxDstPosition;$/;"	m	struct:VkDisplayPlaneCapabilitiesKHR
maxExtent	lib/vulkan/vulkan.h	/^    VkExtent3D            maxExtent;$/;"	m	struct:VkImageFormatProperties
maxFragmentCombinedOutputResources	lib/vulkan/vulkan.h	/^    uint32_t              maxFragmentCombinedOutputResources;$/;"	m	struct:VkPhysicalDeviceLimits
maxFragmentDualSrcAttachments	lib/vulkan/vulkan.h	/^    uint32_t              maxFragmentDualSrcAttachments;$/;"	m	struct:VkPhysicalDeviceLimits
maxFragmentInputComponents	lib/vulkan/vulkan.h	/^    uint32_t              maxFragmentInputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxFragmentOutputAttachments	lib/vulkan/vulkan.h	/^    uint32_t              maxFragmentOutputAttachments;$/;"	m	struct:VkPhysicalDeviceLimits
maxFramebufferHeight	lib/vulkan/vulkan.h	/^    uint32_t              maxFramebufferHeight;$/;"	m	struct:VkPhysicalDeviceLimits
maxFramebufferLayers	lib/vulkan/vulkan.h	/^    uint32_t              maxFramebufferLayers;$/;"	m	struct:VkPhysicalDeviceLimits
maxFramebufferWidth	lib/vulkan/vulkan.h	/^    uint32_t              maxFramebufferWidth;$/;"	m	struct:VkPhysicalDeviceLimits
maxGeometryInputComponents	lib/vulkan/vulkan.h	/^    uint32_t              maxGeometryInputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxGeometryOutputComponents	lib/vulkan/vulkan.h	/^    uint32_t              maxGeometryOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxGeometryOutputVertices	lib/vulkan/vulkan.h	/^    uint32_t              maxGeometryOutputVertices;$/;"	m	struct:VkPhysicalDeviceLimits
maxGeometryShaderInvocations	lib/vulkan/vulkan.h	/^    uint32_t              maxGeometryShaderInvocations;$/;"	m	struct:VkPhysicalDeviceLimits
maxGeometryTotalOutputComponents	lib/vulkan/vulkan.h	/^    uint32_t              maxGeometryTotalOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxImageArrayLayers	lib/vulkan/vulkan.h	/^    uint32_t                         maxImageArrayLayers;$/;"	m	struct:VkSurfaceCapabilitiesKHR
maxImageArrayLayers	lib/vulkan/vulkan.h	/^    uint32_t              maxImageArrayLayers;$/;"	m	struct:VkPhysicalDeviceLimits
maxImageCount	lib/vulkan/vulkan.h	/^    uint32_t                         maxImageCount;$/;"	m	struct:VkSurfaceCapabilitiesKHR
maxImageDimension1D	lib/vulkan/vulkan.h	/^    uint32_t              maxImageDimension1D;$/;"	m	struct:VkPhysicalDeviceLimits
maxImageDimension2D	lib/vulkan/vulkan.h	/^    uint32_t              maxImageDimension2D;$/;"	m	struct:VkPhysicalDeviceLimits
maxImageDimension3D	lib/vulkan/vulkan.h	/^    uint32_t              maxImageDimension3D;$/;"	m	struct:VkPhysicalDeviceLimits
maxImageDimensionCube	lib/vulkan/vulkan.h	/^    uint32_t              maxImageDimensionCube;$/;"	m	struct:VkPhysicalDeviceLimits
maxImageExtent	lib/vulkan/vulkan.h	/^    VkExtent2D                       maxImageExtent;$/;"	m	struct:VkSurfaceCapabilitiesKHR
maxInterpolationOffset	lib/vulkan/vulkan.h	/^    float                 maxInterpolationOffset;$/;"	m	struct:VkPhysicalDeviceLimits
maxLod	lib/vulkan/vulkan.h	/^    float                   maxLod;$/;"	m	struct:VkSamplerCreateInfo
maxMemoryAllocationCount	lib/vulkan/vulkan.h	/^    uint32_t              maxMemoryAllocationCount;$/;"	m	struct:VkPhysicalDeviceLimits
maxMipLevels	lib/vulkan/vulkan.h	/^    uint32_t              maxMipLevels;$/;"	m	struct:VkImageFormatProperties
maxPerStageDescriptorInputAttachments	lib/vulkan/vulkan.h	/^    uint32_t              maxPerStageDescriptorInputAttachments;$/;"	m	struct:VkPhysicalDeviceLimits
maxPerStageDescriptorSampledImages	lib/vulkan/vulkan.h	/^    uint32_t              maxPerStageDescriptorSampledImages;$/;"	m	struct:VkPhysicalDeviceLimits
maxPerStageDescriptorSamplers	lib/vulkan/vulkan.h	/^    uint32_t              maxPerStageDescriptorSamplers;$/;"	m	struct:VkPhysicalDeviceLimits
maxPerStageDescriptorStorageBuffers	lib/vulkan/vulkan.h	/^    uint32_t              maxPerStageDescriptorStorageBuffers;$/;"	m	struct:VkPhysicalDeviceLimits
maxPerStageDescriptorStorageImages	lib/vulkan/vulkan.h	/^    uint32_t              maxPerStageDescriptorStorageImages;$/;"	m	struct:VkPhysicalDeviceLimits
maxPerStageDescriptorUniformBuffers	lib/vulkan/vulkan.h	/^    uint32_t              maxPerStageDescriptorUniformBuffers;$/;"	m	struct:VkPhysicalDeviceLimits
maxPerStageResources	lib/vulkan/vulkan.h	/^    uint32_t              maxPerStageResources;$/;"	m	struct:VkPhysicalDeviceLimits
maxPushConstantsSize	lib/vulkan/vulkan.h	/^    uint32_t              maxPushConstantsSize;$/;"	m	struct:VkPhysicalDeviceLimits
maxResourceSize	lib/vulkan/vulkan.h	/^    VkDeviceSize          maxResourceSize;$/;"	m	struct:VkImageFormatProperties
maxSampleMaskWords	lib/vulkan/vulkan.h	/^    uint32_t              maxSampleMaskWords;$/;"	m	struct:VkPhysicalDeviceLimits
maxSamplerAllocationCount	lib/vulkan/vulkan.h	/^    uint32_t              maxSamplerAllocationCount;$/;"	m	struct:VkPhysicalDeviceLimits
maxSamplerAnisotropy	lib/vulkan/vulkan.h	/^    float                 maxSamplerAnisotropy;$/;"	m	struct:VkPhysicalDeviceLimits
maxSamplerLodBias	lib/vulkan/vulkan.h	/^    float                 maxSamplerLodBias;$/;"	m	struct:VkPhysicalDeviceLimits
maxSets	lib/vulkan/vulkan.h	/^    uint32_t                       maxSets;$/;"	m	struct:VkDescriptorPoolCreateInfo
maxSrcExtent	lib/vulkan/vulkan.h	/^    VkExtent2D                     maxSrcExtent;$/;"	m	struct:VkDisplayPlaneCapabilitiesKHR
maxSrcPosition	lib/vulkan/vulkan.h	/^    VkOffset2D                     maxSrcPosition;$/;"	m	struct:VkDisplayPlaneCapabilitiesKHR
maxStorageBufferRange	lib/vulkan/vulkan.h	/^    uint32_t              maxStorageBufferRange;$/;"	m	struct:VkPhysicalDeviceLimits
maxTessellationControlPerPatchOutputComponents	lib/vulkan/vulkan.h	/^    uint32_t              maxTessellationControlPerPatchOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxTessellationControlPerVertexInputComponents	lib/vulkan/vulkan.h	/^    uint32_t              maxTessellationControlPerVertexInputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxTessellationControlPerVertexOutputComponents	lib/vulkan/vulkan.h	/^    uint32_t              maxTessellationControlPerVertexOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxTessellationControlTotalOutputComponents	lib/vulkan/vulkan.h	/^    uint32_t              maxTessellationControlTotalOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxTessellationEvaluationInputComponents	lib/vulkan/vulkan.h	/^    uint32_t              maxTessellationEvaluationInputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxTessellationEvaluationOutputComponents	lib/vulkan/vulkan.h	/^    uint32_t              maxTessellationEvaluationOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxTessellationGenerationLevel	lib/vulkan/vulkan.h	/^    uint32_t              maxTessellationGenerationLevel;$/;"	m	struct:VkPhysicalDeviceLimits
maxTessellationPatchSize	lib/vulkan/vulkan.h	/^    uint32_t              maxTessellationPatchSize;$/;"	m	struct:VkPhysicalDeviceLimits
maxTexelBufferElements	lib/vulkan/vulkan.h	/^    uint32_t              maxTexelBufferElements;$/;"	m	struct:VkPhysicalDeviceLimits
maxTexelGatherOffset	lib/vulkan/vulkan.h	/^    uint32_t              maxTexelGatherOffset;$/;"	m	struct:VkPhysicalDeviceLimits
maxTexelOffset	lib/vulkan/vulkan.h	/^    uint32_t              maxTexelOffset;$/;"	m	struct:VkPhysicalDeviceLimits
maxUniformBufferRange	lib/vulkan/vulkan.h	/^    uint32_t              maxUniformBufferRange;$/;"	m	struct:VkPhysicalDeviceLimits
maxVertexInputAttributeOffset	lib/vulkan/vulkan.h	/^    uint32_t              maxVertexInputAttributeOffset;$/;"	m	struct:VkPhysicalDeviceLimits
maxVertexInputAttributes	lib/vulkan/vulkan.h	/^    uint32_t              maxVertexInputAttributes;$/;"	m	struct:VkPhysicalDeviceLimits
maxVertexInputBindingStride	lib/vulkan/vulkan.h	/^    uint32_t              maxVertexInputBindingStride;$/;"	m	struct:VkPhysicalDeviceLimits
maxVertexInputBindings	lib/vulkan/vulkan.h	/^    uint32_t              maxVertexInputBindings;$/;"	m	struct:VkPhysicalDeviceLimits
maxVertexOutputComponents	lib/vulkan/vulkan.h	/^    uint32_t              maxVertexOutputComponents;$/;"	m	struct:VkPhysicalDeviceLimits
maxViewportDimensions	lib/vulkan/vulkan.h	/^    uint32_t              maxViewportDimensions[2];$/;"	m	struct:VkPhysicalDeviceLimits
maxViewports	lib/vulkan/vulkan.h	/^    uint32_t              maxViewports;$/;"	m	struct:VkPhysicalDeviceLimits
max_x	lib/stb/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon71
max_y	lib/stb/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon71
maxcode	lib/stb/stb_image.h	/^   int maxcode[17];$/;"	m	struct:__anon63
maxcode	lib/stb/stb_image.h	/^   unsigned int maxcode[18];$/;"	m	struct:__anon59
mb	lib/stb/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon68
mediump	lib/glm/detail/precision.hpp	/^		mediump = packed_mediump,$/;"	e	enum:glm::precision
mediump_bvec1	lib/glm/gtc/vec1.hpp	/^	typedef mediump_bvec1_t			mediump_bvec1;$/;"	t	namespace:glm
mediump_bvec1_t	lib/glm/detail/type_vec.hpp	/^	typedef tvec1<bool, mediump>	mediump_bvec1_t;$/;"	t	namespace:glm
mediump_bvec2	lib/glm/detail/type_vec.hpp	/^	typedef tvec2<bool, mediump>	mediump_bvec2;$/;"	t	namespace:glm
mediump_bvec3	lib/glm/detail/type_vec.hpp	/^	typedef tvec3<bool, mediump>	mediump_bvec3;$/;"	t	namespace:glm
mediump_bvec4	lib/glm/detail/type_vec.hpp	/^	typedef tvec4<bool, mediump>	mediump_bvec4;$/;"	t	namespace:glm
mediump_ddualquat	lib/glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<double, mediump>	mediump_ddualquat;$/;"	t	namespace:glm
mediump_dmat2	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x2<double, mediump>	mediump_dmat2;$/;"	t	namespace:glm
mediump_dmat2x2	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x2<double, mediump>	mediump_dmat2x2;$/;"	t	namespace:glm
mediump_dmat2x3	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x3<double, mediump>	mediump_dmat2x3;$/;"	t	namespace:glm
mediump_dmat2x4	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x4<double, mediump>	mediump_dmat2x4;$/;"	t	namespace:glm
mediump_dmat3	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x3<double, mediump>	mediump_dmat3;$/;"	t	namespace:glm
mediump_dmat3x2	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x2<double, mediump>	mediump_dmat3x2;$/;"	t	namespace:glm
mediump_dmat3x3	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x3<double, mediump>	mediump_dmat3x3;$/;"	t	namespace:glm
mediump_dmat3x4	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x4<double, mediump>	mediump_dmat3x4;$/;"	t	namespace:glm
mediump_dmat4	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x4<double, mediump>	mediump_dmat4;$/;"	t	namespace:glm
mediump_dmat4x2	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x2<double, mediump>	mediump_dmat4x2;$/;"	t	namespace:glm
mediump_dmat4x3	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x3<double, mediump>	mediump_dmat4x3;$/;"	t	namespace:glm
mediump_dmat4x4	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x4<double, mediump>	mediump_dmat4x4;$/;"	t	namespace:glm
mediump_dquat	lib/glm/fwd.hpp	/^	typedef tquat<double, mediump>	mediump_dquat;$/;"	t	namespace:glm
mediump_dualquat	lib/glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, mediump>	mediump_dualquat;$/;"	t	namespace:glm
mediump_dvec1	lib/glm/gtc/vec1.hpp	/^	typedef mediump_dvec1_t			mediump_dvec1;$/;"	t	namespace:glm
mediump_dvec1_t	lib/glm/detail/type_vec.hpp	/^	typedef tvec1<double, mediump>	mediump_dvec1_t;$/;"	t	namespace:glm
mediump_dvec2	lib/glm/detail/type_vec.hpp	/^	typedef tvec2<double, mediump>	mediump_dvec2;$/;"	t	namespace:glm
mediump_dvec3	lib/glm/detail/type_vec.hpp	/^	typedef tvec3<double, mediump>	mediump_dvec3;$/;"	t	namespace:glm
mediump_dvec4	lib/glm/detail/type_vec.hpp	/^	typedef tvec4<double, mediump>	mediump_dvec4;$/;"	t	namespace:glm
mediump_f32	lib/glm/fwd.hpp	/^	typedef float32 mediump_f32;$/;"	t	namespace:glm
mediump_f32mat2	lib/glm/fwd.hpp	/^	typedef mediump_f32mat2x2 mediump_f32mat2;$/;"	t	namespace:glm
mediump_f32mat2x2	lib/glm/fwd.hpp	/^	typedef tmat2x2<f32, mediump> mediump_f32mat2x2;$/;"	t	namespace:glm
mediump_f32mat2x3	lib/glm/fwd.hpp	/^	typedef tmat2x3<f32, mediump> mediump_f32mat2x3;$/;"	t	namespace:glm
mediump_f32mat2x4	lib/glm/fwd.hpp	/^	typedef tmat2x4<f32, mediump> mediump_f32mat2x4;$/;"	t	namespace:glm
mediump_f32mat3	lib/glm/fwd.hpp	/^	typedef mediump_f32mat3x3 mediump_f32mat3;$/;"	t	namespace:glm
mediump_f32mat3x2	lib/glm/fwd.hpp	/^	typedef tmat3x2<f32, mediump> mediump_f32mat3x2;$/;"	t	namespace:glm
mediump_f32mat3x3	lib/glm/fwd.hpp	/^	typedef tmat3x3<f32, mediump> mediump_f32mat3x3;$/;"	t	namespace:glm
mediump_f32mat3x4	lib/glm/fwd.hpp	/^	typedef tmat3x4<f32, mediump> mediump_f32mat3x4;$/;"	t	namespace:glm
mediump_f32mat4	lib/glm/fwd.hpp	/^	typedef mediump_f32mat4x4 mediump_f32mat4;$/;"	t	namespace:glm
mediump_f32mat4x2	lib/glm/fwd.hpp	/^	typedef tmat4x2<f32, mediump> mediump_f32mat4x2;$/;"	t	namespace:glm
mediump_f32mat4x3	lib/glm/fwd.hpp	/^	typedef tmat4x3<f32, mediump> mediump_f32mat4x3;$/;"	t	namespace:glm
mediump_f32mat4x4	lib/glm/fwd.hpp	/^	typedef tmat4x4<f32, mediump> mediump_f32mat4x4;$/;"	t	namespace:glm
mediump_f32quat	lib/glm/fwd.hpp	/^	typedef tquat<f32, mediump> mediump_f32quat;$/;"	t	namespace:glm
mediump_f32vec1	lib/glm/fwd.hpp	/^	typedef tvec1<f32, mediump> mediump_f32vec1;$/;"	t	namespace:glm
mediump_f32vec2	lib/glm/fwd.hpp	/^	typedef tvec2<f32, mediump> mediump_f32vec2;$/;"	t	namespace:glm
mediump_f32vec3	lib/glm/fwd.hpp	/^	typedef tvec3<f32, mediump> mediump_f32vec3;$/;"	t	namespace:glm
mediump_f32vec4	lib/glm/fwd.hpp	/^	typedef tvec4<f32, mediump> mediump_f32vec4;$/;"	t	namespace:glm
mediump_f64	lib/glm/fwd.hpp	/^	typedef float64 mediump_f64;$/;"	t	namespace:glm
mediump_f64mat2	lib/glm/fwd.hpp	/^	typedef mediump_f64mat2x2 mediump_f64mat2;$/;"	t	namespace:glm
mediump_f64mat2x2	lib/glm/fwd.hpp	/^	typedef tmat2x2<f64, mediump> mediump_f64mat2x2;$/;"	t	namespace:glm
mediump_f64mat2x3	lib/glm/fwd.hpp	/^	typedef tmat2x3<f64, mediump> mediump_f64mat2x3;$/;"	t	namespace:glm
mediump_f64mat2x4	lib/glm/fwd.hpp	/^	typedef tmat2x4<f64, mediump> mediump_f64mat2x4;$/;"	t	namespace:glm
mediump_f64mat3	lib/glm/fwd.hpp	/^	typedef mediump_f64mat3x3 mediump_f64mat3;$/;"	t	namespace:glm
mediump_f64mat3x2	lib/glm/fwd.hpp	/^	typedef tmat3x2<f64, mediump> mediump_f64mat3x2;$/;"	t	namespace:glm
mediump_f64mat3x3	lib/glm/fwd.hpp	/^	typedef tmat3x3<f64, mediump> mediump_f64mat3x3;$/;"	t	namespace:glm
mediump_f64mat3x4	lib/glm/fwd.hpp	/^	typedef tmat3x4<f64, mediump> mediump_f64mat3x4;$/;"	t	namespace:glm
mediump_f64mat4	lib/glm/fwd.hpp	/^	typedef mediump_f64mat4x4 mediump_f64mat4;$/;"	t	namespace:glm
mediump_f64mat4x2	lib/glm/fwd.hpp	/^	typedef tmat4x2<f64, mediump> mediump_f64mat4x2;$/;"	t	namespace:glm
mediump_f64mat4x3	lib/glm/fwd.hpp	/^	typedef tmat4x3<f64, mediump> mediump_f64mat4x3;$/;"	t	namespace:glm
mediump_f64mat4x4	lib/glm/fwd.hpp	/^	typedef tmat4x4<f64, mediump> mediump_f64mat4x4;$/;"	t	namespace:glm
mediump_f64quat	lib/glm/fwd.hpp	/^	typedef tquat<f64, mediump> mediump_f64quat;$/;"	t	namespace:glm
mediump_f64vec1	lib/glm/fwd.hpp	/^	typedef tvec1<f64, mediump> mediump_f64vec1;$/;"	t	namespace:glm
mediump_f64vec2	lib/glm/fwd.hpp	/^	typedef tvec2<f64, mediump> mediump_f64vec2;$/;"	t	namespace:glm
mediump_f64vec3	lib/glm/fwd.hpp	/^	typedef tvec3<f64, mediump> mediump_f64vec3;$/;"	t	namespace:glm
mediump_f64vec4	lib/glm/fwd.hpp	/^	typedef tvec4<f64, mediump> mediump_f64vec4;$/;"	t	namespace:glm
mediump_fdualquat	lib/glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, mediump>	mediump_fdualquat;$/;"	t	namespace:glm
mediump_float	lib/glm/detail/type_float.hpp	/^	typedef mediump_float_t		mediump_float;$/;"	t	namespace:glm
mediump_float32	lib/glm/fwd.hpp	/^	typedef detail::float32 mediump_float32;$/;"	t	namespace:glm
mediump_float32_t	lib/glm/fwd.hpp	/^	typedef detail::float32 mediump_float32_t;$/;"	t	namespace:glm
mediump_float64	lib/glm/fwd.hpp	/^	typedef detail::float64 mediump_float64;$/;"	t	namespace:glm
mediump_float64_t	lib/glm/fwd.hpp	/^	typedef detail::float64 mediump_float64_t;$/;"	t	namespace:glm
mediump_float_t	lib/glm/detail/type_float.hpp	/^	typedef float				mediump_float_t;$/;"	t	namespace:glm
mediump_fmat2	lib/glm/fwd.hpp	/^	typedef mediump_fmat2x2 mediump_fmat2;$/;"	t	namespace:glm
mediump_fmat2x2	lib/glm/fwd.hpp	/^	typedef tmat2x2<f32, mediump> mediump_fmat2x2;$/;"	t	namespace:glm
mediump_fmat2x3	lib/glm/fwd.hpp	/^	typedef tmat2x3<f32, mediump> mediump_fmat2x3;$/;"	t	namespace:glm
mediump_fmat2x4	lib/glm/fwd.hpp	/^	typedef tmat2x4<f32, mediump> mediump_fmat2x4;$/;"	t	namespace:glm
mediump_fmat3	lib/glm/fwd.hpp	/^	typedef mediump_fmat3x3 mediump_fmat3;$/;"	t	namespace:glm
mediump_fmat3x2	lib/glm/fwd.hpp	/^	typedef tmat3x2<f32, mediump> mediump_fmat3x2;$/;"	t	namespace:glm
mediump_fmat3x3	lib/glm/fwd.hpp	/^	typedef tmat3x3<f32, mediump> mediump_fmat3x3;$/;"	t	namespace:glm
mediump_fmat3x4	lib/glm/fwd.hpp	/^	typedef tmat3x4<f32, mediump> mediump_fmat3x4;$/;"	t	namespace:glm
mediump_fmat4	lib/glm/fwd.hpp	/^	typedef mediump_fmat4x4 mediump_fmat4;$/;"	t	namespace:glm
mediump_fmat4x2	lib/glm/fwd.hpp	/^	typedef tmat4x2<f32, mediump> mediump_fmat4x2;$/;"	t	namespace:glm
mediump_fmat4x3	lib/glm/fwd.hpp	/^	typedef tmat4x3<f32, mediump> mediump_fmat4x3;$/;"	t	namespace:glm
mediump_fmat4x4	lib/glm/fwd.hpp	/^	typedef tmat4x4<f32, mediump> mediump_fmat4x4;$/;"	t	namespace:glm
mediump_fquat	lib/glm/fwd.hpp	/^	typedef mediump_quat		mediump_fquat;$/;"	t	namespace:glm
mediump_fvec1	lib/glm/fwd.hpp	/^	typedef tvec1<float, mediump> mediump_fvec1;$/;"	t	namespace:glm
mediump_fvec2	lib/glm/fwd.hpp	/^	typedef tvec2<float, mediump> mediump_fvec2;$/;"	t	namespace:glm
mediump_fvec3	lib/glm/fwd.hpp	/^	typedef tvec3<float, mediump> mediump_fvec3;$/;"	t	namespace:glm
mediump_fvec4	lib/glm/fwd.hpp	/^	typedef tvec4<float, mediump> mediump_fvec4;$/;"	t	namespace:glm
mediump_i16	lib/glm/fwd.hpp	/^	typedef detail::int16 mediump_i16;$/;"	t	namespace:glm
mediump_i16	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int16 mediump_i16;$/;"	t	namespace:glm
mediump_i16vec1	lib/glm/fwd.hpp	/^	typedef tvec1<i16, mediump>		mediump_i16vec1;$/;"	t	namespace:glm
mediump_i16vec2	lib/glm/fwd.hpp	/^	typedef tvec2<i16, mediump>		mediump_i16vec2;$/;"	t	namespace:glm
mediump_i16vec3	lib/glm/fwd.hpp	/^	typedef tvec3<i16, mediump>		mediump_i16vec3;$/;"	t	namespace:glm
mediump_i16vec4	lib/glm/fwd.hpp	/^	typedef tvec4<i16, mediump>		mediump_i16vec4;$/;"	t	namespace:glm
mediump_i32	lib/glm/fwd.hpp	/^	typedef detail::int32 mediump_i32;$/;"	t	namespace:glm
mediump_i32	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int32 mediump_i32;$/;"	t	namespace:glm
mediump_i32vec1	lib/glm/fwd.hpp	/^	typedef tvec1<i32, mediump>		mediump_i32vec1;$/;"	t	namespace:glm
mediump_i32vec2	lib/glm/fwd.hpp	/^	typedef tvec2<i32, mediump>		mediump_i32vec2;$/;"	t	namespace:glm
mediump_i32vec3	lib/glm/fwd.hpp	/^	typedef tvec3<i32, mediump>		mediump_i32vec3;$/;"	t	namespace:glm
mediump_i32vec4	lib/glm/fwd.hpp	/^	typedef tvec4<i32, mediump>		mediump_i32vec4;$/;"	t	namespace:glm
mediump_i64	lib/glm/fwd.hpp	/^	typedef detail::int64 mediump_i64;$/;"	t	namespace:glm
mediump_i64	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int64 mediump_i64;$/;"	t	namespace:glm
mediump_i64vec1	lib/glm/fwd.hpp	/^	typedef tvec1<i64, mediump>		mediump_i64vec1;$/;"	t	namespace:glm
mediump_i64vec2	lib/glm/fwd.hpp	/^	typedef tvec2<i64, mediump>		mediump_i64vec2;$/;"	t	namespace:glm
mediump_i64vec3	lib/glm/fwd.hpp	/^	typedef tvec3<i64, mediump>		mediump_i64vec3;$/;"	t	namespace:glm
mediump_i64vec4	lib/glm/fwd.hpp	/^	typedef tvec4<i64, mediump>		mediump_i64vec4;$/;"	t	namespace:glm
mediump_i8	lib/glm/fwd.hpp	/^	typedef detail::int8 mediump_i8;$/;"	t	namespace:glm
mediump_i8	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int8 mediump_i8;$/;"	t	namespace:glm
mediump_i8vec1	lib/glm/fwd.hpp	/^	typedef tvec1<i8, mediump> mediump_i8vec1;$/;"	t	namespace:glm
mediump_i8vec2	lib/glm/fwd.hpp	/^	typedef tvec2<i8, mediump> mediump_i8vec2;$/;"	t	namespace:glm
mediump_i8vec3	lib/glm/fwd.hpp	/^	typedef tvec3<i8, mediump> mediump_i8vec3;$/;"	t	namespace:glm
mediump_i8vec4	lib/glm/fwd.hpp	/^	typedef tvec4<i8, mediump> mediump_i8vec4;$/;"	t	namespace:glm
mediump_imat2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<int, mediump>			mediump_imat2;$/;"	t	namespace:glm
mediump_imat2x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<int, mediump>			mediump_imat2x2;$/;"	t	namespace:glm
mediump_imat2x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x3<int, mediump>			mediump_imat2x3;$/;"	t	namespace:glm
mediump_imat2x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x4<int, mediump>			mediump_imat2x4;$/;"	t	namespace:glm
mediump_imat3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<int, mediump>			mediump_imat3;$/;"	t	namespace:glm
mediump_imat3x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x2<int, mediump>			mediump_imat3x2;$/;"	t	namespace:glm
mediump_imat3x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<int, mediump>			mediump_imat3x3;$/;"	t	namespace:glm
mediump_imat3x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x4<int, mediump>			mediump_imat3x4;$/;"	t	namespace:glm
mediump_imat4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<int, mediump>			mediump_imat4;$/;"	t	namespace:glm
mediump_imat4x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x2<int, mediump>			mediump_imat4x2;$/;"	t	namespace:glm
mediump_imat4x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x3<int, mediump>			mediump_imat4x3;$/;"	t	namespace:glm
mediump_imat4x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<int, mediump>			mediump_imat4x4;$/;"	t	namespace:glm
mediump_int	lib/glm/detail/type_int.hpp	/^	typedef detail::mediump_int_t			mediump_int;$/;"	t	namespace:glm
mediump_int16	lib/glm/fwd.hpp	/^	typedef detail::int16 mediump_int16;$/;"	t	namespace:glm
mediump_int16	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int16 mediump_int16;$/;"	t	namespace:glm
mediump_int16_t	lib/glm/fwd.hpp	/^	typedef detail::int16 mediump_int16_t;$/;"	t	namespace:glm
mediump_int16_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int16 mediump_int16_t;$/;"	t	namespace:glm
mediump_int32	lib/glm/fwd.hpp	/^	typedef detail::int32 mediump_int32;$/;"	t	namespace:glm
mediump_int32	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int32 mediump_int32;$/;"	t	namespace:glm
mediump_int32_t	lib/glm/fwd.hpp	/^	typedef detail::int32 mediump_int32_t;$/;"	t	namespace:glm
mediump_int32_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int32 mediump_int32_t;$/;"	t	namespace:glm
mediump_int64	lib/glm/fwd.hpp	/^	typedef detail::int64 mediump_int64;$/;"	t	namespace:glm
mediump_int64	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int64 mediump_int64;$/;"	t	namespace:glm
mediump_int64_t	lib/glm/fwd.hpp	/^	typedef detail::int64 mediump_int64_t;$/;"	t	namespace:glm
mediump_int64_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int64 mediump_int64_t;$/;"	t	namespace:glm
mediump_int8	lib/glm/fwd.hpp	/^	typedef detail::int8 mediump_int8;$/;"	t	namespace:glm
mediump_int8	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int8 mediump_int8;$/;"	t	namespace:glm
mediump_int8_t	lib/glm/fwd.hpp	/^	typedef detail::int8 mediump_int8_t;$/;"	t	namespace:glm
mediump_int8_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::int8 mediump_int8_t;$/;"	t	namespace:glm
mediump_int_t	lib/glm/detail/type_int.hpp	/^	typedef signed int						mediump_int_t;$/;"	t	namespace:glm::detail
mediump_ivec1	lib/glm/gtc/vec1.hpp	/^	typedef mediump_ivec1_t			mediump_ivec1;$/;"	t	namespace:glm
mediump_ivec1_t	lib/glm/detail/type_vec.hpp	/^	typedef tvec1<int, mediump>		mediump_ivec1_t;$/;"	t	namespace:glm
mediump_ivec2	lib/glm/detail/type_vec.hpp	/^	typedef tvec2<int, mediump>		mediump_ivec2;$/;"	t	namespace:glm
mediump_ivec3	lib/glm/detail/type_vec.hpp	/^	typedef tvec3<int, mediump>		mediump_ivec3;$/;"	t	namespace:glm
mediump_ivec4	lib/glm/detail/type_vec.hpp	/^	typedef tvec4<int, mediump>		mediump_ivec4;$/;"	t	namespace:glm
mediump_mat2	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x2<float, mediump>		mediump_mat2;$/;"	t	namespace:glm
mediump_mat2	lib/glm/mat2x2.hpp	/^	typedef tmat2x2<float, mediump>		mediump_mat2;$/;"	t	namespace:glm
mediump_mat2x2	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x2<float, mediump>		mediump_mat2x2;$/;"	t	namespace:glm
mediump_mat2x2	lib/glm/mat2x2.hpp	/^	typedef tmat2x2<float, mediump>		mediump_mat2x2;$/;"	t	namespace:glm
mediump_mat2x3	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x3<float, mediump>		mediump_mat2x3;$/;"	t	namespace:glm
mediump_mat2x3	lib/glm/mat2x3.hpp	/^	typedef tmat2x3<float, mediump>		mediump_mat2x3;$/;"	t	namespace:glm
mediump_mat2x4	lib/glm/detail/type_mat.hpp	/^	typedef tmat2x4<float, mediump>		mediump_mat2x4;$/;"	t	namespace:glm
mediump_mat2x4	lib/glm/mat2x4.hpp	/^	typedef tmat2x4<float, mediump>		mediump_mat2x4;$/;"	t	namespace:glm
mediump_mat3	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, mediump>		mediump_mat3;$/;"	t	namespace:glm
mediump_mat3	lib/glm/mat3x3.hpp	/^	typedef tmat3x3<float, mediump>		mediump_mat3;$/;"	t	namespace:glm
mediump_mat3x2	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x2<float, mediump>		mediump_mat3x2;$/;"	t	namespace:glm
mediump_mat3x2	lib/glm/mat3x2.hpp	/^	typedef tmat3x2<float, mediump>		mediump_mat3x2;$/;"	t	namespace:glm
mediump_mat3x3	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, mediump>		mediump_mat3x3;$/;"	t	namespace:glm
mediump_mat3x3	lib/glm/mat3x3.hpp	/^	typedef tmat3x3<float, mediump>		mediump_mat3x3;$/;"	t	namespace:glm
mediump_mat3x4	lib/glm/detail/type_mat.hpp	/^	typedef tmat3x4<float, mediump>		mediump_mat3x4;$/;"	t	namespace:glm
mediump_mat3x4	lib/glm/mat3x4.hpp	/^	typedef tmat3x4<float, mediump>		mediump_mat3x4;$/;"	t	namespace:glm
mediump_mat4	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x4<float, mediump>		mediump_mat4;$/;"	t	namespace:glm
mediump_mat4	lib/glm/mat4x4.hpp	/^	typedef tmat4x4<float, mediump>		mediump_mat4;$/;"	t	namespace:glm
mediump_mat4x2	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x2<float, mediump>		mediump_mat4x2;$/;"	t	namespace:glm
mediump_mat4x2	lib/glm/mat4x2.hpp	/^	typedef tmat4x2<float, mediump>		mediump_mat4x2;$/;"	t	namespace:glm
mediump_mat4x3	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x3<float, mediump>		mediump_mat4x3;$/;"	t	namespace:glm
mediump_mat4x3	lib/glm/mat4x3.hpp	/^	typedef tmat4x3<float, mediump>		mediump_mat4x3;$/;"	t	namespace:glm
mediump_mat4x4	lib/glm/detail/type_mat.hpp	/^	typedef tmat4x4<float, mediump>		mediump_mat4x4;$/;"	t	namespace:glm
mediump_mat4x4	lib/glm/mat4x4.hpp	/^	typedef tmat4x4<float, mediump>		mediump_mat4x4;$/;"	t	namespace:glm
mediump_quat	lib/glm/fwd.hpp	/^	typedef tquat<float, mediump>	mediump_quat;$/;"	t	namespace:glm
mediump_u16	lib/glm/fwd.hpp	/^	typedef detail::uint16 mediump_u16;$/;"	t	namespace:glm
mediump_u16	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 mediump_u16;$/;"	t	namespace:glm
mediump_u16vec1	lib/glm/fwd.hpp	/^	typedef tvec1<u16, mediump>		mediump_u16vec1;$/;"	t	namespace:glm
mediump_u16vec2	lib/glm/fwd.hpp	/^	typedef tvec2<u16, mediump>		mediump_u16vec2;$/;"	t	namespace:glm
mediump_u16vec3	lib/glm/fwd.hpp	/^	typedef tvec3<u16, mediump>		mediump_u16vec3;$/;"	t	namespace:glm
mediump_u16vec4	lib/glm/fwd.hpp	/^	typedef tvec4<u16, mediump>		mediump_u16vec4;$/;"	t	namespace:glm
mediump_u32	lib/glm/fwd.hpp	/^	typedef detail::uint32 mediump_u32;$/;"	t	namespace:glm
mediump_u32	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 mediump_u32;$/;"	t	namespace:glm
mediump_u32vec1	lib/glm/fwd.hpp	/^	typedef tvec1<u32, mediump>		mediump_u32vec1;$/;"	t	namespace:glm
mediump_u32vec2	lib/glm/fwd.hpp	/^	typedef tvec2<u32, mediump>		mediump_u32vec2;$/;"	t	namespace:glm
mediump_u32vec3	lib/glm/fwd.hpp	/^	typedef tvec3<u32, mediump>		mediump_u32vec3;$/;"	t	namespace:glm
mediump_u32vec4	lib/glm/fwd.hpp	/^	typedef tvec4<u32, mediump>		mediump_u32vec4;$/;"	t	namespace:glm
mediump_u64	lib/glm/fwd.hpp	/^	typedef detail::uint64 mediump_u64;$/;"	t	namespace:glm
mediump_u64	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 mediump_u64;$/;"	t	namespace:glm
mediump_u64vec1	lib/glm/fwd.hpp	/^	typedef tvec1<u64, mediump>		mediump_u64vec1;$/;"	t	namespace:glm
mediump_u64vec2	lib/glm/fwd.hpp	/^	typedef tvec2<u64, mediump>		mediump_u64vec2;$/;"	t	namespace:glm
mediump_u64vec3	lib/glm/fwd.hpp	/^	typedef tvec3<u64, mediump>		mediump_u64vec3;$/;"	t	namespace:glm
mediump_u64vec4	lib/glm/fwd.hpp	/^	typedef tvec4<u64, mediump>		mediump_u64vec4;$/;"	t	namespace:glm
mediump_u8	lib/glm/fwd.hpp	/^	typedef detail::uint8 mediump_u8;$/;"	t	namespace:glm
mediump_u8	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 mediump_u8;$/;"	t	namespace:glm
mediump_u8vec1	lib/glm/fwd.hpp	/^	typedef tvec1<u8, mediump> mediump_u8vec1;$/;"	t	namespace:glm
mediump_u8vec2	lib/glm/fwd.hpp	/^	typedef tvec2<u8, mediump> mediump_u8vec2;$/;"	t	namespace:glm
mediump_u8vec3	lib/glm/fwd.hpp	/^	typedef tvec3<u8, mediump> mediump_u8vec3;$/;"	t	namespace:glm
mediump_u8vec4	lib/glm/fwd.hpp	/^	typedef tvec4<u8, mediump> mediump_u8vec4;$/;"	t	namespace:glm
mediump_uint	lib/glm/detail/type_int.hpp	/^	typedef detail::mediump_uint_t			mediump_uint;$/;"	t	namespace:glm
mediump_uint16	lib/glm/fwd.hpp	/^	typedef detail::uint16 mediump_uint16;$/;"	t	namespace:glm
mediump_uint16	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 mediump_uint16;$/;"	t	namespace:glm
mediump_uint16_t	lib/glm/fwd.hpp	/^	typedef detail::uint16 mediump_uint16_t;$/;"	t	namespace:glm
mediump_uint16_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 mediump_uint16_t;$/;"	t	namespace:glm
mediump_uint32	lib/glm/fwd.hpp	/^	typedef detail::uint32 mediump_uint32;$/;"	t	namespace:glm
mediump_uint32	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 mediump_uint32;$/;"	t	namespace:glm
mediump_uint32_t	lib/glm/fwd.hpp	/^	typedef detail::uint32 mediump_uint32_t;$/;"	t	namespace:glm
mediump_uint32_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 mediump_uint32_t;$/;"	t	namespace:glm
mediump_uint64	lib/glm/fwd.hpp	/^	typedef detail::uint64 mediump_uint64;$/;"	t	namespace:glm
mediump_uint64	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 mediump_uint64;$/;"	t	namespace:glm
mediump_uint64_t	lib/glm/fwd.hpp	/^	typedef detail::uint64 mediump_uint64_t;$/;"	t	namespace:glm
mediump_uint64_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 mediump_uint64_t;$/;"	t	namespace:glm
mediump_uint8	lib/glm/fwd.hpp	/^	typedef detail::uint8 mediump_uint8;$/;"	t	namespace:glm
mediump_uint8	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 mediump_uint8;$/;"	t	namespace:glm
mediump_uint8_t	lib/glm/fwd.hpp	/^	typedef detail::uint8 mediump_uint8_t;$/;"	t	namespace:glm
mediump_uint8_t	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 mediump_uint8_t;$/;"	t	namespace:glm
mediump_uint_t	lib/glm/detail/type_int.hpp	/^	typedef unsigned int					mediump_uint_t;$/;"	t	namespace:glm::detail
mediump_umat2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<uint, mediump>			mediump_umat2;$/;"	t	namespace:glm
mediump_umat2x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<uint, mediump>			mediump_umat2x2;$/;"	t	namespace:glm
mediump_umat2x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x3<uint, mediump>			mediump_umat2x3;$/;"	t	namespace:glm
mediump_umat2x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x4<uint, mediump>			mediump_umat2x4;$/;"	t	namespace:glm
mediump_umat3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<uint, mediump>			mediump_umat3;$/;"	t	namespace:glm
mediump_umat3x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x2<uint, mediump>			mediump_umat3x2;$/;"	t	namespace:glm
mediump_umat3x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<uint, mediump>			mediump_umat3x3;$/;"	t	namespace:glm
mediump_umat3x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x4<uint, mediump>			mediump_umat3x4;$/;"	t	namespace:glm
mediump_umat4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<uint, mediump>			mediump_umat4;$/;"	t	namespace:glm
mediump_umat4x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x2<uint, mediump>			mediump_umat4x2;$/;"	t	namespace:glm
mediump_umat4x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x3<uint, mediump>			mediump_umat4x3;$/;"	t	namespace:glm
mediump_umat4x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<uint, mediump>			mediump_umat4x4;$/;"	t	namespace:glm
mediump_uvec1	lib/glm/gtc/vec1.hpp	/^	typedef mediump_uvec1_t			mediump_uvec1;$/;"	t	namespace:glm
mediump_uvec1_t	lib/glm/detail/type_vec.hpp	/^	typedef tvec1<uint, mediump>	mediump_uvec1_t;$/;"	t	namespace:glm
mediump_uvec2	lib/glm/detail/type_vec.hpp	/^	typedef tvec2<uint, mediump>	mediump_uvec2;$/;"	t	namespace:glm
mediump_uvec3	lib/glm/detail/type_vec.hpp	/^	typedef tvec3<uint, mediump>	mediump_uvec3;$/;"	t	namespace:glm
mediump_uvec4	lib/glm/detail/type_vec.hpp	/^	typedef tvec4<uint, mediump>	mediump_uvec4;$/;"	t	namespace:glm
mediump_vec1	lib/glm/fwd.hpp	/^	typedef tvec1<float, mediump> mediump_vec1;$/;"	t	namespace:glm
mediump_vec1	lib/glm/gtc/vec1.hpp	/^	typedef mediump_vec1_t			mediump_vec1;$/;"	t	namespace:glm
mediump_vec1_t	lib/glm/detail/type_vec.hpp	/^	typedef tvec1<float, mediump>	mediump_vec1_t;$/;"	t	namespace:glm
mediump_vec2	lib/glm/detail/type_vec.hpp	/^	typedef tvec2<float, mediump>	mediump_vec2;$/;"	t	namespace:glm
mediump_vec2	lib/glm/fwd.hpp	/^	typedef tvec2<float, mediump> mediump_vec2;$/;"	t	namespace:glm
mediump_vec3	lib/glm/detail/type_vec.hpp	/^	typedef tvec3<float, mediump>	mediump_vec3;$/;"	t	namespace:glm
mediump_vec3	lib/glm/fwd.hpp	/^	typedef tvec3<float, mediump> mediump_vec3;$/;"	t	namespace:glm
mediump_vec4	lib/glm/detail/type_vec.hpp	/^	typedef tvec4<float, mediump>	mediump_vec4;$/;"	t	namespace:glm
mediump_vec4	lib/glm/fwd.hpp	/^	typedef tvec4<float, mediump> mediump_vec4;$/;"	t	namespace:glm
memory	lib/vulkan/vulkan.h	/^    VkDeviceMemory             memory;$/;"	m	struct:VkSparseImageMemoryBind
memory	lib/vulkan/vulkan.h	/^    VkDeviceMemory             memory;$/;"	m	struct:VkSparseMemoryBind
memory	lib/vulkan/vulkan.h	/^    VkDeviceMemory     memory;$/;"	m	struct:VkMappedMemoryRange
memoryHeapCount	lib/vulkan/vulkan.h	/^    uint32_t        memoryHeapCount;$/;"	m	struct:VkPhysicalDeviceMemoryProperties
memoryHeaps	lib/vulkan/vulkan.h	/^    VkMemoryHeap    memoryHeaps[VK_MAX_MEMORY_HEAPS];$/;"	m	struct:VkPhysicalDeviceMemoryProperties
memoryOffset	lib/vulkan/vulkan.h	/^    VkDeviceSize               memoryOffset;$/;"	m	struct:VkSparseImageMemoryBind
memoryOffset	lib/vulkan/vulkan.h	/^    VkDeviceSize               memoryOffset;$/;"	m	struct:VkSparseMemoryBind
memoryTypeBits	lib/vulkan/vulkan.h	/^    uint32_t        memoryTypeBits;$/;"	m	struct:VkMemoryRequirements
memoryTypeCount	lib/vulkan/vulkan.h	/^    uint32_t        memoryTypeCount;$/;"	m	struct:VkPhysicalDeviceMemoryProperties
memoryTypeIndex	lib/vulkan/vulkan.h	/^    uint32_t           memoryTypeIndex;$/;"	m	struct:VkMemoryAllocateInfo
memoryTypes	lib/vulkan/vulkan.h	/^    VkMemoryType    memoryTypes[VK_MAX_MEMORY_TYPES];$/;"	m	struct:VkPhysicalDeviceMemoryProperties
mg	lib/stb/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon68
min	lib/glm/detail/_fixes.hpp	13;"	d
minDepth	lib/vulkan/vulkan.h	/^    float    minDepth;$/;"	m	struct:VkViewport
minDepthBounds	lib/vulkan/vulkan.h	/^    float                                     minDepthBounds;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
minDstExtent	lib/vulkan/vulkan.h	/^    VkExtent2D                     minDstExtent;$/;"	m	struct:VkDisplayPlaneCapabilitiesKHR
minDstPosition	lib/vulkan/vulkan.h	/^    VkOffset2D                     minDstPosition;$/;"	m	struct:VkDisplayPlaneCapabilitiesKHR
minFilter	lib/vulkan/vulkan.h	/^    VkFilter                minFilter;$/;"	m	struct:VkSamplerCreateInfo
minImageCount	lib/vulkan/vulkan.h	/^    uint32_t                         minImageCount;$/;"	m	struct:VkSurfaceCapabilitiesKHR
minImageCount	lib/vulkan/vulkan.h	/^    uint32_t                         minImageCount;$/;"	m	struct:VkSwapchainCreateInfoKHR
minImageExtent	lib/vulkan/vulkan.h	/^    VkExtent2D                       minImageExtent;$/;"	m	struct:VkSurfaceCapabilitiesKHR
minImageTransferGranularity	lib/vulkan/vulkan.h	/^    VkExtent3D      minImageTransferGranularity;$/;"	m	struct:VkQueueFamilyProperties
minInterpolationOffset	lib/vulkan/vulkan.h	/^    float                 minInterpolationOffset;$/;"	m	struct:VkPhysicalDeviceLimits
minLod	lib/vulkan/vulkan.h	/^    float                   minLod;$/;"	m	struct:VkSamplerCreateInfo
minMemoryMapAlignment	lib/vulkan/vulkan.h	/^    size_t                minMemoryMapAlignment;$/;"	m	struct:VkPhysicalDeviceLimits
minSampleShading	lib/vulkan/vulkan.h	/^    float                                    minSampleShading;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo
minSrcExtent	lib/vulkan/vulkan.h	/^    VkExtent2D                     minSrcExtent;$/;"	m	struct:VkDisplayPlaneCapabilitiesKHR
minSrcPosition	lib/vulkan/vulkan.h	/^    VkOffset2D                     minSrcPosition;$/;"	m	struct:VkDisplayPlaneCapabilitiesKHR
minStorageBufferOffsetAlignment	lib/vulkan/vulkan.h	/^    VkDeviceSize          minStorageBufferOffsetAlignment;$/;"	m	struct:VkPhysicalDeviceLimits
minTexelBufferOffsetAlignment	lib/vulkan/vulkan.h	/^    VkDeviceSize          minTexelBufferOffsetAlignment;$/;"	m	struct:VkPhysicalDeviceLimits
minTexelGatherOffset	lib/vulkan/vulkan.h	/^    int32_t               minTexelGatherOffset;$/;"	m	struct:VkPhysicalDeviceLimits
minTexelOffset	lib/vulkan/vulkan.h	/^    int32_t               minTexelOffset;$/;"	m	struct:VkPhysicalDeviceLimits
minUniformBufferOffsetAlignment	lib/vulkan/vulkan.h	/^    VkDeviceSize          minUniformBufferOffsetAlignment;$/;"	m	struct:VkPhysicalDeviceLimits
mipLevel	lib/vulkan/vulkan.h	/^    uint32_t              mipLevel;$/;"	m	struct:VkImageSubresource
mipLevel	lib/vulkan/vulkan.h	/^    uint32_t              mipLevel;$/;"	m	struct:VkImageSubresourceLayers
mipLevels	lib/vulkan/vulkan.h	/^    uint32_t                 mipLevels;$/;"	m	struct:VkImageCreateInfo
mipLodBias	lib/vulkan/vulkan.h	/^    float                   mipLodBias;$/;"	m	struct:VkSamplerCreateInfo
mipmapMode	lib/vulkan/vulkan.h	/^    VkSamplerMipmapMode     mipmapMode;$/;"	m	struct:VkSamplerCreateInfo
mipmapPrecisionBits	lib/vulkan/vulkan.h	/^    uint32_t              mipmapPrecisionBits;$/;"	m	struct:VkPhysicalDeviceLimits
mirSurface	lib/vulkan/vk_icd.h	/^    MirSurface *mirSurface;$/;"	m	struct:__anon45
mirSurface	lib/vulkan/vulkan.h	/^    MirSurface*                   mirSurface;$/;"	m	struct:VkMirSurfaceCreateInfoKHR
mod289	lib/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER T mod289(T const & x)$/;"	f	namespace:glm::detail
model	inc/vulkan_manager.h	/^	    glm::mat4 model;$/;"	m	struct:VulkanManager::UBO
module	lib/vulkan/vulkan.h	/^    VkShaderModule                      module;$/;"	m	struct:VkPipelineShaderStageCreateInfo
mr	lib/stb/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon68
msgCallback	inc/vulkan_manager.h	/^	VkDebugReportCallbackEXT msgCallback; $/;"	m	class:VulkanManager
multiDrawIndirect	lib/vulkan/vulkan.h	/^    VkBool32    multiDrawIndirect;$/;"	m	struct:VkPhysicalDeviceFeatures
multiViewport	lib/vulkan/vulkan.h	/^    VkBool32    multiViewport;$/;"	m	struct:VkPhysicalDeviceFeatures
newLayout	lib/vulkan/vulkan.h	/^    VkImageLayout              newLayout;$/;"	m	struct:VkImageMemoryBarrier
newline	lib/glm/gtx/io.hpp	/^			char_type  newline;$/;"	m	class:glm::io::format_punct
nice	lib/glm/detail/type_gentype.hpp	/^		nice,$/;"	e	enum:glm::profile
nomore	lib/stb/stb_image.h	/^   int            nomore;      \/\/ flag if we saw a marker so must stop$/;"	m	struct:__anon60
nonCoherentAtomSize	lib/vulkan/vulkan.h	/^    VkDeviceSize          nonCoherentAtomSize;$/;"	m	struct:VkPhysicalDeviceLimits
null	lib/glm/detail/type_gentype.hpp	/^		enum ctor{null};$/;"	e	enum:glm::detail::genType::ctor
num_bits	lib/stb/stb_image.h	/^   int num_bits;$/;"	m	struct:__anon64
num_operands	lib/vulkan/libspirv.h	/^  uint16_t num_operands;$/;"	m	struct:spv_parsed_instruction_t
num_words	lib/vulkan/libspirv.h	/^  uint16_t num_words;$/;"	m	struct:spv_parsed_instruction_t
num_words	lib/vulkan/libspirv.h	/^  uint16_t num_words;$/;"	m	struct:spv_parsed_operand_t
number_bit_width	lib/vulkan/libspirv.h	/^  uint32_t number_bit_width;$/;"	m	struct:spv_parsed_operand_t
number_kind	lib/vulkan/libspirv.h	/^  spv_number_kind_t number_kind;$/;"	m	struct:spv_parsed_operand_t
object	lib/vulkan/vulkan.h	/^    uint64_t                      object;$/;"	m	struct:VkDebugMarkerObjectNameInfoEXT
object	lib/vulkan/vulkan.h	/^    uint64_t                      object;$/;"	m	struct:VkDebugMarkerObjectTagInfoEXT
objectType	lib/vulkan/vulkan.h	/^    VkDebugReportObjectTypeEXT    objectType;$/;"	m	struct:VkDebugMarkerObjectNameInfoEXT
objectType	lib/vulkan/vulkan.h	/^    VkDebugReportObjectTypeEXT    objectType;$/;"	m	struct:VkDebugMarkerObjectTagInfoEXT
occlusionQueryEnable	lib/vulkan/vulkan.h	/^    VkBool32                         occlusionQueryEnable;$/;"	m	struct:VkCommandBufferInheritanceInfo
occlusionQueryPrecise	lib/vulkan/vulkan.h	/^    VkBool32    occlusionQueryPrecise;$/;"	m	struct:VkPhysicalDeviceFeatures
offset	lib/stb/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon68
offset	lib/vulkan/libspirv.h	/^  uint16_t offset;$/;"	m	struct:spv_parsed_operand_t
offset	lib/vulkan/vulkan.h	/^    VkDeviceSize               offset;$/;"	m	struct:VkBufferViewCreateInfo
offset	lib/vulkan/vulkan.h	/^    VkDeviceSize       offset;$/;"	m	struct:VkBufferMemoryBarrier
offset	lib/vulkan/vulkan.h	/^    VkDeviceSize       offset;$/;"	m	struct:VkMappedMemoryRange
offset	lib/vulkan/vulkan.h	/^    VkDeviceSize    offset;$/;"	m	struct:VkDescriptorBufferInfo
offset	lib/vulkan/vulkan.h	/^    VkDeviceSize    offset;$/;"	m	struct:VkSubresourceLayout
offset	lib/vulkan/vulkan.h	/^    VkOffset2D    offset;$/;"	m	struct:VkRect2D
offset	lib/vulkan/vulkan.h	/^    VkOffset3D                 offset;$/;"	m	struct:VkSparseImageMemoryBind
offset	lib/vulkan/vulkan.h	/^    uint32_t              offset;$/;"	m	struct:VkPushConstantRange
offset	lib/vulkan/vulkan.h	/^    uint32_t    offset;$/;"	m	struct:VkSpecializationMapEntry
offset	lib/vulkan/vulkan.h	/^    uint32_t    offset;$/;"	m	struct:VkVertexInputAttributeDescription
oldLayout	lib/vulkan/vulkan.h	/^    VkImageLayout              oldLayout;$/;"	m	struct:VkImageMemoryBarrier
oldSwapchain	lib/vulkan/vulkan.h	/^    VkSwapchainKHR                   oldSwapchain;$/;"	m	struct:VkSwapchainCreateInfoKHR
old_out	lib/stb/stb_image.h	/^   stbi_uc *out, *old_out;             \/\/ output buffer (always 4 components)$/;"	m	struct:__anon71
onWindowResized	src/engine.cpp	/^void onWindowResized(GLFWwindow* window, int width, int height) {$/;"	f
opcode	lib/vulkan/libspirv.h	/^  uint16_t opcode;$/;"	m	struct:spv_parsed_instruction_t
operands	lib/vulkan/libspirv.h	/^  const spv_parsed_operand_t* operands;$/;"	m	struct:spv_parsed_instruction_t
operator ()	lib/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER vecType<T, P> operator ()()  const { return vecType<T, P>(this->elem(E0), this->elem(E1)); }$/;"	f	struct:glm::detail::_swizzle_base1
operator ()	lib/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER vecType<T, P> operator ()()  const { return vecType<T, P>(this->elem(E0), this->elem(E1), this->elem(E2)); }$/;"	f	struct:glm::detail::_swizzle_base1
operator ()	lib/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER vecType<T, P> operator ()()  const { return vecType<T, P>(this->elem(E0), this->elem(E1), this->elem(E2), this->elem(E3)); }$/;"	f	struct:glm::detail::_swizzle_base1
operator *=	lib/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator *= (vecType<T, P> const& that)$/;"	f	struct:glm::detail::_swizzle_base2
operator +=	lib/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator += (vecType<T, P> const& that)$/;"	f	struct:glm::detail::_swizzle_base2
operator -=	lib/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator -= (vecType<T, P> const& that)$/;"	f	struct:glm::detail::_swizzle_base2
operator /=	lib/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator \/= (vecType<T, P> const& that)$/;"	f	struct:glm::detail::_swizzle_base2
operator =	lib/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (Stub const &) { return *this; }$/;"	f	struct:glm::detail::_swizzle_base2
operator =	lib/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (const T& t)$/;"	f	struct:glm::detail::_swizzle_base2
operator =	lib/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (vecType<T, P> const& that)$/;"	f	struct:glm::detail::_swizzle_base2
operator []	lib/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T operator[]  (size_t i) const$/;"	f	struct:glm::detail::_swizzle_base2
operator []	lib/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T operator[](size_t i) const$/;"	f	struct:glm::detail::_swizzle_base2
operator []	lib/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T& operator[](size_t i)$/;"	f	struct:glm::detail::_swizzle_base2
operator []	src/device_queue_indices.cpp	/^int DeviceQueueIndicies::operator[](int i) const $/;"	f	class:DeviceQueueIndicies
operator []	src/device_queue_indices.cpp	/^int& DeviceQueueIndicies::operator[](int i) $/;"	f	class:DeviceQueueIndicies
operator vecType<T, P>	lib/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER operator vecType<T, P> () const { return (*this)(); }$/;"	f	struct:glm::detail::_swizzle
operator |	lib/vulkan/spirv.hpp	/^inline FPFastMathModeMask operator|(FPFastMathModeMask a, FPFastMathModeMask b) { return FPFastMathModeMask(unsigned(a) | unsigned(b)); }$/;"	f	namespace:spv
operator |	lib/vulkan/spirv.hpp	/^inline FunctionControlMask operator|(FunctionControlMask a, FunctionControlMask b) { return FunctionControlMask(unsigned(a) | unsigned(b)); }$/;"	f	namespace:spv
operator |	lib/vulkan/spirv.hpp	/^inline ImageOperandsMask operator|(ImageOperandsMask a, ImageOperandsMask b) { return ImageOperandsMask(unsigned(a) | unsigned(b)); }$/;"	f	namespace:spv
operator |	lib/vulkan/spirv.hpp	/^inline KernelProfilingInfoMask operator|(KernelProfilingInfoMask a, KernelProfilingInfoMask b) { return KernelProfilingInfoMask(unsigned(a) | unsigned(b)); }$/;"	f	namespace:spv
operator |	lib/vulkan/spirv.hpp	/^inline LoopControlMask operator|(LoopControlMask a, LoopControlMask b) { return LoopControlMask(unsigned(a) | unsigned(b)); }$/;"	f	namespace:spv
operator |	lib/vulkan/spirv.hpp	/^inline MemoryAccessMask operator|(MemoryAccessMask a, MemoryAccessMask b) { return MemoryAccessMask(unsigned(a) | unsigned(b)); }$/;"	f	namespace:spv
operator |	lib/vulkan/spirv.hpp	/^inline MemorySemanticsMask operator|(MemorySemanticsMask a, MemorySemanticsMask b) { return MemorySemanticsMask(unsigned(a) | unsigned(b)); }$/;"	f	namespace:spv
operator |	lib/vulkan/spirv.hpp	/^inline SelectionControlMask operator|(SelectionControlMask a, SelectionControlMask b) { return SelectionControlMask(unsigned(a) | unsigned(b)); }$/;"	f	namespace:spv
optimalBufferCopyOffsetAlignment	lib/vulkan/vulkan.h	/^    VkDeviceSize          optimalBufferCopyOffsetAlignment;$/;"	m	struct:VkPhysicalDeviceLimits
optimalBufferCopyRowPitchAlignment	lib/vulkan/vulkan.h	/^    VkDeviceSize          optimalBufferCopyRowPitchAlignment;$/;"	m	struct:VkPhysicalDeviceLimits
optimalTilingFeatures	lib/vulkan/vulkan.h	/^    VkFormatFeatureFlags    optimalTilingFeatures;$/;"	m	struct:VkFormatProperties
order	lib/glm/gtx/io.hpp	/^			order_type order;$/;"	m	class:glm::io::format_punct
order	lib/glm/gtx/io.hpp	/^		struct order$/;"	s	namespace:glm::io
order	lib/stb/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon60
order_type	lib/glm/gtx/io.hpp	/^		enum order_type { column_major, row_major};$/;"	g	namespace:glm::io
out	lib/stb/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon66
out	lib/stb/stb_image.h	/^   stbi_uc *out, *old_out;             \/\/ output buffer (always 4 components)$/;"	m	struct:__anon71
outerProduct_trait	lib/glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec2, tvec2>$/;"	s	namespace:glm::detail
outerProduct_trait	lib/glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec2, tvec3>$/;"	s	namespace:glm::detail
outerProduct_trait	lib/glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec2, tvec4>$/;"	s	namespace:glm::detail
outerProduct_trait	lib/glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec3, tvec2>$/;"	s	namespace:glm::detail
outerProduct_trait	lib/glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec3, tvec3>$/;"	s	namespace:glm::detail
outerProduct_trait	lib/glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec3, tvec4>$/;"	s	namespace:glm::detail
outerProduct_trait	lib/glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec4, tvec2>$/;"	s	namespace:glm::detail
outerProduct_trait	lib/glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec4, tvec3>$/;"	s	namespace:glm::detail
outerProduct_trait	lib/glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec4, tvec4>$/;"	s	namespace:glm::detail
outerProduct_trait	lib/glm/detail/type_mat.hpp	/^	struct outerProduct_trait{};$/;"	s	namespace:glm::detail
p	lib/glm/detail/type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	m	struct:glm::tvec3::__anon17::__anon20
p	lib/glm/detail/type_vec3.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec3::__anon23
p	lib/glm/detail/type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::tvec4::__anon1::__anon4
p	lib/glm/detail/type_vec4.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec4::__anon7
pApplicationInfo	lib/vulkan/vulkan.h	/^    const VkApplicationInfo*    pApplicationInfo;$/;"	m	struct:VkInstanceCreateInfo
pApplicationName	lib/vulkan/vulkan.h	/^    const char*        pApplicationName;$/;"	m	struct:VkApplicationInfo
pAttachments	lib/vulkan/vulkan.h	/^    const VkAttachmentDescription*    pAttachments;$/;"	m	struct:VkRenderPassCreateInfo
pAttachments	lib/vulkan/vulkan.h	/^    const VkImageView*          pAttachments;$/;"	m	struct:VkFramebufferCreateInfo
pAttachments	lib/vulkan/vulkan.h	/^    const VkPipelineColorBlendAttachmentState*    pAttachments;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo
pBindings	lib/vulkan/vulkan.h	/^    const VkDescriptorSetLayoutBinding*    pBindings;$/;"	m	struct:VkDescriptorSetLayoutCreateInfo
pBinds	lib/vulkan/vulkan.h	/^    const VkSparseImageMemoryBind*    pBinds;$/;"	m	struct:VkSparseImageMemoryBindInfo
pBinds	lib/vulkan/vulkan.h	/^    const VkSparseMemoryBind*    pBinds;$/;"	m	struct:VkSparseBufferMemoryBindInfo
pBinds	lib/vulkan/vulkan.h	/^    const VkSparseMemoryBind*    pBinds;$/;"	m	struct:VkSparseImageOpaqueMemoryBindInfo
pBufferBinds	lib/vulkan/vulkan.h	/^    const VkSparseBufferMemoryBindInfo*         pBufferBinds;$/;"	m	struct:VkBindSparseInfo
pBufferInfo	lib/vulkan/vulkan.h	/^    const VkDescriptorBufferInfo*    pBufferInfo;$/;"	m	struct:VkWriteDescriptorSet
pClearValues	lib/vulkan/vulkan.h	/^    const VkClearValue*    pClearValues;$/;"	m	struct:VkRenderPassBeginInfo
pCode	lib/vulkan/vulkan.h	/^    const uint32_t*              pCode;$/;"	m	struct:VkShaderModuleCreateInfo
pColorAttachments	lib/vulkan/vulkan.h	/^    const VkAttachmentReference*    pColorAttachments;$/;"	m	struct:VkSubpassDescription
pColorBlendState	lib/vulkan/vulkan.h	/^    const VkPipelineColorBlendStateCreateInfo*       pColorBlendState;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pCommandBuffers	lib/vulkan/vulkan.h	/^    const VkCommandBuffer*         pCommandBuffers;$/;"	m	struct:VkSubmitInfo
pData	lib/vulkan/vulkan.h	/^    const void*                        pData;$/;"	m	struct:VkSpecializationInfo
pDependencies	lib/vulkan/vulkan.h	/^    const VkSubpassDependency*        pDependencies;$/;"	m	struct:VkRenderPassCreateInfo
pDepthStencilAttachment	lib/vulkan/vulkan.h	/^    const VkAttachmentReference*    pDepthStencilAttachment;$/;"	m	struct:VkSubpassDescription
pDepthStencilState	lib/vulkan/vulkan.h	/^    const VkPipelineDepthStencilStateCreateInfo*     pDepthStencilState;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pDynamicState	lib/vulkan/vulkan.h	/^    const VkPipelineDynamicStateCreateInfo*          pDynamicState;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pDynamicStates	lib/vulkan/vulkan.h	/^    const VkDynamicState*                pDynamicStates;$/;"	m	struct:VkPipelineDynamicStateCreateInfo
pEnabledFeatures	lib/vulkan/vulkan.h	/^    const VkPhysicalDeviceFeatures*    pEnabledFeatures;$/;"	m	struct:VkDeviceCreateInfo
pEngineName	lib/vulkan/vulkan.h	/^    const char*        pEngineName;$/;"	m	struct:VkApplicationInfo
pImageBinds	lib/vulkan/vulkan.h	/^    const VkSparseImageMemoryBindInfo*          pImageBinds;$/;"	m	struct:VkBindSparseInfo
pImageIndices	lib/vulkan/vulkan.h	/^    const uint32_t*          pImageIndices;$/;"	m	struct:VkPresentInfoKHR
pImageInfo	lib/vulkan/vulkan.h	/^    const VkDescriptorImageInfo*     pImageInfo;$/;"	m	struct:VkWriteDescriptorSet
pImageOpaqueBinds	lib/vulkan/vulkan.h	/^    const VkSparseImageOpaqueMemoryBindInfo*    pImageOpaqueBinds;$/;"	m	struct:VkBindSparseInfo
pImmutableSamplers	lib/vulkan/vulkan.h	/^    const VkSampler*      pImmutableSamplers;$/;"	m	struct:VkDescriptorSetLayoutBinding
pInheritanceInfo	lib/vulkan/vulkan.h	/^    const VkCommandBufferInheritanceInfo*    pInheritanceInfo;$/;"	m	struct:VkCommandBufferBeginInfo
pInitialData	lib/vulkan/vulkan.h	/^    const void*                   pInitialData;$/;"	m	struct:VkPipelineCacheCreateInfo
pInputAssemblyState	lib/vulkan/vulkan.h	/^    const VkPipelineInputAssemblyStateCreateInfo*    pInputAssemblyState;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pInputAttachments	lib/vulkan/vulkan.h	/^    const VkAttachmentReference*    pInputAttachments;$/;"	m	struct:VkSubpassDescription
pLayerInfo	lib/vulkan/vk_layer.h	/^        VkLayerDeviceLink *pLayerInfo;$/;"	m	union:__anon53::__anon54
pLayerInfo	lib/vulkan/vk_layer.h	/^        VkLayerInstanceLink *pLayerInfo;$/;"	m	union:__anon51::__anon52
pMapEntries	lib/vulkan/vulkan.h	/^    const VkSpecializationMapEntry*    pMapEntries;$/;"	m	struct:VkSpecializationInfo
pMarkerName	lib/vulkan/vulkan.h	/^    const char*        pMarkerName;$/;"	m	struct:VkDebugMarkerMarkerInfoEXT
pMultisampleState	lib/vulkan/vulkan.h	/^    const VkPipelineMultisampleStateCreateInfo*      pMultisampleState;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pName	lib/vulkan/vulkan.h	/^    const char*                         pName;$/;"	m	struct:VkPipelineShaderStageCreateInfo
pNext	lib/vulkan/vk_layer.h	/^    const void *pNext;$/;"	m	struct:__anon51
pNext	lib/vulkan/vk_layer.h	/^    const void *pNext;$/;"	m	struct:__anon53
pNext	lib/vulkan/vk_layer.h	/^    struct VkLayerDeviceLink_ *pNext;$/;"	m	struct:VkLayerDeviceLink_	typeref:struct:VkLayerDeviceLink_::VkLayerDeviceLink_
pNext	lib/vulkan/vk_layer.h	/^    struct VkLayerInstanceLink_ *pNext;$/;"	m	struct:VkLayerInstanceLink_	typeref:struct:VkLayerInstanceLink_::VkLayerInstanceLink_
pNext	lib/vulkan/vulkan.h	/^    const void*                                      pNext;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                                   pNext;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                                 pNext;$/;"	m	struct:VkBindSparseInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                                 pNext;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                                pNext;$/;"	m	struct:VkPipelineInputAssemblyStateCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                                pNext;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                               pNext;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                               pNext;$/;"	m	struct:VkPipelineTessellationStateCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                              pNext;$/;"	m	struct:VkCommandBufferBeginInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                              pNext;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                            pNext;$/;"	m	struct:VkDescriptorSetLayoutCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                           pNext;$/;"	m	struct:VkPipelineViewportStateCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                          pNext;$/;"	m	struct:VkPipelineDynamicStateCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                         pNext;$/;"	m	struct:VkPipelineShaderStageCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                        pNext;$/;"	m	struct:VkComputePipelineCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                        pNext;$/;"	m	struct:VkDeviceCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                       pNext;$/;"	m	struct:VkAndroidSurfaceCreateInfoKHR
pNext	lib/vulkan/vulkan.h	/^    const void*                       pNext;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
pNext	lib/vulkan/vulkan.h	/^    const void*                       pNext;$/;"	m	struct:VkRenderPassCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                       pNext;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR
pNext	lib/vulkan/vulkan.h	/^    const void*                      pNext;$/;"	m	struct:VkCommandBufferInheritanceInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                      pNext;$/;"	m	struct:VkQueryPoolCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                      pNext;$/;"	m	struct:VkSwapchainCreateInfoKHR
pNext	lib/vulkan/vulkan.h	/^    const void*                      pNext;$/;"	m	struct:VkWriteDescriptorSet
pNext	lib/vulkan/vulkan.h	/^    const void*                     pNext;$/;"	m	struct:VkDebugReportCallbackCreateInfoEXT
pNext	lib/vulkan/vulkan.h	/^    const void*                     pNext;$/;"	m	struct:VkDescriptorSetAllocateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                     pNext;$/;"	m	struct:VkPipelineLayoutCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                     pNext;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR
pNext	lib/vulkan/vulkan.h	/^    const void*                    pNext;$/;"	m	struct:VkDescriptorPoolCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                    pNext;$/;"	m	struct:VkDisplayModeCreateInfoKHR
pNext	lib/vulkan/vulkan.h	/^    const void*                    pNext;$/;"	m	struct:VkSubmitInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                    pNext;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR
pNext	lib/vulkan/vulkan.h	/^    const void*                   pNext;$/;"	m	struct:VkDebugMarkerObjectNameInfoEXT
pNext	lib/vulkan/vulkan.h	/^    const void*                   pNext;$/;"	m	struct:VkDebugMarkerObjectTagInfoEXT
pNext	lib/vulkan/vulkan.h	/^    const void*                   pNext;$/;"	m	struct:VkMirSurfaceCreateInfoKHR
pNext	lib/vulkan/vulkan.h	/^    const void*                   pNext;$/;"	m	struct:VkPipelineCacheCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                   pNext;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR
pNext	lib/vulkan/vulkan.h	/^    const void*                  pNext;$/;"	m	struct:VkShaderModuleCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                 pNext;$/;"	m	struct:VkCommandPoolCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                 pNext;$/;"	m	struct:VkDeviceQueueCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                 pNext;$/;"	m	struct:VkFramebufferCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                 pNext;$/;"	m	struct:VkInstanceCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                pNext;$/;"	m	struct:VkBufferViewCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                pNext;$/;"	m	struct:VkImageMemoryBarrier
pNext	lib/vulkan/vulkan.h	/^    const void*                pNext;$/;"	m	struct:VkImageViewCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*                pNext;$/;"	m	struct:VkPipelineRasterizationStateRasterizationOrderAMD
pNext	lib/vulkan/vulkan.h	/^    const void*               pNext;$/;"	m	struct:VkSemaphoreCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*              pNext;$/;"	m	struct:VkImageCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*              pNext;$/;"	m	struct:VkPresentInfoKHR
pNext	lib/vulkan/vulkan.h	/^    const void*             pNext;$/;"	m	struct:VkCommandBufferAllocateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*             pNext;$/;"	m	struct:VkSamplerCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*            pNext;$/;"	m	struct:VkBufferCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*            pNext;$/;"	m	struct:VkRenderPassBeginInfo
pNext	lib/vulkan/vulkan.h	/^    const void*           pNext;$/;"	m	struct:VkEventCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*           pNext;$/;"	m	struct:VkFenceCreateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkApplicationInfo
pNext	lib/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkBufferMemoryBarrier
pNext	lib/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkCopyDescriptorSet
pNext	lib/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkDebugMarkerMarkerInfoEXT
pNext	lib/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkDedicatedAllocationBufferCreateInfoNV
pNext	lib/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkDedicatedAllocationImageCreateInfoNV
pNext	lib/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkDedicatedAllocationMemoryAllocateInfoNV
pNext	lib/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkDisplayPresentInfoKHR
pNext	lib/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkMappedMemoryRange
pNext	lib/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkMemoryAllocateInfo
pNext	lib/vulkan/vulkan.h	/^    const void*        pNext;$/;"	m	struct:VkMemoryBarrier
pObjectName	lib/vulkan/vulkan.h	/^    const char*                   pObjectName;$/;"	m	struct:VkDebugMarkerObjectNameInfoEXT
pPoolSizes	lib/vulkan/vulkan.h	/^    const VkDescriptorPoolSize*    pPoolSizes;$/;"	m	struct:VkDescriptorPoolCreateInfo
pPreserveAttachments	lib/vulkan/vulkan.h	/^    const uint32_t*                 pPreserveAttachments;$/;"	m	struct:VkSubpassDescription
pPushConstantRanges	lib/vulkan/vulkan.h	/^    const VkPushConstantRange*      pPushConstantRanges;$/;"	m	struct:VkPipelineLayoutCreateInfo
pQueueCreateInfos	lib/vulkan/vulkan.h	/^    const VkDeviceQueueCreateInfo*     pQueueCreateInfos;$/;"	m	struct:VkDeviceCreateInfo
pQueueFamilyIndices	lib/vulkan/vulkan.h	/^    const uint32_t*                  pQueueFamilyIndices;$/;"	m	struct:VkSwapchainCreateInfoKHR
pQueueFamilyIndices	lib/vulkan/vulkan.h	/^    const uint32_t*          pQueueFamilyIndices;$/;"	m	struct:VkImageCreateInfo
pQueueFamilyIndices	lib/vulkan/vulkan.h	/^    const uint32_t*        pQueueFamilyIndices;$/;"	m	struct:VkBufferCreateInfo
pQueuePriorities	lib/vulkan/vulkan.h	/^    const float*                pQueuePriorities;$/;"	m	struct:VkDeviceQueueCreateInfo
pRasterizationState	lib/vulkan/vulkan.h	/^    const VkPipelineRasterizationStateCreateInfo*    pRasterizationState;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pResolveAttachments	lib/vulkan/vulkan.h	/^    const VkAttachmentReference*    pResolveAttachments;$/;"	m	struct:VkSubpassDescription
pResults	lib/vulkan/vulkan.h	/^    VkResult*                pResults;$/;"	m	struct:VkPresentInfoKHR
pSampleMask	lib/vulkan/vulkan.h	/^    const VkSampleMask*                      pSampleMask;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo
pScissors	lib/vulkan/vulkan.h	/^    const VkRect2D*                       pScissors;$/;"	m	struct:VkPipelineViewportStateCreateInfo
pSetLayouts	lib/vulkan/vulkan.h	/^    const VkDescriptorSetLayout*    pSetLayouts;$/;"	m	struct:VkDescriptorSetAllocateInfo
pSetLayouts	lib/vulkan/vulkan.h	/^    const VkDescriptorSetLayout*    pSetLayouts;$/;"	m	struct:VkPipelineLayoutCreateInfo
pSignalSemaphores	lib/vulkan/vulkan.h	/^    const VkSemaphore*                          pSignalSemaphores;$/;"	m	struct:VkBindSparseInfo
pSignalSemaphores	lib/vulkan/vulkan.h	/^    const VkSemaphore*             pSignalSemaphores;$/;"	m	struct:VkSubmitInfo
pSpecializationInfo	lib/vulkan/vulkan.h	/^    const VkSpecializationInfo*         pSpecializationInfo;$/;"	m	struct:VkPipelineShaderStageCreateInfo
pStages	lib/vulkan/vulkan.h	/^    const VkPipelineShaderStageCreateInfo*           pStages;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pSubpasses	lib/vulkan/vulkan.h	/^    const VkSubpassDescription*       pSubpasses;$/;"	m	struct:VkRenderPassCreateInfo
pSwapchains	lib/vulkan/vulkan.h	/^    const VkSwapchainKHR*    pSwapchains;$/;"	m	struct:VkPresentInfoKHR
pTag	lib/vulkan/vulkan.h	/^    const void*                   pTag;$/;"	m	struct:VkDebugMarkerObjectTagInfoEXT
pTessellationState	lib/vulkan/vulkan.h	/^    const VkPipelineTessellationStateCreateInfo*     pTessellationState;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pTexelBufferView	lib/vulkan/vulkan.h	/^    const VkBufferView*              pTexelBufferView;$/;"	m	struct:VkWriteDescriptorSet
pUserData	lib/vulkan/vulkan.h	/^    void*                                   pUserData;$/;"	m	struct:VkAllocationCallbacks
pUserData	lib/vulkan/vulkan.h	/^    void*                           pUserData;$/;"	m	struct:VkDebugReportCallbackCreateInfoEXT
pVertexAttributeDescriptions	lib/vulkan/vulkan.h	/^    const VkVertexInputAttributeDescription*    pVertexAttributeDescriptions;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo
pVertexBindingDescriptions	lib/vulkan/vulkan.h	/^    const VkVertexInputBindingDescription*      pVertexBindingDescriptions;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo
pVertexInputState	lib/vulkan/vulkan.h	/^    const VkPipelineVertexInputStateCreateInfo*      pVertexInputState;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pViewportState	lib/vulkan/vulkan.h	/^    const VkPipelineViewportStateCreateInfo*         pViewportState;$/;"	m	struct:VkGraphicsPipelineCreateInfo
pViewports	lib/vulkan/vulkan.h	/^    const VkViewport*                     pViewports;$/;"	m	struct:VkPipelineViewportStateCreateInfo
pWaitDstStageMask	lib/vulkan/vulkan.h	/^    const VkPipelineStageFlags*    pWaitDstStageMask;$/;"	m	struct:VkSubmitInfo
pWaitSemaphores	lib/vulkan/vulkan.h	/^    const VkSemaphore*                          pWaitSemaphores;$/;"	m	struct:VkBindSparseInfo
pWaitSemaphores	lib/vulkan/vulkan.h	/^    const VkSemaphore*             pWaitSemaphores;$/;"	m	struct:VkSubmitInfo
pWaitSemaphores	lib/vulkan/vulkan.h	/^    const VkSemaphore*       pWaitSemaphores;$/;"	m	struct:VkPresentInfoKHR
packed	lib/glm/detail/precision.hpp	/^		packed = packed_highp,$/;"	e	enum:glm::precision
packed_highp	lib/glm/detail/precision.hpp	/^		packed_highp,$/;"	e	enum:glm::precision
packed_highp_bvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<bool, packed_highp>		packed_highp_bvec1;$/;"	t	namespace:glm
packed_highp_dvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<double, packed_highp>		packed_highp_dvec1;$/;"	t	namespace:glm
packed_highp_ivec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<int, packed_highp>		packed_highp_ivec1;$/;"	t	namespace:glm
packed_highp_uvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<uint, packed_highp>		packed_highp_uvec1;$/;"	t	namespace:glm
packed_highp_vec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<float, packed_highp>		packed_highp_vec1;$/;"	t	namespace:glm
packed_lowp	lib/glm/detail/precision.hpp	/^		packed_lowp,$/;"	e	enum:glm::precision
packed_lowp_bvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<bool, packed_lowp>		packed_lowp_bvec1;$/;"	t	namespace:glm
packed_lowp_dvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<double, packed_lowp>		packed_lowp_dvec1;$/;"	t	namespace:glm
packed_lowp_ivec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<int, packed_lowp>			packed_lowp_ivec1;$/;"	t	namespace:glm
packed_lowp_uvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<uint, packed_lowp>		packed_lowp_uvec1;$/;"	t	namespace:glm
packed_lowp_vec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<float, packed_lowp>		packed_lowp_vec1;$/;"	t	namespace:glm
packed_mediump	lib/glm/detail/precision.hpp	/^		packed_mediump,$/;"	e	enum:glm::precision
packed_mediump_bvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<bool, packed_mediump>		packed_mediump_bvec1;$/;"	t	namespace:glm
packed_mediump_dvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<double, packed_mediump>	packed_mediump_dvec1;$/;"	t	namespace:glm
packed_mediump_ivec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<int, packed_mediump>		packed_mediump_ivec1;$/;"	t	namespace:glm
packed_mediump_uvec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<uint, packed_mediump>		packed_mediump_uvec1;$/;"	t	namespace:glm
packed_mediump_vec1	lib/glm/gtc/type_aligned.hpp	/^	typedef tvec1<float, packed_mediump>	packed_mediump_vec1;$/;"	t	namespace:glm
pal	lib/stb/stb_image.h	/^   stbi_uc  pal[256][4];$/;"	m	struct:__anon71
param_type	lib/glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> const & param_type;$/;"	t	struct:glm::detail::genType
parameters	lib/vulkan/vulkan.h	/^    VkDisplayModeParametersKHR     parameters;$/;"	m	struct:VkDisplayModeCreateInfoKHR
parameters	lib/vulkan/vulkan.h	/^    VkDisplayModeParametersKHR    parameters;$/;"	m	struct:VkDisplayModePropertiesKHR
parse	lib/stb/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon71
part_type	lib/glm/gtx/dual_quaternion.hpp	/^		typedef glm::tquat<T, P> part_type;$/;"	t	struct:glm::tdualquat
passOp	lib/vulkan/vulkan.h	/^    VkStencilOp    passOp;$/;"	m	struct:VkStencilOpState
patchControlPoints	lib/vulkan/vulkan.h	/^    uint32_t                                  patchControlPoints;$/;"	m	struct:VkPipelineTessellationStateCreateInfo
permute	lib/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER T permute(T const & x)$/;"	f	namespace:glm::detail
permute	lib/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec2<T, P> permute(tvec2<T, P> const & x)$/;"	f	namespace:glm::detail
permute	lib/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec3<T, P> permute(tvec3<T, P> const & x)$/;"	f	namespace:glm::detail
permute	lib/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec4<T, P> permute(tvec4<T, P> const & x)$/;"	f	namespace:glm::detail
persistent	lib/vulkan/vulkan.h	/^    VkBool32           persistent;$/;"	m	struct:VkDisplayPresentInfoKHR
persistentContent	lib/vulkan/vulkan.h	/^    VkBool32                      persistentContent;$/;"	m	struct:VkDisplayPropertiesKHR
pfnAllocation	lib/vulkan/vulkan.h	/^    PFN_vkAllocationFunction                pfnAllocation;$/;"	m	struct:VkAllocationCallbacks
pfnCallback	lib/vulkan/vulkan.h	/^    PFN_vkDebugReportCallbackEXT    pfnCallback;$/;"	m	struct:VkDebugReportCallbackCreateInfoEXT
pfnFree	lib/vulkan/vulkan.h	/^    PFN_vkFreeFunction                      pfnFree;$/;"	m	struct:VkAllocationCallbacks
pfnInternalAllocation	lib/vulkan/vulkan.h	/^    PFN_vkInternalAllocationNotification    pfnInternalAllocation;$/;"	m	struct:VkAllocationCallbacks
pfnInternalFree	lib/vulkan/vulkan.h	/^    PFN_vkInternalFreeNotification          pfnInternalFree;$/;"	m	struct:VkAllocationCallbacks
pfnNextGetDeviceProcAddr	lib/vulkan/vk_layer.h	/^    PFN_vkGetDeviceProcAddr pfnNextGetDeviceProcAddr;$/;"	m	struct:VkLayerDeviceLink_
pfnNextGetInstanceProcAddr	lib/vulkan/vk_layer.h	/^    PFN_vkGetInstanceProcAddr pfnNextGetInstanceProcAddr;$/;"	m	struct:VkLayerDeviceInfo_
pfnNextGetInstanceProcAddr	lib/vulkan/vk_layer.h	/^    PFN_vkGetInstanceProcAddr pfnNextGetInstanceProcAddr;$/;"	m	struct:VkLayerDeviceLink_
pfnNextGetInstanceProcAddr	lib/vulkan/vk_layer.h	/^    PFN_vkGetInstanceProcAddr pfnNextGetInstanceProcAddr;$/;"	m	struct:VkLayerInstanceLink_
pfnReallocation	lib/vulkan/vulkan.h	/^    PFN_vkReallocationFunction              pfnReallocation;$/;"	m	struct:VkAllocationCallbacks
pfnSetDeviceLoaderData	lib/vulkan/vk_layer.h	/^        PFN_vkSetDeviceLoaderData pfnSetDeviceLoaderData;$/;"	m	union:__anon53::__anon54
pfnSetInstanceLoaderData	lib/vulkan/vk_layer.h	/^        PFN_vkSetInstanceLoaderData pfnSetInstanceLoaderData;$/;"	m	union:__anon51::__anon52
physicalDimensions	lib/vulkan/vulkan.h	/^    VkExtent2D                    physicalDimensions;$/;"	m	struct:VkDisplayPropertiesKHR
physicalResolution	lib/vulkan/vulkan.h	/^    VkExtent2D                    physicalResolution;$/;"	m	struct:VkDisplayPropertiesKHR
pipelineBindPoint	lib/vulkan/vulkan.h	/^    VkPipelineBindPoint             pipelineBindPoint;$/;"	m	struct:VkSubpassDescription
pipelineCacheUUID	lib/vulkan/vulkan.h	/^    uint8_t                             pipelineCacheUUID[VK_UUID_SIZE];$/;"	m	struct:VkPhysicalDeviceProperties
pipelineStatistics	lib/vulkan/vulkan.h	/^    VkQueryPipelineStatisticFlags    pipelineStatistics;$/;"	m	struct:VkCommandBufferInheritanceInfo
pipelineStatistics	lib/vulkan/vulkan.h	/^    VkQueryPipelineStatisticFlags    pipelineStatistics;$/;"	m	struct:VkQueryPoolCreateInfo
pipelineStatisticsQuery	lib/vulkan/vulkan.h	/^    VkBool32    pipelineStatisticsQuery;$/;"	m	struct:VkPhysicalDeviceFeatures
planeIndex	lib/vulkan/vk_icd.h	/^    uint32_t planeIndex;$/;"	m	struct:__anon50
planeIndex	lib/vulkan/vulkan.h	/^    uint32_t                          planeIndex;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
planeReorderPossible	lib/vulkan/vulkan.h	/^    VkBool32                      planeReorderPossible;$/;"	m	struct:VkDisplayPropertiesKHR
planeStackIndex	lib/vulkan/vk_icd.h	/^    uint32_t planeStackIndex;$/;"	m	struct:__anon50
planeStackIndex	lib/vulkan/vulkan.h	/^    uint32_t                          planeStackIndex;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
platform	lib/vulkan/vk_icd.h	/^    VkIcdWsiPlatform platform;$/;"	m	struct:__anon44
pointSizeGranularity	lib/vulkan/vulkan.h	/^    float                 pointSizeGranularity;$/;"	m	struct:VkPhysicalDeviceLimits
pointSizeRange	lib/vulkan/vulkan.h	/^    float                 pointSizeRange[2];$/;"	m	struct:VkPhysicalDeviceLimits
pointer	lib/glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> * pointer;$/;"	t	struct:glm::detail::genType
pointer_const	lib/glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> * const pointer_const;$/;"	t	struct:glm::detail::genType
pollEvents	inc/input_manager.h	/^	inline void pollEvents() { glfwPollEvents(); }$/;"	f	class:InputManager
polygonMode	lib/vulkan/vulkan.h	/^    VkPolygonMode                              polygonMode;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
poolSizeCount	lib/vulkan/vulkan.h	/^    uint32_t                       poolSizeCount;$/;"	m	struct:VkDescriptorPoolCreateInfo
pos	inc/quad.h	/^		glm::vec2 pos;$/;"	m	struct:Quad::Vertex
pos	inc/vulkan_manager.h	/^		glm::vec3 pos;$/;"	m	struct:VulkanManager::Vertex
position	lib/vulkan/libspirv.h	/^  spv_position_t position;$/;"	m	struct:spv_diagnostic_t
ppEnabledExtensionNames	lib/vulkan/vulkan.h	/^    const char* const*                 ppEnabledExtensionNames;$/;"	m	struct:VkDeviceCreateInfo
ppEnabledExtensionNames	lib/vulkan/vulkan.h	/^    const char* const*          ppEnabledExtensionNames;$/;"	m	struct:VkInstanceCreateInfo
ppEnabledLayerNames	lib/vulkan/vulkan.h	/^    const char* const*                 ppEnabledLayerNames;$/;"	m	struct:VkDeviceCreateInfo
ppEnabledLayerNames	lib/vulkan/vulkan.h	/^    const char* const*          ppEnabledLayerNames;$/;"	m	struct:VkInstanceCreateInfo
preTransform	lib/vulkan/vulkan.h	/^    VkSurfaceTransformFlagBitsKHR    preTransform;$/;"	m	struct:VkSwapchainCreateInfoKHR
precision	lib/glm/detail/precision.hpp	/^	enum precision$/;"	g	namespace:glm
precision	lib/glm/gtx/io.hpp	/^			unsigned   precision;$/;"	m	class:glm::io::format_punct
precision	lib/glm/gtx/io.hpp	/^		struct precision$/;"	s	namespace:glm::io
precision_	lib/glm/gtx/io.hpp	/^			streamsize_type precision_;$/;"	m	class:glm::io::basic_state_saver
prefix	lib/stb/stb_image.h	/^   stbi__int16 prefix;$/;"	m	struct:__anon70
presentMode	lib/vulkan/vulkan.h	/^    VkPresentModeKHR                 presentMode;$/;"	m	struct:VkSwapchainCreateInfoKHR
preserveAttachmentCount	lib/vulkan/vulkan.h	/^    uint32_t                        preserveAttachmentCount;$/;"	m	struct:VkSubpassDescription
primitiveRestartEnable	lib/vulkan/vulkan.h	/^    VkBool32                                   primitiveRestartEnable;$/;"	m	struct:VkPipelineInputAssemblyStateCreateInfo
profile	lib/glm/detail/type_gentype.hpp	/^	enum profile$/;"	g	namespace:glm
progressive	lib/stb/stb_image.h	/^   int            progressive;$/;"	m	struct:__anon60
proj	inc/vulkan_manager.h	/^		glm::mat4 proj;$/;"	m	struct:VulkanManager::UBO
propertyFlags	lib/vulkan/vulkan.h	/^    VkMemoryPropertyFlags    propertyFlags;$/;"	m	struct:VkMemoryType
pushConstantRangeCount	lib/vulkan/vulkan.h	/^    uint32_t                        pushConstantRangeCount;$/;"	m	struct:VkPipelineLayoutCreateInfo
q	lib/glm/detail/type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::tvec4::__anon1::__anon4
q	lib/glm/detail/type_vec4.hpp	/^			union { T w, a, q; };$/;"	m	union:glm::tvec4::__anon8
quat	lib/glm/fwd.hpp	/^	typedef highp_quat			quat;$/;"	t	namespace:glm
quat	lib/glm/fwd.hpp	/^	typedef lowp_quat			quat;$/;"	t	namespace:glm
quat	lib/glm/fwd.hpp	/^	typedef mediump_quat		quat;$/;"	t	namespace:glm
queryCount	lib/vulkan/vulkan.h	/^    uint32_t                         queryCount;$/;"	m	struct:VkQueryPoolCreateInfo
queryFlags	lib/vulkan/vulkan.h	/^    VkQueryControlFlags              queryFlags;$/;"	m	struct:VkCommandBufferInheritanceInfo
queryType	lib/vulkan/vulkan.h	/^    VkQueryType                      queryType;$/;"	m	struct:VkQueryPoolCreateInfo
queueCount	lib/vulkan/vulkan.h	/^    uint32_t                    queueCount;$/;"	m	struct:VkDeviceQueueCreateInfo
queueCount	lib/vulkan/vulkan.h	/^    uint32_t        queueCount;$/;"	m	struct:VkQueueFamilyProperties
queueCreateInfoCount	lib/vulkan/vulkan.h	/^    uint32_t                           queueCreateInfoCount;$/;"	m	struct:VkDeviceCreateInfo
queueFamilyIndex	lib/vulkan/vulkan.h	/^    uint32_t                    queueFamilyIndex;$/;"	m	struct:VkCommandPoolCreateInfo
queueFamilyIndex	lib/vulkan/vulkan.h	/^    uint32_t                    queueFamilyIndex;$/;"	m	struct:VkDeviceQueueCreateInfo
queueFamilyIndexCount	lib/vulkan/vulkan.h	/^    uint32_t                         queueFamilyIndexCount;$/;"	m	struct:VkSwapchainCreateInfoKHR
queueFamilyIndexCount	lib/vulkan/vulkan.h	/^    uint32_t                 queueFamilyIndexCount;$/;"	m	struct:VkImageCreateInfo
queueFamilyIndexCount	lib/vulkan/vulkan.h	/^    uint32_t               queueFamilyIndexCount;$/;"	m	struct:VkBufferCreateInfo
queueFlags	lib/vulkan/vulkan.h	/^    VkQueueFlags    queueFlags;$/;"	m	struct:VkQueueFamilyProperties
qword	lib/glm/gtx/raw_data.hpp	/^	typedef detail::uint64		qword;$/;"	t	namespace:glm
r	lib/glm/detail/type_vec1.hpp	/^				T r;$/;"	m	union:glm::tvec1::__anon15
r	lib/glm/detail/type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec1::__anon16
r	lib/glm/detail/type_vec2.hpp	/^				struct{ T r, g; };$/;"	m	struct:glm::tvec2::__anon9::__anon11
r	lib/glm/detail/type_vec2.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec2::__anon13
r	lib/glm/detail/type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	m	struct:glm::tvec3::__anon17::__anon19
r	lib/glm/detail/type_vec3.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec3::__anon21
r	lib/glm/detail/type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::tvec4::__anon1::__anon3
r	lib/glm/detail/type_vec4.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec4::__anon5
r	lib/vulkan/vulkan.h	/^    VkComponentSwizzle    r;$/;"	m	struct:VkComponentMapping
range	lib/vulkan/vulkan.h	/^    VkDeviceSize               range;$/;"	m	struct:VkBufferViewCreateInfo
range	lib/vulkan/vulkan.h	/^    VkDeviceSize    range;$/;"	m	struct:VkDescriptorBufferInfo
rasterizationOrder	lib/vulkan/vulkan.h	/^    VkRasterizationOrderAMD    rasterizationOrder;$/;"	m	struct:VkPipelineRasterizationStateRasterizationOrderAMD
rasterizationSamples	lib/vulkan/vulkan.h	/^    VkSampleCountFlagBits                    rasterizationSamples;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo
rasterizerDiscardEnable	lib/vulkan/vulkan.h	/^    VkBool32                                   rasterizerDiscardEnable;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
ratio	lib/stb/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon71
raw_coeff	lib/stb/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon60::__anon61
raw_data	lib/stb/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon60::__anon61
read	lib/stb/stb_image.h	/^   int      (*read)  (void *user,char *data,int size);   \/\/ fill 'data' with 'size' bytes.  return number of bytes actually read$/;"	m	struct:__anon56
readFile	src/file_manager.cpp	/^std::vector<char> FileManager::readFile(const std::string& filename) $/;"	f	class:FileManager
readShader	src/file_manager.cpp	/^std::vector<char> FileManager::readShader(const std::string& shaderName)$/;"	f	class:FileManager
read_from_callbacks	lib/stb/stb_image.h	/^   int read_from_callbacks;$/;"	m	struct:__anon57
real	lib/glm/gtx/dual_quaternion.hpp	/^		glm::tquat<T, P> real, dual;$/;"	m	struct:glm::tdualquat
recreateSwapChain	src/vulkan_manager.cpp	/^void VulkanManager::recreateSwapChain()$/;"	f	class:VulkanManager
rect	lib/vulkan/vulkan.h	/^    VkRect2D    rect;$/;"	m	struct:VkClearRect
reference	lib/glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> & reference;$/;"	t	struct:glm::detail::genType
reference	lib/vulkan/vulkan.h	/^    uint32_t       reference;$/;"	m	struct:VkStencilOpState
refreshRate	lib/vulkan/vulkan.h	/^    uint32_t      refreshRate;$/;"	m	struct:VkDisplayModeParametersKHR
renderArea	lib/vulkan/vulkan.h	/^    VkRect2D               renderArea;$/;"	m	struct:VkRenderPassBeginInfo
renderPass	lib/vulkan/vulkan.h	/^    VkRenderPass                                     renderPass;$/;"	m	struct:VkGraphicsPipelineCreateInfo
renderPass	lib/vulkan/vulkan.h	/^    VkRenderPass                     renderPass;$/;"	m	struct:VkCommandBufferInheritanceInfo
renderPass	lib/vulkan/vulkan.h	/^    VkRenderPass                renderPass;$/;"	m	struct:VkFramebufferCreateInfo
renderPass	lib/vulkan/vulkan.h	/^    VkRenderPass           renderPass;$/;"	m	struct:VkRenderPassBeginInfo
resample	lib/stb/stb_image.h	/^   resample_row_func resample;$/;"	m	struct:__anon62
resample_row_1	lib/stb/stb_image.h	/^static stbi_uc *resample_row_1(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
resample_row_func	lib/stb/stb_image.h	/^typedef stbi_uc *(*resample_row_func)(stbi_uc *out, stbi_uc *in0, stbi_uc *in1,$/;"	t
resample_row_hv_2_kernel	lib/stb/stb_image.h	/^   stbi_uc *(*resample_row_hv_2_kernel)(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs);$/;"	m	struct:__anon60
residencyAlignedMipSize	lib/vulkan/vulkan.h	/^    VkBool32    residencyAlignedMipSize;$/;"	m	struct:VkPhysicalDeviceSparseProperties
residencyNonResidentStrict	lib/vulkan/vulkan.h	/^    VkBool32    residencyNonResidentStrict;$/;"	m	struct:VkPhysicalDeviceSparseProperties
residencyStandard2DBlockShape	lib/vulkan/vulkan.h	/^    VkBool32    residencyStandard2DBlockShape;$/;"	m	struct:VkPhysicalDeviceSparseProperties
residencyStandard2DMultisampleBlockShape	lib/vulkan/vulkan.h	/^    VkBool32    residencyStandard2DMultisampleBlockShape;$/;"	m	struct:VkPhysicalDeviceSparseProperties
residencyStandard3DBlockShape	lib/vulkan/vulkan.h	/^    VkBool32    residencyStandard3DBlockShape;$/;"	m	struct:VkPhysicalDeviceSparseProperties
resourceOffset	lib/vulkan/vulkan.h	/^    VkDeviceSize               resourceOffset;$/;"	m	struct:VkSparseMemoryBind
restart_interval	lib/stb/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon60
result_id	lib/vulkan/libspirv.h	/^  uint32_t result_id;$/;"	m	struct:spv_parsed_instruction_t
rgb	lib/stb/stb_image.h	/^   int            rgb;$/;"	m	struct:__anon60
robustBufferAccess	lib/vulkan/vulkan.h	/^    VkBool32    robustBufferAccess;$/;"	m	struct:VkPhysicalDeviceFeatures
rowPitch	lib/vulkan/vulkan.h	/^    VkDeviceSize    rowPitch;$/;"	m	struct:VkSubresourceLayout
row_major	lib/glm/gtx/io.hpp	/^		enum order_type { column_major, row_major};$/;"	e	enum:glm::io::order_type
row_type	lib/glm/detail/type_mat2x2.hpp	/^		typedef tvec2<T, P> row_type;$/;"	t	struct:glm::tmat2x2
row_type	lib/glm/detail/type_mat2x3.hpp	/^		typedef tvec2<T, P> row_type;$/;"	t	struct:glm::tmat2x3
row_type	lib/glm/detail/type_mat2x4.hpp	/^		typedef tvec2<T, P> row_type;$/;"	t	struct:glm::tmat2x4
row_type	lib/glm/detail/type_mat3x2.hpp	/^		typedef tvec3<T, P> row_type;$/;"	t	struct:glm::tmat3x2
row_type	lib/glm/detail/type_mat3x3.hpp	/^		typedef tvec3<T, P> row_type;$/;"	t	struct:glm::tmat3x3
row_type	lib/glm/detail/type_mat3x4.hpp	/^		typedef tvec3<T, P> row_type;$/;"	t	struct:glm::tmat3x4
row_type	lib/glm/detail/type_mat4x2.hpp	/^		typedef tvec4<T, P> row_type;$/;"	t	struct:glm::tmat4x2
row_type	lib/glm/detail/type_mat4x3.hpp	/^		typedef tvec4<T, P> row_type;$/;"	t	struct:glm::tmat4x3
row_type	lib/glm/detail/type_mat4x4.hpp	/^		typedef tvec4<T, P> row_type;$/;"	t	struct:glm::tmat4x4
rows	lib/glm/gtx/type_trait.hpp	/^			rows = 2$/;"	e	enum:glm::type::__anon28
rows	lib/glm/gtx/type_trait.hpp	/^			rows = 2$/;"	e	enum:glm::type::__anon31
rows	lib/glm/gtx/type_trait.hpp	/^			rows = 2$/;"	e	enum:glm::type::__anon34
rows	lib/glm/gtx/type_trait.hpp	/^			rows = 3$/;"	e	enum:glm::type::__anon29
rows	lib/glm/gtx/type_trait.hpp	/^			rows = 3$/;"	e	enum:glm::type::__anon32
rows	lib/glm/gtx/type_trait.hpp	/^			rows = 3$/;"	e	enum:glm::type::__anon35
rows	lib/glm/gtx/type_trait.hpp	/^			rows = 4$/;"	e	enum:glm::type::__anon30
rows	lib/glm/gtx/type_trait.hpp	/^			rows = 4$/;"	e	enum:glm::type::__anon33
rows	lib/glm/gtx/type_trait.hpp	/^			rows = 4$/;"	e	enum:glm::type::__anon36
rows	lib/glm/gtx/type_trait.hpp	/^		static length_t const rows = 0;$/;"	m	struct:glm::type
s	lib/glm/detail/type_vec1.hpp	/^				T s;$/;"	m	union:glm::tvec1::__anon15
s	lib/glm/detail/type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec1::__anon16
s	lib/glm/detail/type_vec2.hpp	/^				struct{ T s, t; };$/;"	m	struct:glm::tvec2::__anon9::__anon12
s	lib/glm/detail/type_vec2.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec2::__anon13
s	lib/glm/detail/type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	m	struct:glm::tvec3::__anon17::__anon20
s	lib/glm/detail/type_vec3.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec3::__anon21
s	lib/glm/detail/type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::tvec4::__anon1::__anon4
s	lib/glm/detail/type_vec4.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec4::__anon5
s	lib/stb/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon60
s	lib/stb/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon66
sDeviceExtensions	inc/vulkan_manager.h	/^	static const std::vector<const char*> sDeviceExtensions;$/;"	m	class:VulkanManager
sDeviceExtensions	src/vulkan_manager.cpp	/^const std::vector<const char*> VulkanManager::sDeviceExtensions = {$/;"	m	class:VulkanManager	file:
sGetVkResultString	src/vulkan_manager.cpp	/^const char* VulkanManager::sGetVkResultString(VkResult result) {$/;"	f	class:VulkanManager
sGetVkResultString	src/vulkan_manager.cpp	/^const char* VulkanManager::sGetVkResultString(int result) {$/;"	f	class:VulkanManager
sType	lib/vulkan/vk_layer.h	/^    VkStructureType sType; \/\/ VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO$/;"	m	struct:__anon53
sType	lib/vulkan/vk_layer.h	/^    VkStructureType sType; \/\/ VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO$/;"	m	struct:__anon51
sType	lib/vulkan/vulkan.h	/^    VkStructureType                                  sType;$/;"	m	struct:VkGraphicsPipelineCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                               sType;$/;"	m	struct:VkPipelineColorBlendStateCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                             sType;$/;"	m	struct:VkBindSparseInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                             sType;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                            sType;$/;"	m	struct:VkPipelineInputAssemblyStateCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                            sType;$/;"	m	struct:VkPipelineRasterizationStateCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                           sType;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                           sType;$/;"	m	struct:VkPipelineTessellationStateCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                          sType;$/;"	m	struct:VkCommandBufferBeginInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                          sType;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                        sType;$/;"	m	struct:VkDescriptorSetLayoutCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                       sType;$/;"	m	struct:VkPipelineViewportStateCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                      sType;$/;"	m	struct:VkPipelineDynamicStateCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                     sType;$/;"	m	struct:VkPipelineShaderStageCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                    sType;$/;"	m	struct:VkComputePipelineCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                    sType;$/;"	m	struct:VkDeviceCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                   sType;$/;"	m	struct:VkAndroidSurfaceCreateInfoKHR
sType	lib/vulkan/vulkan.h	/^    VkStructureType                   sType;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
sType	lib/vulkan/vulkan.h	/^    VkStructureType                   sType;$/;"	m	struct:VkRenderPassCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                   sType;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR
sType	lib/vulkan/vulkan.h	/^    VkStructureType                  sType;$/;"	m	struct:VkCommandBufferInheritanceInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                  sType;$/;"	m	struct:VkQueryPoolCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                  sType;$/;"	m	struct:VkSwapchainCreateInfoKHR
sType	lib/vulkan/vulkan.h	/^    VkStructureType                  sType;$/;"	m	struct:VkWriteDescriptorSet
sType	lib/vulkan/vulkan.h	/^    VkStructureType                 sType;$/;"	m	struct:VkDebugReportCallbackCreateInfoEXT
sType	lib/vulkan/vulkan.h	/^    VkStructureType                 sType;$/;"	m	struct:VkDescriptorSetAllocateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                 sType;$/;"	m	struct:VkPipelineLayoutCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                 sType;$/;"	m	struct:VkWin32SurfaceCreateInfoKHR
sType	lib/vulkan/vulkan.h	/^    VkStructureType                sType;$/;"	m	struct:VkDescriptorPoolCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                sType;$/;"	m	struct:VkDisplayModeCreateInfoKHR
sType	lib/vulkan/vulkan.h	/^    VkStructureType                sType;$/;"	m	struct:VkSubmitInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType                sType;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR
sType	lib/vulkan/vulkan.h	/^    VkStructureType               sType;$/;"	m	struct:VkDebugMarkerObjectNameInfoEXT
sType	lib/vulkan/vulkan.h	/^    VkStructureType               sType;$/;"	m	struct:VkDebugMarkerObjectTagInfoEXT
sType	lib/vulkan/vulkan.h	/^    VkStructureType               sType;$/;"	m	struct:VkMirSurfaceCreateInfoKHR
sType	lib/vulkan/vulkan.h	/^    VkStructureType               sType;$/;"	m	struct:VkPipelineCacheCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType               sType;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR
sType	lib/vulkan/vulkan.h	/^    VkStructureType              sType;$/;"	m	struct:VkShaderModuleCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType             sType;$/;"	m	struct:VkCommandPoolCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType             sType;$/;"	m	struct:VkDeviceQueueCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType             sType;$/;"	m	struct:VkFramebufferCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType             sType;$/;"	m	struct:VkInstanceCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType            sType;$/;"	m	struct:VkBufferViewCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType            sType;$/;"	m	struct:VkImageMemoryBarrier
sType	lib/vulkan/vulkan.h	/^    VkStructureType            sType;$/;"	m	struct:VkImageViewCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType            sType;$/;"	m	struct:VkPipelineRasterizationStateRasterizationOrderAMD
sType	lib/vulkan/vulkan.h	/^    VkStructureType           sType;$/;"	m	struct:VkSemaphoreCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType          sType;$/;"	m	struct:VkImageCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType          sType;$/;"	m	struct:VkPresentInfoKHR
sType	lib/vulkan/vulkan.h	/^    VkStructureType         sType;$/;"	m	struct:VkCommandBufferAllocateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType         sType;$/;"	m	struct:VkSamplerCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType        sType;$/;"	m	struct:VkBufferCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType        sType;$/;"	m	struct:VkRenderPassBeginInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType       sType;$/;"	m	struct:VkEventCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType       sType;$/;"	m	struct:VkFenceCreateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkApplicationInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkBufferMemoryBarrier
sType	lib/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkCopyDescriptorSet
sType	lib/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkDebugMarkerMarkerInfoEXT
sType	lib/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkDedicatedAllocationBufferCreateInfoNV
sType	lib/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkDedicatedAllocationImageCreateInfoNV
sType	lib/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkDedicatedAllocationMemoryAllocateInfoNV
sType	lib/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkDisplayPresentInfoKHR
sType	lib/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkMappedMemoryRange
sType	lib/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkMemoryAllocateInfo
sType	lib/vulkan/vulkan.h	/^    VkStructureType    sType;$/;"	m	struct:VkMemoryBarrier
sValidationLayers	inc/vulkan_manager.h	/^	static const std::vector<const char*> sValidationLayers;$/;"	m	class:VulkanManager
sValidationLayers	src/vulkan_manager.cpp	/^const std::vector<const char*> VulkanManager::sValidationLayers = {$/;"	m	class:VulkanManager	file:
sampleCounts	lib/vulkan/vulkan.h	/^    VkSampleCountFlags    sampleCounts;$/;"	m	struct:VkImageFormatProperties
sampleRateShading	lib/vulkan/vulkan.h	/^    VkBool32    sampleRateShading;$/;"	m	struct:VkPhysicalDeviceFeatures
sampleShadingEnable	lib/vulkan/vulkan.h	/^    VkBool32                                 sampleShadingEnable;$/;"	m	struct:VkPipelineMultisampleStateCreateInfo
sampledImageColorSampleCounts	lib/vulkan/vulkan.h	/^    VkSampleCountFlags    sampledImageColorSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits
sampledImageDepthSampleCounts	lib/vulkan/vulkan.h	/^    VkSampleCountFlags    sampledImageDepthSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits
sampledImageIntegerSampleCounts	lib/vulkan/vulkan.h	/^    VkSampleCountFlags    sampledImageIntegerSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits
sampledImageStencilSampleCounts	lib/vulkan/vulkan.h	/^    VkSampleCountFlags    sampledImageStencilSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits
sampler	lib/vulkan/vulkan.h	/^    VkSampler        sampler;$/;"	m	struct:VkDescriptorImageInfo
samplerAnisotropy	lib/vulkan/vulkan.h	/^    VkBool32    samplerAnisotropy;$/;"	m	struct:VkPhysicalDeviceFeatures
samples	lib/vulkan/vulkan.h	/^    VkSampleCountFlagBits           samples;$/;"	m	struct:VkAttachmentDescription
samples	lib/vulkan/vulkan.h	/^    VkSampleCountFlagBits    samples;$/;"	m	struct:VkImageCreateInfo
saturate	lib/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER T saturate(T x){return clamp(x, T(0), T(1));}														\/\/!< \\brief Returns clamp(x, 0, 1) for each component in x. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
saturate	lib/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec2<T, P> saturate(const tvec2<T, P>& x){return clamp(x, T(0), T(1));}					\/\/!< \\brief Returns clamp(x, 0, 1) for each component in x. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
saturate	lib/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec3<T, P> saturate(const tvec3<T, P>& x){return clamp(x, T(0), T(1));}					\/\/!< \\brief Returns clamp(x, 0, 1) for each component in x. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
saturate	lib/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec4<T, P> saturate(const tvec4<T, P>& x){return clamp(x, T(0), T(1));}					\/\/!< \\brief Returns clamp(x, 0, 1) for each component in x. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
scan_n	lib/stb/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon60
scissorCount	lib/vulkan/vulkan.h	/^    uint32_t                              scissorCount;$/;"	m	struct:VkPipelineViewportStateCreateInfo
separator	lib/glm/gtx/io.hpp	/^			char_type  separator;$/;"	m	class:glm::io::format_punct
setComputeIndex	src/device_queue_indices.cpp	/^void DeviceQueueIndicies::setComputeIndex(int index) $/;"	f	class:DeviceQueueIndicies
setCursorPosCallback	src/input_manager.cpp	/^void InputManager::setCursorPosCallback(GLFWcursorposfun cbfun)$/;"	f	class:InputManager
setDimens	src/window.cpp	/^void Window::setDimens(unsigned w, unsigned h) $/;"	f	class:Window
setFramebufferSizeCallback	src/input_manager.cpp	/^void InputManager::setFramebufferSizeCallback(GLFWframebuffersizefun cbfun)$/;"	f	class:InputManager
setGlfwWindow	src/input_manager.cpp	/^void InputManager::setGlfwWindow(GLFWwindow& glfwWindow)$/;"	f	class:InputManager
setGraphicsIndex	src/device_queue_indices.cpp	/^void DeviceQueueIndicies::setGraphicsIndex(int index) $/;"	f	class:DeviceQueueIndicies
setHeight	src/window.cpp	/^void Window::setHeight(unsigned h) $/;"	f	class:Window
setIndex	src/device_queue_indices.cpp	/^void DeviceQueueIndicies::setIndex(int& currIndex, int index)$/;"	f	class:DeviceQueueIndicies
setKeyCallback	src/input_manager.cpp	/^void InputManager::setKeyCallback(GLFWkeyfun cbfun)$/;"	f	class:InputManager
setLayoutCount	lib/vulkan/vulkan.h	/^    uint32_t                        setLayoutCount;$/;"	m	struct:VkPipelineLayoutCreateInfo
setMouseButtonCallback	src/input_manager.cpp	/^void InputManager::setMouseButtonCallback(GLFWmousebuttonfun cbfun)$/;"	f	class:InputManager
setScrollCallback	src/input_manager.cpp	/^void InputManager::setScrollCallback(GLFWscrollfun cbfun)$/;"	f	class:InputManager
setSupportedIndex	src/device_queue_indices.cpp	/^void DeviceQueueIndicies::setSupportedIndex(int index)$/;"	f	class:DeviceQueueIndicies
setTransferIndex	src/device_queue_indices.cpp	/^void DeviceQueueIndicies::setTransferIndex(int index) $/;"	f	class:DeviceQueueIndicies
setWidth	src/window.cpp	/^void Window::setWidth(unsigned w) $/;"	f	class:Window
setWindowSizeCallback	src/window.cpp	/^void Window::setWindowSizeCallback(GLFWwindowsizefun f) $/;"	f	class:Window
set_loader_magic_value	lib/vulkan/vk_icd.h	/^static inline void set_loader_magic_value(void *pNewObject) {$/;"	f
shaderClipDistance	lib/vulkan/vulkan.h	/^    VkBool32    shaderClipDistance;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderCullDistance	lib/vulkan/vulkan.h	/^    VkBool32    shaderCullDistance;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderFloat64	lib/vulkan/vulkan.h	/^    VkBool32    shaderFloat64;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderImageGatherExtended	lib/vulkan/vulkan.h	/^    VkBool32    shaderImageGatherExtended;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderInt16	lib/vulkan/vulkan.h	/^    VkBool32    shaderInt16;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderInt64	lib/vulkan/vulkan.h	/^    VkBool32    shaderInt64;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderResourceMinLod	lib/vulkan/vulkan.h	/^    VkBool32    shaderResourceMinLod;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderResourceResidency	lib/vulkan/vulkan.h	/^    VkBool32    shaderResourceResidency;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderSampledImageArrayDynamicIndexing	lib/vulkan/vulkan.h	/^    VkBool32    shaderSampledImageArrayDynamicIndexing;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderStorageBufferArrayDynamicIndexing	lib/vulkan/vulkan.h	/^    VkBool32    shaderStorageBufferArrayDynamicIndexing;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderStorageImageArrayDynamicIndexing	lib/vulkan/vulkan.h	/^    VkBool32    shaderStorageImageArrayDynamicIndexing;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderStorageImageExtendedFormats	lib/vulkan/vulkan.h	/^    VkBool32    shaderStorageImageExtendedFormats;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderStorageImageMultisample	lib/vulkan/vulkan.h	/^    VkBool32    shaderStorageImageMultisample;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderStorageImageReadWithoutFormat	lib/vulkan/vulkan.h	/^    VkBool32    shaderStorageImageReadWithoutFormat;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderStorageImageWriteWithoutFormat	lib/vulkan/vulkan.h	/^    VkBool32    shaderStorageImageWriteWithoutFormat;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderTessellationAndGeometryPointSize	lib/vulkan/vulkan.h	/^    VkBool32    shaderTessellationAndGeometryPointSize;$/;"	m	struct:VkPhysicalDeviceFeatures
shaderUniformBufferArrayDynamicIndexing	lib/vulkan/vulkan.h	/^    VkBool32    shaderUniformBufferArrayDynamicIndexing;$/;"	m	struct:VkPhysicalDeviceFeatures
sharingMode	lib/vulkan/vulkan.h	/^    VkSharingMode            sharingMode;$/;"	m	struct:VkImageCreateInfo
sharingMode	lib/vulkan/vulkan.h	/^    VkSharingMode          sharingMode;$/;"	m	struct:VkBufferCreateInfo
signalSemaphoreCount	lib/vulkan/vulkan.h	/^    uint32_t                                    signalSemaphoreCount;$/;"	m	struct:VkBindSparseInfo
signalSemaphoreCount	lib/vulkan/vulkan.h	/^    uint32_t                       signalSemaphoreCount;$/;"	m	struct:VkSubmitInfo
simd	lib/glm/detail/type_gentype.hpp	/^		simd$/;"	e	enum:glm::profile
sint	lib/glm/gtx/integer.hpp	/^	typedef signed int					sint;$/;"	t	namespace:glm
size	lib/stb/stb_image.h	/^   stbi_uc  size[257];$/;"	m	struct:__anon59
size	lib/stb/stb_image.h	/^   stbi_uc  size[288];$/;"	m	struct:__anon63
size	lib/stb/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon69
size	lib/vulkan/vulkan.h	/^    VkDeviceSize               size;$/;"	m	struct:VkSparseMemoryBind
size	lib/vulkan/vulkan.h	/^    VkDeviceSize           size;$/;"	m	struct:VkBufferCreateInfo
size	lib/vulkan/vulkan.h	/^    VkDeviceSize         size;$/;"	m	struct:VkMemoryHeap
size	lib/vulkan/vulkan.h	/^    VkDeviceSize       size;$/;"	m	struct:VkBufferMemoryBarrier
size	lib/vulkan/vulkan.h	/^    VkDeviceSize       size;$/;"	m	struct:VkMappedMemoryRange
size	lib/vulkan/vulkan.h	/^    VkDeviceSize    size;$/;"	m	struct:VkBufferCopy
size	lib/vulkan/vulkan.h	/^    VkDeviceSize    size;$/;"	m	struct:VkMemoryRequirements
size	lib/vulkan/vulkan.h	/^    VkDeviceSize    size;$/;"	m	struct:VkSubresourceLayout
size	lib/vulkan/vulkan.h	/^    size_t      size;$/;"	m	struct:VkSpecializationMapEntry
size	lib/vulkan/vulkan.h	/^    uint32_t              size;$/;"	m	struct:VkPushConstantRange
size1	lib/glm/gtx/std_based_type.hpp	/^	typedef tvec1<std::size_t, defaultp>		size1;$/;"	t	namespace:glm
size1_t	lib/glm/gtx/std_based_type.hpp	/^	typedef tvec1<std::size_t, defaultp>		size1_t;$/;"	t	namespace:glm
size2	lib/glm/gtx/std_based_type.hpp	/^	typedef tvec2<std::size_t, defaultp>		size2;$/;"	t	namespace:glm
size2_t	lib/glm/gtx/std_based_type.hpp	/^	typedef tvec2<std::size_t, defaultp>		size2_t;$/;"	t	namespace:glm
size3	lib/glm/gtx/std_based_type.hpp	/^	typedef tvec3<std::size_t, defaultp>		size3;$/;"	t	namespace:glm
size3_t	lib/glm/gtx/std_based_type.hpp	/^	typedef tvec3<std::size_t, defaultp>		size3_t;$/;"	t	namespace:glm
size4	lib/glm/gtx/std_based_type.hpp	/^	typedef tvec4<std::size_t, defaultp>		size4;$/;"	t	namespace:glm
size4_t	lib/glm/gtx/std_based_type.hpp	/^	typedef tvec4<std::size_t, defaultp>		size4_t;$/;"	t	namespace:glm
sizeType	lib/glm/detail/type_gentype.hpp	/^	typedef std::size_t sizeType;$/;"	t	namespace:glm
size_type	lib/glm/detail/type_gentype.hpp	/^		typedef sizeType size_type;$/;"	t	struct:glm::detail::genType
skip	lib/stb/stb_image.h	/^   void     (*skip)  (void *user,int n);                 \/\/ skip the next 'n' bytes, or 'unget' the last -n bytes if negative$/;"	m	struct:__anon56
snprintf	lib/vulkan/vk_sdk_platform.h	39;"	d
space	lib/glm/gtx/io.hpp	/^			char_type  space;$/;"	m	class:glm::io::format_punct
sparseAddressSpaceSize	lib/vulkan/vulkan.h	/^    VkDeviceSize          sparseAddressSpaceSize;$/;"	m	struct:VkPhysicalDeviceLimits
sparseBinding	lib/vulkan/vulkan.h	/^    VkBool32    sparseBinding;$/;"	m	struct:VkPhysicalDeviceFeatures
sparseProperties	lib/vulkan/vulkan.h	/^    VkPhysicalDeviceSparseProperties    sparseProperties;$/;"	m	struct:VkPhysicalDeviceProperties
sparseResidency16Samples	lib/vulkan/vulkan.h	/^    VkBool32    sparseResidency16Samples;$/;"	m	struct:VkPhysicalDeviceFeatures
sparseResidency2Samples	lib/vulkan/vulkan.h	/^    VkBool32    sparseResidency2Samples;$/;"	m	struct:VkPhysicalDeviceFeatures
sparseResidency4Samples	lib/vulkan/vulkan.h	/^    VkBool32    sparseResidency4Samples;$/;"	m	struct:VkPhysicalDeviceFeatures
sparseResidency8Samples	lib/vulkan/vulkan.h	/^    VkBool32    sparseResidency8Samples;$/;"	m	struct:VkPhysicalDeviceFeatures
sparseResidencyAliased	lib/vulkan/vulkan.h	/^    VkBool32    sparseResidencyAliased;$/;"	m	struct:VkPhysicalDeviceFeatures
sparseResidencyBuffer	lib/vulkan/vulkan.h	/^    VkBool32    sparseResidencyBuffer;$/;"	m	struct:VkPhysicalDeviceFeatures
sparseResidencyImage2D	lib/vulkan/vulkan.h	/^    VkBool32    sparseResidencyImage2D;$/;"	m	struct:VkPhysicalDeviceFeatures
sparseResidencyImage3D	lib/vulkan/vulkan.h	/^    VkBool32    sparseResidencyImage3D;$/;"	m	struct:VkPhysicalDeviceFeatures
specVersion	lib/vulkan/vulkan.h	/^    uint32_t    specVersion;$/;"	m	struct:VkExtensionProperties
specVersion	lib/vulkan/vulkan.h	/^    uint32_t    specVersion;$/;"	m	struct:VkLayerProperties
spec_end	lib/stb/stb_image.h	/^   int            spec_end;$/;"	m	struct:__anon60
spec_start	lib/stb/stb_image.h	/^   int            spec_start;$/;"	m	struct:__anon60
spirv_H	lib/vulkan/spirv.h	49;"	d
spirv_HPP	lib/vulkan/spirv.hpp	43;"	d
spv	lib/vulkan/spirv.hpp	/^namespace spv {$/;"	n
spv	lib/vulkan/spirv.py	/^spv = {$/;"	v
spv_binary	lib/vulkan/libspirv.h	/^typedef spv_binary_t* spv_binary;$/;"	t
spv_binary_t	lib/vulkan/libspirv.h	/^typedef struct spv_binary_t {$/;"	s
spv_binary_t	lib/vulkan/libspirv.h	/^} spv_binary_t;$/;"	t	typeref:struct:spv_binary_t
spv_binary_to_text_options_t	lib/vulkan/libspirv.h	/^typedef enum spv_binary_to_text_options_t {$/;"	g
spv_binary_to_text_options_t	lib/vulkan/libspirv.h	/^} spv_binary_to_text_options_t;$/;"	t	typeref:enum:spv_binary_to_text_options_t
spv_const_binary	lib/vulkan/libspirv.h	/^typedef spv_const_binary_t* spv_const_binary;$/;"	t
spv_const_binary_t	lib/vulkan/libspirv.h	/^typedef struct spv_const_binary_t {$/;"	s
spv_const_binary_t	lib/vulkan/libspirv.h	/^} spv_const_binary_t;$/;"	t	typeref:struct:spv_const_binary_t
spv_const_context	lib/vulkan/libspirv.h	/^typedef const spv_context_t* spv_const_context;$/;"	t
spv_context	lib/vulkan/libspirv.h	/^typedef spv_context_t* spv_context;$/;"	t
spv_context_t	lib/vulkan/libspirv.h	/^typedef struct spv_context_t spv_context_t;$/;"	t	typeref:struct:spv_context_t
spv_diagnostic	lib/vulkan/libspirv.h	/^typedef spv_diagnostic_t* spv_diagnostic;$/;"	t
spv_diagnostic_t	lib/vulkan/libspirv.h	/^typedef struct spv_diagnostic_t {$/;"	s
spv_diagnostic_t	lib/vulkan/libspirv.h	/^} spv_diagnostic_t;$/;"	t	typeref:struct:spv_diagnostic_t
spv_endianness_t	lib/vulkan/libspirv.h	/^typedef enum spv_endianness_t {$/;"	g
spv_endianness_t	lib/vulkan/libspirv.h	/^} spv_endianness_t;$/;"	t	typeref:enum:spv_endianness_t
spv_ext_inst_type_t	lib/vulkan/libspirv.h	/^typedef enum spv_ext_inst_type_t {$/;"	g
spv_ext_inst_type_t	lib/vulkan/libspirv.h	/^} spv_ext_inst_type_t;$/;"	t	typeref:enum:spv_ext_inst_type_t
spv_number_kind_t	lib/vulkan/libspirv.h	/^typedef enum spv_number_kind_t {$/;"	g
spv_number_kind_t	lib/vulkan/libspirv.h	/^} spv_number_kind_t;$/;"	t	typeref:enum:spv_number_kind_t
spv_operand_type_t	lib/vulkan/libspirv.h	/^typedef enum spv_operand_type_t {$/;"	g
spv_operand_type_t	lib/vulkan/libspirv.h	/^} spv_operand_type_t;$/;"	t	typeref:enum:spv_operand_type_t
spv_parsed_header_fn_t	lib/vulkan/libspirv.h	/^typedef spv_result_t (*spv_parsed_header_fn_t)($/;"	t
spv_parsed_instruction_fn_t	lib/vulkan/libspirv.h	/^typedef spv_result_t (*spv_parsed_instruction_fn_t)($/;"	t
spv_parsed_instruction_t	lib/vulkan/libspirv.h	/^typedef struct spv_parsed_instruction_t {$/;"	s
spv_parsed_instruction_t	lib/vulkan/libspirv.h	/^} spv_parsed_instruction_t;$/;"	t	typeref:struct:spv_parsed_instruction_t
spv_parsed_operand_t	lib/vulkan/libspirv.h	/^typedef struct spv_parsed_operand_t {$/;"	s
spv_parsed_operand_t	lib/vulkan/libspirv.h	/^} spv_parsed_operand_t;$/;"	t	typeref:struct:spv_parsed_operand_t
spv_position	lib/vulkan/libspirv.h	/^typedef spv_position_t* spv_position;$/;"	t
spv_position_t	lib/vulkan/libspirv.h	/^typedef struct spv_position_t {$/;"	s
spv_position_t	lib/vulkan/libspirv.h	/^} spv_position_t;$/;"	t	typeref:struct:spv_position_t
spv_result_t	lib/vulkan/libspirv.h	/^typedef enum spv_result_t {$/;"	g
spv_result_t	lib/vulkan/libspirv.h	/^} spv_result_t;$/;"	t	typeref:enum:spv_result_t
spv_target_env	lib/vulkan/libspirv.h	/^} spv_target_env;$/;"	t	typeref:enum:__anon41
spv_text	lib/vulkan/libspirv.h	/^typedef spv_text_t* spv_text;$/;"	t
spv_text_t	lib/vulkan/libspirv.h	/^typedef struct spv_text_t {$/;"	s
spv_text_t	lib/vulkan/libspirv.h	/^} spv_text_t;$/;"	t	typeref:struct:spv_text_t
srcAccessMask	lib/vulkan/vulkan.h	/^    VkAccessFlags              srcAccessMask;$/;"	m	struct:VkImageMemoryBarrier
srcAccessMask	lib/vulkan/vulkan.h	/^    VkAccessFlags           srcAccessMask;$/;"	m	struct:VkSubpassDependency
srcAccessMask	lib/vulkan/vulkan.h	/^    VkAccessFlags      srcAccessMask;$/;"	m	struct:VkBufferMemoryBarrier
srcAccessMask	lib/vulkan/vulkan.h	/^    VkAccessFlags      srcAccessMask;$/;"	m	struct:VkMemoryBarrier
srcAlphaBlendFactor	lib/vulkan/vulkan.h	/^    VkBlendFactor            srcAlphaBlendFactor;$/;"	m	struct:VkPipelineColorBlendAttachmentState
srcArrayElement	lib/vulkan/vulkan.h	/^    uint32_t           srcArrayElement;$/;"	m	struct:VkCopyDescriptorSet
srcBinding	lib/vulkan/vulkan.h	/^    uint32_t           srcBinding;$/;"	m	struct:VkCopyDescriptorSet
srcColorBlendFactor	lib/vulkan/vulkan.h	/^    VkBlendFactor            srcColorBlendFactor;$/;"	m	struct:VkPipelineColorBlendAttachmentState
srcOffset	lib/vulkan/vulkan.h	/^    VkDeviceSize    srcOffset;$/;"	m	struct:VkBufferCopy
srcOffset	lib/vulkan/vulkan.h	/^    VkOffset3D                  srcOffset;$/;"	m	struct:VkImageCopy
srcOffset	lib/vulkan/vulkan.h	/^    VkOffset3D                  srcOffset;$/;"	m	struct:VkImageResolve
srcOffsets	lib/vulkan/vulkan.h	/^    VkOffset3D                  srcOffsets[2];$/;"	m	struct:VkImageBlit
srcQueueFamilyIndex	lib/vulkan/vulkan.h	/^    uint32_t                   srcQueueFamilyIndex;$/;"	m	struct:VkImageMemoryBarrier
srcQueueFamilyIndex	lib/vulkan/vulkan.h	/^    uint32_t           srcQueueFamilyIndex;$/;"	m	struct:VkBufferMemoryBarrier
srcRect	lib/vulkan/vulkan.h	/^    VkRect2D           srcRect;$/;"	m	struct:VkDisplayPresentInfoKHR
srcSet	lib/vulkan/vulkan.h	/^    VkDescriptorSet    srcSet;$/;"	m	struct:VkCopyDescriptorSet
srcStageMask	lib/vulkan/vulkan.h	/^    VkPipelineStageFlags    srcStageMask;$/;"	m	struct:VkSubpassDependency
srcSubpass	lib/vulkan/vulkan.h	/^    uint32_t                srcSubpass;$/;"	m	struct:VkSubpassDependency
srcSubresource	lib/vulkan/vulkan.h	/^    VkImageSubresourceLayers    srcSubresource;$/;"	m	struct:VkImageBlit
srcSubresource	lib/vulkan/vulkan.h	/^    VkImageSubresourceLayers    srcSubresource;$/;"	m	struct:VkImageCopy
srcSubresource	lib/vulkan/vulkan.h	/^    VkImageSubresourceLayers    srcSubresource;$/;"	m	struct:VkImageResolve
stage	lib/vulkan/vulkan.h	/^    VkPipelineShaderStageCreateInfo    stage;$/;"	m	struct:VkComputePipelineCreateInfo
stage	lib/vulkan/vulkan.h	/^    VkShaderStageFlagBits               stage;$/;"	m	struct:VkPipelineShaderStageCreateInfo
stageCount	lib/vulkan/vulkan.h	/^    uint32_t                                         stageCount;$/;"	m	struct:VkGraphicsPipelineCreateInfo
stageFlags	lib/vulkan/vulkan.h	/^    VkShaderStageFlags    stageFlags;$/;"	m	struct:VkDescriptorSetLayoutBinding
stageFlags	lib/vulkan/vulkan.h	/^    VkShaderStageFlags    stageFlags;$/;"	m	struct:VkPushConstantRange
standardSampleLocations	lib/vulkan/vulkan.h	/^    VkBool32              standardSampleLocations;$/;"	m	struct:VkPhysicalDeviceLimits
start_x	lib/stb/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon71
start_y	lib/stb/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon71
state_	lib/glm/gtx/io.hpp	/^			state_type&     state_;$/;"	m	class:glm::io::basic_state_saver
state_saver	lib/glm/gtx/io.hpp	/^		typedef basic_state_saver<char>     state_saver;$/;"	t	namespace:glm::io
state_type	lib/glm/gtx/io.hpp	/^			typedef ::std::basic_ios<CTy,CTr>      state_type;$/;"	t	class:glm::io::basic_state_saver
stbi__DNL	lib/stb/stb_image.h	2793;"	d
stbi__EOI	lib/stb/stb_image.h	2795;"	d
stbi__SOF	lib/stb/stb_image.h	2796;"	d
stbi__SOF_progressive	lib/stb/stb_image.h	2799;"	d
stbi__SOI	lib/stb/stb_image.h	2794;"	d
stbi__SOS	lib/stb/stb_image.h	2797;"	d
stbi__YCbCr_to_RGB_row	lib/stb/stb_image.h	/^static void stbi__YCbCr_to_RGB_row(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc *pcr, int count, int step)$/;"	f
stbi__YCbCr_to_RGB_simd	lib/stb/stb_image.h	/^static void stbi__YCbCr_to_RGB_simd(stbi_uc *out, stbi_uc const *y, stbi_uc const *pcb, stbi_uc const *pcr, int count, int step)$/;"	f
stbi__at_eof	lib/stb/stb_image.h	/^stbi_inline static int stbi__at_eof(stbi__context *s)$/;"	f
stbi__bit_reverse	lib/stb/stb_image.h	/^stbi_inline static int stbi__bit_reverse(int v, int bits)$/;"	f
stbi__bitcount	lib/stb/stb_image.h	/^static int stbi__bitcount(unsigned int a)$/;"	f
stbi__bitreverse16	lib/stb/stb_image.h	/^stbi_inline static int stbi__bitreverse16(int n)$/;"	f
stbi__bmask	lib/stb/stb_image.h	/^static stbi__uint32 stbi__bmask[17]={0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535};$/;"	v
stbi__bmp_data	lib/stb/stb_image.h	/^} stbi__bmp_data;$/;"	t	typeref:struct:__anon68
stbi__bmp_info	lib/stb/stb_image.h	/^static int stbi__bmp_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__bmp_load	lib/stb/stb_image.h	/^static stbi_uc *stbi__bmp_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__bmp_parse_header	lib/stb/stb_image.h	/^static void *stbi__bmp_parse_header(stbi__context *s, stbi__bmp_data *info)$/;"	f
stbi__bmp_test	lib/stb/stb_image.h	/^static int stbi__bmp_test(stbi__context *s)$/;"	f
stbi__bmp_test_raw	lib/stb/stb_image.h	/^static int stbi__bmp_test_raw(stbi__context *s)$/;"	f
stbi__build_fast_ac	lib/stb/stb_image.h	/^static void stbi__build_fast_ac(stbi__int16 *fast_ac, stbi__huffman *h)$/;"	f
stbi__build_huffman	lib/stb/stb_image.h	/^static int stbi__build_huffman(stbi__huffman *h, int *count)$/;"	f
stbi__check_png_header	lib/stb/stb_image.h	/^static int stbi__check_png_header(stbi__context *s)$/;"	f
stbi__clamp	lib/stb/stb_image.h	/^stbi_inline static stbi_uc stbi__clamp(int x)$/;"	f
stbi__cleanup_jpeg	lib/stb/stb_image.h	/^static void stbi__cleanup_jpeg(stbi__jpeg *j)$/;"	f
stbi__compute_huffman_codes	lib/stb/stb_image.h	/^static int stbi__compute_huffman_codes(stbi__zbuf *a)$/;"	f
stbi__compute_transparency	lib/stb/stb_image.h	/^static int stbi__compute_transparency(stbi__png *z, stbi_uc tc[3], int out_n)$/;"	f
stbi__compute_transparency16	lib/stb/stb_image.h	/^static int stbi__compute_transparency16(stbi__png *z, stbi__uint16 tc[3], int out_n)$/;"	f
stbi__compute_y	lib/stb/stb_image.h	/^static stbi_uc stbi__compute_y(int r, int g, int b)$/;"	f
stbi__context	lib/stb/stb_image.h	/^} stbi__context;$/;"	t	typeref:struct:__anon57
stbi__convert_format	lib/stb/stb_image.h	/^static unsigned char *stbi__convert_format(unsigned char *data, int img_n, int req_comp, unsigned int x, unsigned int y)$/;"	f
stbi__copyval	lib/stb/stb_image.h	/^static void stbi__copyval(int channel,stbi_uc *dest,const stbi_uc *src)$/;"	f
stbi__cpuid3	lib/stb/stb_image.h	/^static int stbi__cpuid3(void)$/;"	f
stbi__create_png_image	lib/stb/stb_image.h	/^static int stbi__create_png_image(stbi__png *a, stbi_uc *image_data, stbi__uint32 image_data_len, int out_n, int depth, int color, int interlaced)$/;"	f
stbi__create_png_image_raw	lib/stb/stb_image.h	/^static int stbi__create_png_image_raw(stbi__png *a, stbi_uc *raw, stbi__uint32 raw_len, int out_n, stbi__uint32 x, stbi__uint32 y, int depth, int color)$/;"	f
stbi__de_iphone	lib/stb/stb_image.h	/^static void stbi__de_iphone(stbi__png *z)$/;"	f
stbi__de_iphone_flag	lib/stb/stb_image.h	/^static int stbi__de_iphone_flag = 0;$/;"	v
stbi__decode_jpeg_header	lib/stb/stb_image.h	/^static int stbi__decode_jpeg_header(stbi__jpeg *z, int scan)$/;"	f
stbi__decode_jpeg_image	lib/stb/stb_image.h	/^static int stbi__decode_jpeg_image(stbi__jpeg *j)$/;"	f
stbi__depth_scale_table	lib/stb/stb_image.h	/^static stbi_uc stbi__depth_scale_table[9] = { 0, 0xff, 0x55, 0, 0x11, 0,0,0, 0x01 };$/;"	v
stbi__div16	lib/stb/stb_image.h	2915;"	d
stbi__div4	lib/stb/stb_image.h	2866;"	d
stbi__do_png	lib/stb/stb_image.h	/^static unsigned char *stbi__do_png(stbi__png *p, int *x, int *y, int *n, int req_comp)$/;"	f
stbi__do_zlib	lib/stb/stb_image.h	/^static int stbi__do_zlib(stbi__zbuf *a, char *obuf, int olen, int exp, int parse_header)$/;"	f
stbi__err	lib/stb/stb_image.h	/^static int stbi__err(const char *str)$/;"	f
stbi__err	lib/stb/stb_image.h	908;"	d
stbi__err	lib/stb/stb_image.h	910;"	d
stbi__err	lib/stb/stb_image.h	912;"	d
stbi__errpf	lib/stb/stb_image.h	915;"	d
stbi__errpuc	lib/stb/stb_image.h	916;"	d
stbi__expand_png_palette	lib/stb/stb_image.h	/^static int stbi__expand_png_palette(stbi__png *a, stbi_uc *palette, int len, int pal_img_n)$/;"	f
stbi__extend_receive	lib/stb/stb_image.h	/^stbi_inline static int stbi__extend_receive(stbi__jpeg *j, int n)$/;"	f
stbi__f2f	lib/stb/stb_image.h	1928;"	d
stbi__fill_bits	lib/stb/stb_image.h	/^static void stbi__fill_bits(stbi__zbuf *z)$/;"	f
stbi__fill_gif_background	lib/stb/stb_image.h	/^static void stbi__fill_gif_background(stbi__gif *g, int x0, int y0, int x1, int y1)$/;"	f
stbi__float2int	lib/stb/stb_image.h	1405;"	d
stbi__float_postprocess	lib/stb/stb_image.h	/^static void stbi__float_postprocess(float *result, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__fopen	lib/stb/stb_image.h	/^static FILE *stbi__fopen(char const *filename, char const *mode)$/;"	f
stbi__fsh	lib/stb/stb_image.h	1929;"	d
stbi__g_failure_reason	lib/stb/stb_image.h	/^static const char *stbi__g_failure_reason;$/;"	v
stbi__get16be	lib/stb/stb_image.h	/^static int stbi__get16be(stbi__context *s)$/;"	f
stbi__get16le	lib/stb/stb_image.h	/^static int stbi__get16le(stbi__context *s)$/;"	f
stbi__get32be	lib/stb/stb_image.h	/^static stbi__uint32 stbi__get32be(stbi__context *s)$/;"	f
stbi__get32le	lib/stb/stb_image.h	/^static stbi__uint32 stbi__get32le(stbi__context *s)$/;"	f
stbi__get8	lib/stb/stb_image.h	/^stbi_inline static stbi_uc stbi__get8(stbi__context *s)$/;"	f
stbi__get_chunk_header	lib/stb/stb_image.h	/^static stbi__pngchunk stbi__get_chunk_header(stbi__context *s)$/;"	f
stbi__get_marker	lib/stb/stb_image.h	/^static stbi_uc stbi__get_marker(stbi__jpeg *j)$/;"	f
stbi__getn	lib/stb/stb_image.h	/^static int stbi__getn(stbi__context *s, stbi_uc *buffer, int n)$/;"	f
stbi__gif	lib/stb/stb_image.h	/^} stbi__gif;$/;"	t	typeref:struct:__anon71
stbi__gif_header	lib/stb/stb_image.h	/^static int stbi__gif_header(stbi__context *s, stbi__gif *g, int *comp, int is_info)$/;"	f
stbi__gif_info	lib/stb/stb_image.h	/^static int stbi__gif_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__gif_info_raw	lib/stb/stb_image.h	/^static int stbi__gif_info_raw(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__gif_load	lib/stb/stb_image.h	/^static stbi_uc *stbi__gif_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__gif_load_next	lib/stb/stb_image.h	/^static stbi_uc *stbi__gif_load_next(stbi__context *s, stbi__gif *g, int *comp, int req_comp)$/;"	f
stbi__gif_lzw	lib/stb/stb_image.h	/^} stbi__gif_lzw;$/;"	t	typeref:struct:__anon70
stbi__gif_parse_colortable	lib/stb/stb_image.h	/^static void stbi__gif_parse_colortable(stbi__context *s, stbi_uc pal[256][4], int num_entries, int transp)$/;"	f
stbi__gif_test	lib/stb/stb_image.h	/^static int stbi__gif_test(stbi__context *s)$/;"	f
stbi__gif_test_raw	lib/stb/stb_image.h	/^static int stbi__gif_test_raw(stbi__context *s)$/;"	f
stbi__grow_buffer_unsafe	lib/stb/stb_image.h	/^static void stbi__grow_buffer_unsafe(stbi__jpeg *j)$/;"	f
stbi__h2l_gamma_i	lib/stb/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v
stbi__h2l_scale_i	lib/stb/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v
stbi__hdr_convert	lib/stb/stb_image.h	/^static void stbi__hdr_convert(float *output, stbi_uc *input, int req_comp)$/;"	f
stbi__hdr_gettoken	lib/stb/stb_image.h	/^static char *stbi__hdr_gettoken(stbi__context *z, char *buffer)$/;"	f
stbi__hdr_info	lib/stb/stb_image.h	/^static int stbi__hdr_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__hdr_load	lib/stb/stb_image.h	/^static float *stbi__hdr_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__hdr_test	lib/stb/stb_image.h	/^static int stbi__hdr_test(stbi__context* s)$/;"	f
stbi__hdr_test_core	lib/stb/stb_image.h	/^static int stbi__hdr_test_core(stbi__context *s)$/;"	f
stbi__hdr_to_ldr	lib/stb/stb_image.h	/^static stbi_uc *stbi__hdr_to_ldr(float   *data, int x, int y, int comp)$/;"	f
stbi__high_bit	lib/stb/stb_image.h	/^static int stbi__high_bit(unsigned int z)$/;"	f
stbi__huffman	lib/stb/stb_image.h	/^} stbi__huffman;$/;"	t	typeref:struct:__anon59
stbi__idct_block	lib/stb/stb_image.h	/^static void stbi__idct_block(stbi_uc *out, int out_stride, short data[64])$/;"	f
stbi__idct_simd	lib/stb/stb_image.h	/^static void stbi__idct_simd(stbi_uc *out, int out_stride, short data[64])$/;"	f
stbi__info_main	lib/stb/stb_image.h	/^static int stbi__info_main(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__init_zdefaults	lib/stb/stb_image.h	/^static void stbi__init_zdefaults(void)$/;"	f
stbi__int16	lib/stb/stb_image.h	/^typedef   signed short stbi__int16;$/;"	t
stbi__int16	lib/stb/stb_image.h	/^typedef int16_t  stbi__int16;$/;"	t
stbi__int32	lib/stb/stb_image.h	/^typedef   signed int   stbi__int32;$/;"	t
stbi__int32	lib/stb/stb_image.h	/^typedef int32_t  stbi__int32;$/;"	t
stbi__jbias	lib/stb/stb_image.h	/^static int const stbi__jbias[16] = {0,-1,-3,-7,-15,-31,-63,-127,-255,-511,-1023,-2047,-4095,-8191,-16383,-32767};$/;"	v
stbi__jpeg	lib/stb/stb_image.h	/^} stbi__jpeg;$/;"	t	typeref:struct:__anon60
stbi__jpeg_decode_block	lib/stb/stb_image.h	/^static int stbi__jpeg_decode_block(stbi__jpeg *j, short data[64], stbi__huffman *hdc, stbi__huffman *hac, stbi__int16 *fac, int b, stbi_uc *dequant)$/;"	f
stbi__jpeg_decode_block_prog_ac	lib/stb/stb_image.h	/^static int stbi__jpeg_decode_block_prog_ac(stbi__jpeg *j, short data[64], stbi__huffman *hac, stbi__int16 *fac)$/;"	f
stbi__jpeg_decode_block_prog_dc	lib/stb/stb_image.h	/^static int stbi__jpeg_decode_block_prog_dc(stbi__jpeg *j, short data[64], stbi__huffman *hdc, int b)$/;"	f
stbi__jpeg_dequantize	lib/stb/stb_image.h	/^static void stbi__jpeg_dequantize(short *data, stbi_uc *dequant)$/;"	f
stbi__jpeg_dezigzag	lib/stb/stb_image.h	/^static stbi_uc stbi__jpeg_dezigzag[64+15] =$/;"	v
stbi__jpeg_finish	lib/stb/stb_image.h	/^static void stbi__jpeg_finish(stbi__jpeg *z)$/;"	f
stbi__jpeg_get_bit	lib/stb/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bit(stbi__jpeg *j)$/;"	f
stbi__jpeg_get_bits	lib/stb/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bits(stbi__jpeg *j, int n)$/;"	f
stbi__jpeg_huff_decode	lib/stb/stb_image.h	/^stbi_inline static int stbi__jpeg_huff_decode(stbi__jpeg *j, stbi__huffman *h)$/;"	f
stbi__jpeg_info	lib/stb/stb_image.h	/^static int stbi__jpeg_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__jpeg_info_raw	lib/stb/stb_image.h	/^static int stbi__jpeg_info_raw(stbi__jpeg *j, int *x, int *y, int *comp)$/;"	f
stbi__jpeg_load	lib/stb/stb_image.h	/^static unsigned char *stbi__jpeg_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__jpeg_reset	lib/stb/stb_image.h	/^static void stbi__jpeg_reset(stbi__jpeg *j)$/;"	f
stbi__jpeg_test	lib/stb/stb_image.h	/^static int stbi__jpeg_test(stbi__context *s)$/;"	f
stbi__l2h_gamma	lib/stb/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v
stbi__l2h_scale	lib/stb/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v
stbi__ldr_to_hdr	lib/stb/stb_image.h	/^static float   *stbi__ldr_to_hdr(stbi_uc *data, int x, int y, int comp)$/;"	f
stbi__load_flip	lib/stb/stb_image.h	/^static unsigned char *stbi__load_flip(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__load_main	lib/stb/stb_image.h	/^static unsigned char *stbi__load_main(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__loadf_main	lib/stb/stb_image.h	/^static float *stbi__loadf_main(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__malloc	lib/stb/stb_image.h	/^static void *stbi__malloc(size_t size)$/;"	f
stbi__out_gif_code	lib/stb/stb_image.h	/^static void stbi__out_gif_code(stbi__gif *g, stbi__uint16 code)$/;"	f
stbi__paeth	lib/stb/stb_image.h	/^static int stbi__paeth(int a, int b, int c)$/;"	f
stbi__parse_entropy_coded_data	lib/stb/stb_image.h	/^static int stbi__parse_entropy_coded_data(stbi__jpeg *z)$/;"	f
stbi__parse_huffman_block	lib/stb/stb_image.h	/^static int stbi__parse_huffman_block(stbi__zbuf *a)$/;"	f
stbi__parse_png_file	lib/stb/stb_image.h	/^static int stbi__parse_png_file(stbi__png *z, int scan, int req_comp)$/;"	f
stbi__parse_uncompressed_block	lib/stb/stb_image.h	/^static int stbi__parse_uncompressed_block(stbi__zbuf *a)$/;"	f
stbi__parse_zlib	lib/stb/stb_image.h	/^static int stbi__parse_zlib(stbi__zbuf *a, int parse_header)$/;"	f
stbi__parse_zlib_header	lib/stb/stb_image.h	/^static int stbi__parse_zlib_header(stbi__zbuf *a)$/;"	f
stbi__pic_info	lib/stb/stb_image.h	/^static int stbi__pic_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__pic_is4	lib/stb/stb_image.h	/^static int stbi__pic_is4(stbi__context *s,const char *str)$/;"	f
stbi__pic_load	lib/stb/stb_image.h	/^static stbi_uc *stbi__pic_load(stbi__context *s,int *px,int *py,int *comp,int req_comp)$/;"	f
stbi__pic_load_core	lib/stb/stb_image.h	/^static stbi_uc *stbi__pic_load_core(stbi__context *s,int width,int height,int *comp, stbi_uc *result)$/;"	f
stbi__pic_packet	lib/stb/stb_image.h	/^} stbi__pic_packet;$/;"	t	typeref:struct:__anon69
stbi__pic_test	lib/stb/stb_image.h	/^static int stbi__pic_test(stbi__context *s)$/;"	f
stbi__pic_test_core	lib/stb/stb_image.h	/^static int stbi__pic_test_core(stbi__context *s)$/;"	f
stbi__png	lib/stb/stb_image.h	/^} stbi__png;$/;"	t	typeref:struct:__anon66
stbi__png_info	lib/stb/stb_image.h	/^static int stbi__png_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__png_info_raw	lib/stb/stb_image.h	/^static int stbi__png_info_raw(stbi__png *p, int *x, int *y, int *comp)$/;"	f
stbi__png_load	lib/stb/stb_image.h	/^static unsigned char *stbi__png_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__png_test	lib/stb/stb_image.h	/^static int stbi__png_test(stbi__context *s)$/;"	f
stbi__pngchunk	lib/stb/stb_image.h	/^} stbi__pngchunk;$/;"	t	typeref:struct:__anon65
stbi__pnm_getinteger	lib/stb/stb_image.h	/^static int      stbi__pnm_getinteger(stbi__context *s, char *c)$/;"	f
stbi__pnm_info	lib/stb/stb_image.h	/^static int      stbi__pnm_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__pnm_isdigit	lib/stb/stb_image.h	/^static int      stbi__pnm_isdigit(char c)$/;"	f
stbi__pnm_isspace	lib/stb/stb_image.h	/^static int      stbi__pnm_isspace(char c)$/;"	f
stbi__pnm_load	lib/stb/stb_image.h	/^static stbi_uc *stbi__pnm_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__pnm_skip_whitespace	lib/stb/stb_image.h	/^static void     stbi__pnm_skip_whitespace(stbi__context *s, char *c)$/;"	f
stbi__pnm_test	lib/stb/stb_image.h	/^static int      stbi__pnm_test(stbi__context *s)$/;"	f
stbi__process_frame_header	lib/stb/stb_image.h	/^static int stbi__process_frame_header(stbi__jpeg *z, int scan)$/;"	f
stbi__process_gif_raster	lib/stb/stb_image.h	/^static stbi_uc *stbi__process_gif_raster(stbi__context *s, stbi__gif *g)$/;"	f
stbi__process_marker	lib/stb/stb_image.h	/^static int stbi__process_marker(stbi__jpeg *z, int m)$/;"	f
stbi__process_scan_header	lib/stb/stb_image.h	/^static int stbi__process_scan_header(stbi__jpeg *z)$/;"	f
stbi__psd_info	lib/stb/stb_image.h	/^static int stbi__psd_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__psd_load	lib/stb/stb_image.h	/^static stbi_uc *stbi__psd_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__psd_test	lib/stb/stb_image.h	/^static int stbi__psd_test(stbi__context *s)$/;"	f
stbi__readval	lib/stb/stb_image.h	/^static stbi_uc *stbi__readval(stbi__context *s, int channel, stbi_uc *dest)$/;"	f
stbi__reduce_png	lib/stb/stb_image.h	/^static int stbi__reduce_png(stbi__png *p)$/;"	f
stbi__refill_buffer	lib/stb/stb_image.h	/^static void stbi__refill_buffer(stbi__context *s)$/;"	f
stbi__resample	lib/stb/stb_image.h	/^} stbi__resample;$/;"	t	typeref:struct:__anon62
stbi__resample_row_generic	lib/stb/stb_image.h	/^static stbi_uc *stbi__resample_row_generic(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_h_2	lib/stb/stb_image.h	/^static stbi_uc*  stbi__resample_row_h_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_hv_2	lib/stb/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_hv_2_simd	lib/stb/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2_simd(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_v_2	lib/stb/stb_image.h	/^static stbi_uc* stbi__resample_row_v_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__rewind	lib/stb/stb_image.h	/^static void stbi__rewind(stbi__context *s)$/;"	f
stbi__setup_jpeg	lib/stb/stb_image.h	/^static void stbi__setup_jpeg(stbi__jpeg *j)$/;"	f
stbi__shiftsigned	lib/stb/stb_image.h	/^static int stbi__shiftsigned(int v, int shift, int bits)$/;"	f
stbi__skip	lib/stb/stb_image.h	/^static void stbi__skip(stbi__context *s, int n)$/;"	f
stbi__sse2_available	lib/stb/stb_image.h	/^static int stbi__sse2_available()$/;"	f
stbi__start_callbacks	lib/stb/stb_image.h	/^static void stbi__start_callbacks(stbi__context *s, stbi_io_callbacks *c, void *user)$/;"	f
stbi__start_file	lib/stb/stb_image.h	/^static void stbi__start_file(stbi__context *s, FILE *f)$/;"	f
stbi__start_mem	lib/stb/stb_image.h	/^static void stbi__start_mem(stbi__context *s, stbi_uc const *buffer, int len)$/;"	f
stbi__stdio_callbacks	lib/stb/stb_image.h	/^static stbi_io_callbacks stbi__stdio_callbacks =$/;"	v
stbi__stdio_eof	lib/stb/stb_image.h	/^static int stbi__stdio_eof(void *user)$/;"	f
stbi__stdio_read	lib/stb/stb_image.h	/^static int stbi__stdio_read(void *user, char *data, int size)$/;"	f
stbi__stdio_skip	lib/stb/stb_image.h	/^static void stbi__stdio_skip(void *user, int n)$/;"	f
stbi__tga_get_comp	lib/stb/stb_image.h	/^static int stbi__tga_get_comp(int bits_per_pixel, int is_grey, int* is_rgb16)$/;"	f
stbi__tga_info	lib/stb/stb_image.h	/^static int stbi__tga_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__tga_load	lib/stb/stb_image.h	/^static stbi_uc *stbi__tga_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__tga_read_rgb16	lib/stb/stb_image.h	/^void stbi__tga_read_rgb16(stbi__context *s, stbi_uc* out)$/;"	f
stbi__tga_test	lib/stb/stb_image.h	/^static int stbi__tga_test(stbi__context *s)$/;"	f
stbi__uint16	lib/stb/stb_image.h	/^typedef uint16_t stbi__uint16;$/;"	t
stbi__uint16	lib/stb/stb_image.h	/^typedef unsigned short stbi__uint16;$/;"	t
stbi__uint32	lib/stb/stb_image.h	/^typedef uint32_t stbi__uint32;$/;"	t
stbi__uint32	lib/stb/stb_image.h	/^typedef unsigned int   stbi__uint32;$/;"	t
stbi__unpremultiply_on_load	lib/stb/stb_image.h	/^static int stbi__unpremultiply_on_load = 0;$/;"	v
stbi__vertically_flip_on_load	lib/stb/stb_image.h	/^static int stbi__vertically_flip_on_load = 0;$/;"	v
stbi__zbuf	lib/stb/stb_image.h	/^} stbi__zbuf;$/;"	t	typeref:struct:__anon64
stbi__zbuild_huffman	lib/stb/stb_image.h	/^static int stbi__zbuild_huffman(stbi__zhuffman *z, stbi_uc *sizelist, int num)$/;"	f
stbi__zdefault_distance	lib/stb/stb_image.h	/^static stbi_uc stbi__zdefault_length[288], stbi__zdefault_distance[32];$/;"	v
stbi__zdefault_length	lib/stb/stb_image.h	/^static stbi_uc stbi__zdefault_length[288], stbi__zdefault_distance[32];$/;"	v
stbi__zdist_base	lib/stb/stb_image.h	/^static int stbi__zdist_base[32] = { 1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,$/;"	v
stbi__zdist_extra	lib/stb/stb_image.h	/^static int stbi__zdist_extra[32] =$/;"	v
stbi__zexpand	lib/stb/stb_image.h	/^static int stbi__zexpand(stbi__zbuf *z, char *zout, int n)  \/\/ need to make room for n bytes$/;"	f
stbi__zget8	lib/stb/stb_image.h	/^stbi_inline static stbi_uc stbi__zget8(stbi__zbuf *z)$/;"	f
stbi__zhuffman	lib/stb/stb_image.h	/^} stbi__zhuffman;$/;"	t	typeref:struct:__anon63
stbi__zhuffman_decode	lib/stb/stb_image.h	/^stbi_inline static int stbi__zhuffman_decode(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f
stbi__zhuffman_decode_slowpath	lib/stb/stb_image.h	/^static int stbi__zhuffman_decode_slowpath(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f
stbi__zlength_base	lib/stb/stb_image.h	/^static int stbi__zlength_base[31] = {$/;"	v
stbi__zlength_extra	lib/stb/stb_image.h	/^static int stbi__zlength_extra[31]=$/;"	v
stbi__zreceive	lib/stb/stb_image.h	/^stbi_inline static unsigned int stbi__zreceive(stbi__zbuf *z, int n)$/;"	f
stbi_convert_iphone_png_to_rgb	lib/stb/stb_image.h	/^STBIDEF void stbi_convert_iphone_png_to_rgb(int flag_true_if_should_convert)$/;"	f
stbi_failure_reason	lib/stb/stb_image.h	/^STBIDEF const char *stbi_failure_reason(void)$/;"	f
stbi_hdr_to_ldr_gamma	lib/stb/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_gamma(float gamma) { stbi__h2l_gamma_i = 1\/gamma; }$/;"	f
stbi_hdr_to_ldr_scale	lib/stb/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_scale(float scale) { stbi__h2l_scale_i = 1\/scale; }$/;"	f
stbi_image_free	lib/stb/stb_image.h	/^STBIDEF void stbi_image_free(void *retval_from_stbi_load)$/;"	f
stbi_info	lib/stb/stb_image.h	/^STBIDEF int stbi_info(char const *filename, int *x, int *y, int *comp)$/;"	f
stbi_info_from_callbacks	lib/stb/stb_image.h	/^STBIDEF int stbi_info_from_callbacks(stbi_io_callbacks const *c, void *user, int *x, int *y, int *comp)$/;"	f
stbi_info_from_file	lib/stb/stb_image.h	/^STBIDEF int stbi_info_from_file(FILE *f, int *x, int *y, int *comp)$/;"	f
stbi_info_from_memory	lib/stb/stb_image.h	/^STBIDEF int stbi_info_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp)$/;"	f
stbi_inline	lib/stb/stb_image.h	586;"	d
stbi_inline	lib/stb/stb_image.h	588;"	d
stbi_inline	lib/stb/stb_image.h	591;"	d
stbi_io_callbacks	lib/stb/stb_image.h	/^} stbi_io_callbacks;$/;"	t	typeref:struct:__anon56
stbi_is_hdr	lib/stb/stb_image.h	/^STBIDEF int      stbi_is_hdr          (char const *filename)$/;"	f
stbi_is_hdr_from_callbacks	lib/stb/stb_image.h	/^STBIDEF int      stbi_is_hdr_from_callbacks(stbi_io_callbacks const *clbk, void *user)$/;"	f
stbi_is_hdr_from_file	lib/stb/stb_image.h	/^STBIDEF int      stbi_is_hdr_from_file(FILE *f)$/;"	f
stbi_is_hdr_from_memory	lib/stb/stb_image.h	/^STBIDEF int stbi_is_hdr_from_memory(stbi_uc const *buffer, int len)$/;"	f
stbi_ldr_to_hdr_gamma	lib/stb/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_gamma(float gamma) { stbi__l2h_gamma = gamma; }$/;"	f
stbi_ldr_to_hdr_scale	lib/stb/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_scale(float scale) { stbi__l2h_scale = scale; }$/;"	f
stbi_load	lib/stb/stb_image.h	/^STBIDEF stbi_uc *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_from_callbacks	lib/stb/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_from_file	lib/stb/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_from_memory	lib/stb/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf	lib/stb/stb_image.h	/^STBIDEF float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf_from_callbacks	lib/stb/stb_image.h	/^STBIDEF float *stbi_loadf_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf_from_file	lib/stb/stb_image.h	/^STBIDEF float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf_from_memory	lib/stb/stb_image.h	/^STBIDEF float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_lrot	lib/stb/stb_image.h	622;"	d
stbi_lrot	lib/stb/stb_image.h	624;"	d
stbi_set_flip_vertically_on_load	lib/stb/stb_image.h	/^STBIDEF void stbi_set_flip_vertically_on_load(int flag_true_if_should_flip)$/;"	f
stbi_set_unpremultiply_on_load	lib/stb/stb_image.h	/^STBIDEF void stbi_set_unpremultiply_on_load(int flag_true_if_should_unpremultiply)$/;"	f
stbi_uc	lib/stb/stb_image.h	/^typedef unsigned char stbi_uc;$/;"	t
stbi_zlib_decode_buffer	lib/stb/stb_image.h	/^STBIDEF int stbi_zlib_decode_buffer(char *obuffer, int olen, char const *ibuffer, int ilen)$/;"	f
stbi_zlib_decode_malloc	lib/stb/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc(char const *buffer, int len, int *outlen)$/;"	f
stbi_zlib_decode_malloc_guesssize	lib/stb/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize(const char *buffer, int len, int initial_size, int *outlen)$/;"	f
stbi_zlib_decode_malloc_guesssize_headerflag	lib/stb/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize_headerflag(const char *buffer, int len, int initial_size, int *outlen, int parse_header)$/;"	f
stbi_zlib_decode_noheader_buffer	lib/stb/stb_image.h	/^STBIDEF int stbi_zlib_decode_noheader_buffer(char *obuffer, int olen, const char *ibuffer, int ilen)$/;"	f
stbi_zlib_decode_noheader_malloc	lib/stb/stb_image.h	/^STBIDEF char *stbi_zlib_decode_noheader_malloc(char const *buffer, int len, int *outlen)$/;"	f
std	lib/glm/gtx/hash.hpp	/^namespace std$/;"	n
stencil	lib/vulkan/vulkan.h	/^    uint32_t    stencil;$/;"	m	struct:VkClearDepthStencilValue
stencilLoadOp	lib/vulkan/vulkan.h	/^    VkAttachmentLoadOp              stencilLoadOp;$/;"	m	struct:VkAttachmentDescription
stencilStoreOp	lib/vulkan/vulkan.h	/^    VkAttachmentStoreOp             stencilStoreOp;$/;"	m	struct:VkAttachmentDescription
stencilTestEnable	lib/vulkan/vulkan.h	/^    VkBool32                                  stencilTestEnable;$/;"	m	struct:VkPipelineDepthStencilStateCreateInfo
step	lib/stb/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon71
storage	lib/glm/detail/type_vec.hpp	/^		struct storage<double, 32, true>$/;"	s	namespace:glm::detail
storage	lib/glm/detail/type_vec.hpp	/^		struct storage<float, 16, true>$/;"	s	namespace:glm::detail
storage	lib/glm/detail/type_vec.hpp	/^		struct storage<int, 16, true>$/;"	s	namespace:glm::detail
storage	lib/glm/detail/type_vec.hpp	/^		struct storage<int64, 32, true>$/;"	s	namespace:glm::detail
storage	lib/glm/detail/type_vec.hpp	/^		struct storage<uint64, 32, true>$/;"	s	namespace:glm::detail
storage	lib/glm/detail/type_vec.hpp	/^		struct storage<unsigned int, 16, true>$/;"	s	namespace:glm::detail
storage	lib/glm/detail/type_vec.hpp	/^	struct storage$/;"	s	namespace:glm::detail
storage	lib/glm/detail/type_vec.hpp	/^	struct storage<T, size, true>$/;"	s	namespace:glm::detail
storageImageSampleCounts	lib/vulkan/vulkan.h	/^    VkSampleCountFlags    storageImageSampleCounts;$/;"	m	struct:VkPhysicalDeviceLimits
storeOp	lib/vulkan/vulkan.h	/^    VkAttachmentStoreOp             storeOp;$/;"	m	struct:VkAttachmentDescription
str	lib/vulkan/libspirv.h	/^  const char* str;$/;"	m	struct:spv_text_t
strdup	lib/vulkan/vk_sdk_platform.h	42;"	d
streamsize_type	lib/glm/gtx/io.hpp	/^			typedef ::std::streamsize              streamsize_type;$/;"	t	class:glm::io::basic_state_saver
strictLines	lib/vulkan/vulkan.h	/^    VkBool32              strictLines;$/;"	m	struct:VkPhysicalDeviceLimits
stride	lib/vulkan/vulkan.h	/^    uint32_t             stride;$/;"	m	struct:VkVertexInputBindingDescription
subPixelInterpolationOffsetBits	lib/vulkan/vulkan.h	/^    uint32_t              subPixelInterpolationOffsetBits;$/;"	m	struct:VkPhysicalDeviceLimits
subPixelPrecisionBits	lib/vulkan/vulkan.h	/^    uint32_t              subPixelPrecisionBits;$/;"	m	struct:VkPhysicalDeviceLimits
subTexelPrecisionBits	lib/vulkan/vulkan.h	/^    uint32_t              subTexelPrecisionBits;$/;"	m	struct:VkPhysicalDeviceLimits
submit	src/task_manager.cpp	/^void TaskManager::submit(Task& task) {$/;"	f	class:TaskManager
submit	src/task_manager.cpp	/^void TaskManager::submit(Task* task) {$/;"	f	class:TaskManager
subpass	lib/vulkan/vulkan.h	/^    uint32_t                                         subpass;$/;"	m	struct:VkGraphicsPipelineCreateInfo
subpass	lib/vulkan/vulkan.h	/^    uint32_t                         subpass;$/;"	m	struct:VkCommandBufferInheritanceInfo
subpassCount	lib/vulkan/vulkan.h	/^    uint32_t                          subpassCount;$/;"	m	struct:VkRenderPassCreateInfo
subresource	lib/vulkan/vulkan.h	/^    VkImageSubresource         subresource;$/;"	m	struct:VkSparseImageMemoryBind
subresourceRange	lib/vulkan/vulkan.h	/^    VkImageSubresourceRange    subresourceRange;$/;"	m	struct:VkImageMemoryBarrier
subresourceRange	lib/vulkan/vulkan.h	/^    VkImageSubresourceRange    subresourceRange;$/;"	m	struct:VkImageViewCreateInfo
succ_high	lib/stb/stb_image.h	/^   int            succ_high;$/;"	m	struct:__anon60
succ_low	lib/stb/stb_image.h	/^   int            succ_low;$/;"	m	struct:__anon60
suffix	lib/stb/stb_image.h	/^   stbi_uc suffix;$/;"	m	struct:__anon70
supportedAlpha	lib/vulkan/vulkan.h	/^    VkDisplayPlaneAlphaFlagsKHR    supportedAlpha;$/;"	m	struct:VkDisplayPlaneCapabilitiesKHR
supportedCompositeAlpha	lib/vulkan/vulkan.h	/^    VkCompositeAlphaFlagsKHR         supportedCompositeAlpha;$/;"	m	struct:VkSurfaceCapabilitiesKHR
supportedIndexSet	src/device_queue_indices.cpp	/^bool DeviceQueueIndicies::supportedIndexSet() $/;"	f	class:DeviceQueueIndicies
supportedTransforms	lib/vulkan/vulkan.h	/^    VkSurfaceTransformFlagsKHR       supportedTransforms;$/;"	m	struct:VkSurfaceCapabilitiesKHR
supportedTransforms	lib/vulkan/vulkan.h	/^    VkSurfaceTransformFlagsKHR    supportedTransforms;$/;"	m	struct:VkDisplayPropertiesKHR
supportedUsageFlags	lib/vulkan/vulkan.h	/^    VkImageUsageFlags                supportedUsageFlags;$/;"	m	struct:VkSurfaceCapabilitiesKHR
surface	lib/vulkan/vk_icd.h	/^    struct wl_surface *surface;$/;"	m	struct:__anon46	typeref:struct:__anon46::wl_surface
surface	lib/vulkan/vulkan.h	/^    VkSurfaceKHR                     surface;$/;"	m	struct:VkSwapchainCreateInfoKHR
surface	lib/vulkan/vulkan.h	/^    struct wl_surface*                surface;$/;"	m	struct:VkWaylandSurfaceCreateInfoKHR	typeref:struct:VkWaylandSurfaceCreateInfoKHR::wl_surface
swapchainCount	lib/vulkan/vulkan.h	/^    uint32_t                 swapchainCount;$/;"	m	struct:VkPresentInfoKHR
t	lib/glm/detail/type_vec2.hpp	/^				struct{ T s, t; };$/;"	m	struct:glm::tvec2::__anon9::__anon12
t	lib/glm/detail/type_vec2.hpp	/^			union {T y, g, t;};$/;"	m	union:glm::tvec2::__anon14
t	lib/glm/detail/type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	m	struct:glm::tvec3::__anon17::__anon20
t	lib/glm/detail/type_vec3.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec3::__anon22
t	lib/glm/detail/type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::tvec4::__anon1::__anon4
t	lib/glm/detail/type_vec4.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec4::__anon6
tagName	lib/vulkan/vulkan.h	/^    uint64_t                      tagName;$/;"	m	struct:VkDebugMarkerObjectTagInfoEXT
tagSize	lib/vulkan/vulkan.h	/^    size_t                        tagSize;$/;"	m	struct:VkDebugMarkerObjectTagInfoEXT
taylorInvSqrt	lib/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER T taylorInvSqrt(T const & r)$/;"	f	namespace:glm::detail
taylorInvSqrt	lib/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec2<T, P> taylorInvSqrt(tvec2<T, P> const & r)$/;"	f	namespace:glm::detail
taylorInvSqrt	lib/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec3<T, P> taylorInvSqrt(tvec3<T, P> const & r)$/;"	f	namespace:glm::detail
taylorInvSqrt	lib/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec4<T, P> taylorInvSqrt(tvec4<T, P> const & r)$/;"	f	namespace:glm::detail
tdualquat	lib/glm/gtx/dual_quaternion.hpp	/^	struct tdualquat$/;"	s	namespace:glm
tessellationShader	lib/vulkan/vulkan.h	/^    VkBool32    tessellationShader;$/;"	m	struct:VkPhysicalDeviceFeatures
texCoord	inc/vulkan_manager.h	/^		glm::vec2 texCoord;$/;"	m	struct:VulkanManager::Vertex
textureCompressionASTC_LDR	lib/vulkan/vulkan.h	/^    VkBool32    textureCompressionASTC_LDR;$/;"	m	struct:VkPhysicalDeviceFeatures
textureCompressionBC	lib/vulkan/vulkan.h	/^    VkBool32    textureCompressionBC;$/;"	m	struct:VkPhysicalDeviceFeatures
textureCompressionETC2	lib/vulkan/vulkan.h	/^    VkBool32    textureCompressionETC2;$/;"	m	struct:VkPhysicalDeviceFeatures
tiling	lib/vulkan/vulkan.h	/^    VkImageTiling            tiling;$/;"	m	struct:VkImageCreateInfo
timestampComputeAndGraphics	lib/vulkan/vulkan.h	/^    VkBool32              timestampComputeAndGraphics;$/;"	m	struct:VkPhysicalDeviceLimits
timestampPeriod	lib/vulkan/vulkan.h	/^    float                 timestampPeriod;$/;"	m	struct:VkPhysicalDeviceLimits
timestampValidBits	lib/vulkan/vulkan.h	/^    uint32_t        timestampValidBits;$/;"	m	struct:VkQueueFamilyProperties
tmat2x2	lib/glm/detail/type_mat2x2.hpp	/^	struct tmat2x2$/;"	s	namespace:glm
tmat2x3	lib/glm/detail/type_mat2x3.hpp	/^	struct tmat2x3$/;"	s	namespace:glm
tmat2x4	lib/glm/detail/type_mat2x4.hpp	/^	struct tmat2x4$/;"	s	namespace:glm
tmat3x2	lib/glm/detail/type_mat3x2.hpp	/^	struct tmat3x2$/;"	s	namespace:glm
tmat3x3	lib/glm/detail/type_mat3x3.hpp	/^	struct tmat3x3$/;"	s	namespace:glm
tmat3x4	lib/glm/detail/type_mat3x4.hpp	/^	struct tmat3x4$/;"	s	namespace:glm
tmat4x2	lib/glm/detail/type_mat4x2.hpp	/^	struct tmat4x2$/;"	s	namespace:glm
tmat4x3	lib/glm/detail/type_mat4x3.hpp	/^	struct tmat4x3$/;"	s	namespace:glm
tmat4x4	lib/glm/detail/type_mat4x4.hpp	/^	struct tmat4x4$/;"	s	namespace:glm
toMat3	lib/glm/gtx/quaternion.hpp	/^	GLM_FUNC_DECL tmat3x3<T, P> toMat3($/;"	f	namespace:glm
toMat4	lib/glm/gtx/quaternion.hpp	/^	GLM_FUNC_DECL tmat4x4<T, P> toMat4($/;"	f	namespace:glm
toQuat	lib/glm/gtx/quaternion.hpp	/^	GLM_FUNC_DECL tquat<T, P> toQuat($/;"	f	namespace:glm
todo	lib/stb/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon60
topology	lib/vulkan/vulkan.h	/^    VkPrimitiveTopology                        topology;$/;"	m	struct:VkPipelineInputAssemblyStateCreateInfo
tq	lib/stb/stb_image.h	/^      int tq;$/;"	m	struct:__anon60::__anon61
tquat	lib/glm/gtc/quaternion.hpp	/^	struct tquat$/;"	s	namespace:glm
transferIndexSet	src/device_queue_indices.cpp	/^bool DeviceQueueIndicies::transferIndexSet() $/;"	f	class:DeviceQueueIndicies
transform	lib/vulkan/vk_icd.h	/^    VkSurfaceTransformFlagBitsKHR transform;$/;"	m	struct:__anon50
transform	lib/vulkan/vulkan.h	/^    VkSurfaceTransformFlagBitsKHR     transform;$/;"	m	struct:VkDisplaySurfaceCreateInfoKHR
transitionImageLayout	src/vulkan_manager.cpp	/^void VulkanManager::transitionImageLayout(VkImage image, VkFormat format, VkImageLayout oldLayout, VkImageLayout newLayout)$/;"	f	class:VulkanManager
transparent	lib/stb/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon71
transpose_type	lib/glm/detail/type_mat2x2.hpp	/^		typedef tmat2x2<T, P> transpose_type;$/;"	t	struct:glm::tmat2x2
transpose_type	lib/glm/detail/type_mat2x3.hpp	/^		typedef tmat3x2<T, P> transpose_type;$/;"	t	struct:glm::tmat2x3
transpose_type	lib/glm/detail/type_mat2x4.hpp	/^		typedef tmat4x2<T, P> transpose_type;$/;"	t	struct:glm::tmat2x4
transpose_type	lib/glm/detail/type_mat3x2.hpp	/^		typedef tmat2x3<T, P> transpose_type;$/;"	t	struct:glm::tmat3x2
transpose_type	lib/glm/detail/type_mat3x3.hpp	/^		typedef tmat3x3<T, P> transpose_type;$/;"	t	struct:glm::tmat3x3
transpose_type	lib/glm/detail/type_mat3x4.hpp	/^		typedef tmat4x3<T, P> transpose_type;$/;"	t	struct:glm::tmat3x4
transpose_type	lib/glm/detail/type_mat4x2.hpp	/^		typedef tmat2x4<T, P> transpose_type;$/;"	t	struct:glm::tmat4x2
transpose_type	lib/glm/detail/type_mat4x3.hpp	/^		typedef tmat3x4<T, P> transpose_type;$/;"	t	struct:glm::tmat4x3
transpose_type	lib/glm/detail/type_mat4x4.hpp	/^		typedef tmat4x4<T, P> transpose_type;$/;"	t	struct:glm::tmat4x4
tvec1	lib/glm/detail/type_vec1.hpp	/^	struct tvec1$/;"	s	namespace:glm
tvec2	lib/glm/detail/type_vec2.hpp	/^			GLM_FUNC_DECL tvec2(detail::_swizzle<2, T, P, glm::tvec2, E0, E1,-1,-2> const& that)$/;"	f	struct:glm::tvec2
tvec2	lib/glm/detail/type_vec2.hpp	/^	struct tvec2$/;"	s	namespace:glm
tvec3	lib/glm/detail/type_vec3.hpp	/^			GLM_FUNC_DECL tvec3(T const & scalar, detail::_swizzle<2, T, P, glm::tvec2, E0, E1, -1, -2> const & v)$/;"	f	struct:glm::tvec3
tvec3	lib/glm/detail/type_vec3.hpp	/^			GLM_FUNC_DECL tvec3(detail::_swizzle<2, T, P, glm::tvec2, E0, E1, -1, -2> const & v, T const & scalar)$/;"	f	struct:glm::tvec3
tvec3	lib/glm/detail/type_vec3.hpp	/^			GLM_FUNC_DECL tvec3(detail::_swizzle<3, T, P, glm::tvec3, E0, E1, E2, -1> const & that)$/;"	f	struct:glm::tvec3
tvec3	lib/glm/detail/type_vec3.hpp	/^	struct tvec3$/;"	s	namespace:glm
tvec4	lib/glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(T const & x, T const & y, detail::_swizzle<2, T, P, glm::tvec2, E0, E1, -1, -2> const & v)$/;"	f	struct:glm::tvec4
tvec4	lib/glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(T const & x, detail::_swizzle<2, T, P, glm::tvec2, E0, E1, -1, -2> const & v, T const & w)$/;"	f	struct:glm::tvec4
tvec4	lib/glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(T const & x, detail::_swizzle<3, T, P, glm::tvec3, E0, E1, E2, -1> const & v)$/;"	f	struct:glm::tvec4
tvec4	lib/glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(detail::_swizzle<2, T, P, glm::tvec2, E0, E1, -1, -2> const & v, T const & z, T const & w)$/;"	f	struct:glm::tvec4
tvec4	lib/glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(detail::_swizzle<2, T, P, glm::tvec2, E0, E1, -1, -2> const & v, detail::_swizzle<2, T, P, glm::tvec2, F0, F1, -1, -2> const & u)$/;"	f	struct:glm::tvec4
tvec4	lib/glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(detail::_swizzle<3, T, P, glm::tvec3, E0, E1, E2, -1> const & v, T const & w)$/;"	f	struct:glm::tvec4
tvec4	lib/glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(detail::_swizzle<4, T, P, glm::tvec4, E0, E1, E2, E3> const & that)$/;"	f	struct:glm::tvec4
tvec4	lib/glm/detail/type_vec4.hpp	/^	struct tvec4$/;"	s	namespace:glm
type	lib/glm/detail/func_matrix.hpp	/^		typedef tmat2x2<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	lib/glm/detail/func_matrix.hpp	/^		typedef tmat2x3<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	lib/glm/detail/func_matrix.hpp	/^		typedef tmat2x4<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	lib/glm/detail/func_matrix.hpp	/^		typedef tmat3x2<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	lib/glm/detail/func_matrix.hpp	/^		typedef tmat3x3<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	lib/glm/detail/func_matrix.hpp	/^		typedef tmat3x4<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	lib/glm/detail/func_matrix.hpp	/^		typedef tmat4x2<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	lib/glm/detail/func_matrix.hpp	/^		typedef tmat4x3<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	lib/glm/detail/func_matrix.hpp	/^		typedef tmat4x4<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	lib/glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> type;$/;"	t	struct:glm::detail::genType
type	lib/glm/detail/type_mat2x2.hpp	/^		typedef tmat2x2<T, P> type;$/;"	t	struct:glm::tmat2x2
type	lib/glm/detail/type_mat2x3.hpp	/^		typedef tmat2x3<T, P> type;$/;"	t	struct:glm::tmat2x3
type	lib/glm/detail/type_mat2x4.hpp	/^		typedef tmat2x4<T, P> type;$/;"	t	struct:glm::tmat2x4
type	lib/glm/detail/type_mat3x2.hpp	/^		typedef tmat3x2<T, P> type;$/;"	t	struct:glm::tmat3x2
type	lib/glm/detail/type_mat3x3.hpp	/^		typedef tmat3x3<T, P> type;$/;"	t	struct:glm::tmat3x3
type	lib/glm/detail/type_mat3x4.hpp	/^		typedef tmat3x4<T, P> type;$/;"	t	struct:glm::tmat3x4
type	lib/glm/detail/type_mat4x2.hpp	/^		typedef tmat4x2<T, P> type;$/;"	t	struct:glm::tmat4x2
type	lib/glm/detail/type_mat4x3.hpp	/^		typedef tmat4x3<T, P> type;$/;"	t	struct:glm::tmat4x3
type	lib/glm/detail/type_mat4x4.hpp	/^		typedef tmat4x4<T, P> type;$/;"	t	struct:glm::tmat4x4
type	lib/glm/detail/type_vec.hpp	/^			typedef glm_dvec4 type;$/;"	t	struct:glm::detail::storage
type	lib/glm/detail/type_vec.hpp	/^			typedef glm_i64vec4 type;$/;"	t	struct:glm::detail::storage
type	lib/glm/detail/type_vec.hpp	/^			typedef glm_ivec4 type;$/;"	t	struct:glm::detail::storage
type	lib/glm/detail/type_vec.hpp	/^			typedef glm_u64vec4 type;$/;"	t	struct:glm::detail::storage
type	lib/glm/detail/type_vec.hpp	/^			typedef glm_uvec4 type;$/;"	t	struct:glm::detail::storage
type	lib/glm/detail/type_vec.hpp	/^			typedef glm_vec4 type;$/;"	t	struct:glm::detail::storage
type	lib/glm/detail/type_vec.hpp	/^		struct type : aligned<size>$/;"	s	struct:glm::detail::storage
type	lib/glm/detail/type_vec.hpp	/^		typedef struct type {$/;"	s	struct:glm::detail::storage
type	lib/glm/detail/type_vec.hpp	/^		} type;$/;"	t	struct:glm::detail::storage	typeref:struct:glm::detail::storage::type
type	lib/glm/detail/type_vec1.hpp	/^		typedef tvec1<T, P> type;$/;"	t	struct:glm::tvec1
type	lib/glm/detail/type_vec2.hpp	/^		typedef tvec2<T, P> type;$/;"	t	struct:glm::tvec2
type	lib/glm/detail/type_vec3.hpp	/^		typedef tvec3<T, P> type;$/;"	t	struct:glm::tvec3
type	lib/glm/detail/type_vec4.hpp	/^		typedef tvec4<T, P> type;$/;"	t	struct:glm::tvec4
type	lib/glm/gtc/quaternion.hpp	/^		typedef tquat<T, P> type;$/;"	t	struct:glm::tquat
type	lib/glm/gtx/type_trait.hpp	/^	struct type$/;"	s	namespace:glm
type	lib/glm/gtx/type_trait.hpp	/^	struct type<tdualquat, T, P>$/;"	s	namespace:glm
type	lib/glm/gtx/type_trait.hpp	/^	struct type<tmat2x2, T, P>$/;"	s	namespace:glm
type	lib/glm/gtx/type_trait.hpp	/^	struct type<tmat2x3, T, P>$/;"	s	namespace:glm
type	lib/glm/gtx/type_trait.hpp	/^	struct type<tmat2x4, T, P>$/;"	s	namespace:glm
type	lib/glm/gtx/type_trait.hpp	/^	struct type<tmat3x2, T, P>$/;"	s	namespace:glm
type	lib/glm/gtx/type_trait.hpp	/^	struct type<tmat3x3, T, P>$/;"	s	namespace:glm
type	lib/glm/gtx/type_trait.hpp	/^	struct type<tmat3x4, T, P>$/;"	s	namespace:glm
type	lib/glm/gtx/type_trait.hpp	/^	struct type<tmat4x2, T, P>$/;"	s	namespace:glm
type	lib/glm/gtx/type_trait.hpp	/^	struct type<tmat4x3, T, P>$/;"	s	namespace:glm
type	lib/glm/gtx/type_trait.hpp	/^	struct type<tmat4x4, T, P>$/;"	s	namespace:glm
type	lib/glm/gtx/type_trait.hpp	/^	struct type<tquat, T, P>$/;"	s	namespace:glm
type	lib/glm/gtx/type_trait.hpp	/^	struct type<tvec1, T, P>$/;"	s	namespace:glm
type	lib/glm/gtx/type_trait.hpp	/^	struct type<tvec2, T, P>$/;"	s	namespace:glm
type	lib/glm/gtx/type_trait.hpp	/^	struct type<tvec3, T, P>$/;"	s	namespace:glm
type	lib/glm/gtx/type_trait.hpp	/^	struct type<tvec4, T, P>$/;"	s	namespace:glm
type	lib/stb/stb_image.h	/^   stbi__uint32 type;$/;"	m	struct:__anon65
type	lib/stb/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon69
type	lib/vulkan/libspirv.h	/^  spv_operand_type_t type;$/;"	m	struct:spv_parsed_operand_t
type	lib/vulkan/vulkan.h	/^    VkDescriptorType    type;$/;"	m	struct:VkDescriptorPoolSize
type_id	lib/vulkan/libspirv.h	/^  uint32_t type_id;$/;"	m	struct:spv_parsed_instruction_t
u	lib/vulkan/vk_layer.h	/^    } u;$/;"	m	struct:__anon51	typeref:union:__anon51::__anon52
u	lib/vulkan/vk_layer.h	/^    } u;$/;"	m	struct:__anon53	typeref:union:__anon53::__anon54
u16	lib/glm/fwd.hpp	/^	typedef detail::uint16 u16;$/;"	t	namespace:glm
u16	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 u16;$/;"	t	namespace:glm
u16vec1	lib/glm/fwd.hpp	/^	typedef highp_u16vec1			u16vec1;$/;"	t	namespace:glm
u16vec1	lib/glm/fwd.hpp	/^	typedef lowp_u16vec1			u16vec1;$/;"	t	namespace:glm
u16vec1	lib/glm/fwd.hpp	/^	typedef mediump_u16vec1			u16vec1;$/;"	t	namespace:glm
u16vec1	lib/glm/gtc/type_precision.hpp	/^	typedef tvec1<u16, defaultp> u16vec1;$/;"	t	namespace:glm
u16vec1	lib/glm/gtx/number_precision.hpp	/^	typedef u16			u16vec1;    \/\/!< \\brief 16bit unsigned integer scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
u16vec2	lib/glm/fwd.hpp	/^	typedef highp_u16vec2			u16vec2;$/;"	t	namespace:glm
u16vec2	lib/glm/fwd.hpp	/^	typedef lowp_u16vec2			u16vec2;$/;"	t	namespace:glm
u16vec2	lib/glm/fwd.hpp	/^	typedef mediump_u16vec2			u16vec2;$/;"	t	namespace:glm
u16vec2	lib/glm/gtc/type_precision.hpp	/^	typedef tvec2<u16, defaultp> u16vec2;$/;"	t	namespace:glm
u16vec3	lib/glm/fwd.hpp	/^	typedef highp_u16vec3			u16vec3;$/;"	t	namespace:glm
u16vec3	lib/glm/fwd.hpp	/^	typedef lowp_u16vec3			u16vec3;$/;"	t	namespace:glm
u16vec3	lib/glm/fwd.hpp	/^	typedef mediump_u16vec3			u16vec3;$/;"	t	namespace:glm
u16vec3	lib/glm/gtc/type_precision.hpp	/^	typedef tvec3<u16, defaultp> u16vec3;$/;"	t	namespace:glm
u16vec4	lib/glm/fwd.hpp	/^	typedef highp_u16vec4			u16vec4;$/;"	t	namespace:glm
u16vec4	lib/glm/fwd.hpp	/^	typedef lowp_u16vec4			u16vec4;$/;"	t	namespace:glm
u16vec4	lib/glm/fwd.hpp	/^	typedef mediump_u16vec4			u16vec4;$/;"	t	namespace:glm
u16vec4	lib/glm/gtc/type_precision.hpp	/^	typedef tvec4<u16, defaultp> u16vec4;$/;"	t	namespace:glm
u32	lib/glm/fwd.hpp	/^	typedef detail::uint32 u32;$/;"	t	namespace:glm
u32	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 u32;$/;"	t	namespace:glm
u32vec1	lib/glm/fwd.hpp	/^	typedef highp_u32vec1			u32vec1;$/;"	t	namespace:glm
u32vec1	lib/glm/fwd.hpp	/^	typedef lowp_u32vec1			u32vec1;$/;"	t	namespace:glm
u32vec1	lib/glm/fwd.hpp	/^	typedef mediump_u32vec1			u32vec1;$/;"	t	namespace:glm
u32vec1	lib/glm/gtc/type_precision.hpp	/^	typedef tvec1<u32, defaultp> u32vec1;$/;"	t	namespace:glm
u32vec1	lib/glm/gtx/number_precision.hpp	/^	typedef u32			u32vec1;    \/\/!< \\brief 32bit unsigned integer scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
u32vec2	lib/glm/fwd.hpp	/^	typedef highp_u32vec2			u32vec2;$/;"	t	namespace:glm
u32vec2	lib/glm/fwd.hpp	/^	typedef lowp_u32vec2			u32vec2;$/;"	t	namespace:glm
u32vec2	lib/glm/fwd.hpp	/^	typedef mediump_u32vec2			u32vec2;$/;"	t	namespace:glm
u32vec2	lib/glm/gtc/type_precision.hpp	/^	typedef tvec2<u32, defaultp> u32vec2;$/;"	t	namespace:glm
u32vec3	lib/glm/fwd.hpp	/^	typedef highp_u32vec3			u32vec3;$/;"	t	namespace:glm
u32vec3	lib/glm/fwd.hpp	/^	typedef lowp_u32vec3			u32vec3;$/;"	t	namespace:glm
u32vec3	lib/glm/fwd.hpp	/^	typedef mediump_u32vec3			u32vec3;$/;"	t	namespace:glm
u32vec3	lib/glm/gtc/type_precision.hpp	/^	typedef tvec3<u32, defaultp> u32vec3;$/;"	t	namespace:glm
u32vec4	lib/glm/fwd.hpp	/^	typedef highp_u32vec4			u32vec4;$/;"	t	namespace:glm
u32vec4	lib/glm/fwd.hpp	/^	typedef lowp_u32vec4			u32vec4;$/;"	t	namespace:glm
u32vec4	lib/glm/fwd.hpp	/^	typedef mediump_u32vec4			u32vec4;$/;"	t	namespace:glm
u32vec4	lib/glm/gtc/type_precision.hpp	/^	typedef tvec4<u32, defaultp> u32vec4;$/;"	t	namespace:glm
u64	lib/glm/fwd.hpp	/^	typedef detail::uint64 u64;$/;"	t	namespace:glm
u64	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 u64;$/;"	t	namespace:glm
u64vec1	lib/glm/fwd.hpp	/^	typedef highp_u64vec1			u64vec1;$/;"	t	namespace:glm
u64vec1	lib/glm/fwd.hpp	/^	typedef lowp_u64vec1			u64vec1;$/;"	t	namespace:glm
u64vec1	lib/glm/fwd.hpp	/^	typedef mediump_u64vec1			u64vec1;$/;"	t	namespace:glm
u64vec1	lib/glm/gtc/type_precision.hpp	/^	typedef tvec1<u64, defaultp> u64vec1;$/;"	t	namespace:glm
u64vec1	lib/glm/gtx/number_precision.hpp	/^	typedef u64			u64vec1;    \/\/!< \\brief 64bit unsigned integer scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
u64vec2	lib/glm/fwd.hpp	/^	typedef highp_u64vec2			u64vec2;$/;"	t	namespace:glm
u64vec2	lib/glm/fwd.hpp	/^	typedef lowp_u64vec2			u64vec2;$/;"	t	namespace:glm
u64vec2	lib/glm/fwd.hpp	/^	typedef mediump_u64vec2			u64vec2;$/;"	t	namespace:glm
u64vec2	lib/glm/gtc/type_precision.hpp	/^	typedef tvec2<u64, defaultp> u64vec2;$/;"	t	namespace:glm
u64vec3	lib/glm/fwd.hpp	/^	typedef highp_u64vec3			u64vec3;$/;"	t	namespace:glm
u64vec3	lib/glm/fwd.hpp	/^	typedef lowp_u64vec3			u64vec3;$/;"	t	namespace:glm
u64vec3	lib/glm/fwd.hpp	/^	typedef mediump_u64vec3			u64vec3;$/;"	t	namespace:glm
u64vec3	lib/glm/gtc/type_precision.hpp	/^	typedef tvec3<u64, defaultp> u64vec3;$/;"	t	namespace:glm
u64vec4	lib/glm/fwd.hpp	/^	typedef highp_u64vec4			u64vec4;$/;"	t	namespace:glm
u64vec4	lib/glm/fwd.hpp	/^	typedef lowp_u64vec4			u64vec4;$/;"	t	namespace:glm
u64vec4	lib/glm/fwd.hpp	/^	typedef mediump_u64vec4			u64vec4;$/;"	t	namespace:glm
u64vec4	lib/glm/gtc/type_precision.hpp	/^	typedef tvec4<u64, defaultp> u64vec4;$/;"	t	namespace:glm
u8	lib/glm/fwd.hpp	/^	typedef detail::uint8 u8;$/;"	t	namespace:glm
u8	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 u8;$/;"	t	namespace:glm
u8vec1	lib/glm/fwd.hpp	/^	typedef highp_u8vec1			u8vec1;$/;"	t	namespace:glm
u8vec1	lib/glm/fwd.hpp	/^	typedef lowp_u8vec1				u8vec1;$/;"	t	namespace:glm
u8vec1	lib/glm/fwd.hpp	/^	typedef mediump_u8vec1			u8vec1;$/;"	t	namespace:glm
u8vec1	lib/glm/gtc/type_precision.hpp	/^	typedef tvec1<u8, defaultp> u8vec1;$/;"	t	namespace:glm
u8vec1	lib/glm/gtx/number_precision.hpp	/^	typedef u8			u8vec1;		\/\/!< \\brief 8bit unsigned integer scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
u8vec2	lib/glm/fwd.hpp	/^	typedef highp_u8vec2			u8vec2;$/;"	t	namespace:glm
u8vec2	lib/glm/fwd.hpp	/^	typedef lowp_u8vec2				u8vec2;$/;"	t	namespace:glm
u8vec2	lib/glm/fwd.hpp	/^	typedef mediump_u8vec2			u8vec2;$/;"	t	namespace:glm
u8vec2	lib/glm/gtc/type_precision.hpp	/^	typedef tvec2<u8, defaultp> u8vec2;$/;"	t	namespace:glm
u8vec3	lib/glm/fwd.hpp	/^	typedef highp_u8vec3			u8vec3;$/;"	t	namespace:glm
u8vec3	lib/glm/fwd.hpp	/^	typedef lowp_u8vec3				u8vec3;$/;"	t	namespace:glm
u8vec3	lib/glm/fwd.hpp	/^	typedef mediump_u8vec3			u8vec3;$/;"	t	namespace:glm
u8vec3	lib/glm/gtc/type_precision.hpp	/^	typedef tvec3<u8, defaultp> u8vec3;$/;"	t	namespace:glm
u8vec4	lib/glm/fwd.hpp	/^	typedef highp_u8vec4			u8vec4;$/;"	t	namespace:glm
u8vec4	lib/glm/fwd.hpp	/^	typedef lowp_u8vec4				u8vec4;$/;"	t	namespace:glm
u8vec4	lib/glm/fwd.hpp	/^	typedef mediump_u8vec4			u8vec4;	$/;"	t	namespace:glm
u8vec4	lib/glm/gtc/type_precision.hpp	/^	typedef tvec4<u8, defaultp> u8vec4;$/;"	t	namespace:glm
uint	lib/glm/detail/type_int.hpp	/^	typedef unsigned int				uint;$/;"	t	namespace:glm
uint16	lib/glm/detail/type_int.hpp	/^		typedef std::uint16_t				uint16;$/;"	t	namespace:glm::detail
uint16	lib/glm/detail/type_int.hpp	/^	typedef detail::uint16					uint16;$/;"	t	namespace:glm
uint16	lib/glm/fwd.hpp	/^	typedef detail::uint16 uint16;$/;"	t	namespace:glm
uint16	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 uint16;$/;"	t	namespace:glm
uint16_t	lib/vulkan/vk_platform.h	/^        typedef unsigned __int16 uint16_t;$/;"	t
uint32	lib/glm/detail/type_int.hpp	/^		typedef std::uint32_t				uint32;$/;"	t	namespace:glm::detail
uint32	lib/glm/detail/type_int.hpp	/^	typedef detail::uint32					uint32;$/;"	t	namespace:glm
uint32	lib/glm/fwd.hpp	/^	typedef detail::uint32 uint32;$/;"	t	namespace:glm
uint32	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 uint32;$/;"	t	namespace:glm
uint32	lib/vulkan/vulkan.h	/^    uint32_t    uint32[4];$/;"	m	union:VkClearColorValue
uint32_t	lib/vulkan/vk_platform.h	/^        typedef unsigned __int32 uint32_t;$/;"	t
uint64	lib/glm/detail/type_int.hpp	/^		typedef std::uint64_t				uint64;$/;"	t	namespace:glm::detail
uint64	lib/glm/detail/type_int.hpp	/^	typedef detail::uint64					uint64;$/;"	t	namespace:glm
uint64	lib/glm/fwd.hpp	/^	typedef detail::uint64 uint64;$/;"	t	namespace:glm
uint64	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 uint64;$/;"	t	namespace:glm
uint64_t	lib/vulkan/vk_platform.h	/^        typedef unsigned __int64 uint64_t;$/;"	t
uint8	lib/glm/detail/type_int.hpp	/^		typedef std::uint8_t				uint8;$/;"	t	namespace:glm::detail
uint8	lib/glm/detail/type_int.hpp	/^	typedef detail::uint8					uint8;$/;"	t	namespace:glm
uint8	lib/glm/fwd.hpp	/^	typedef detail::uint8 uint8;$/;"	t	namespace:glm
uint8	lib/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 uint8;$/;"	t	namespace:glm
uint8_t	lib/vulkan/vk_platform.h	/^        typedef unsigned __int8  uint8_t;$/;"	t
uint_t	lib/glm/detail/type_int.hpp	/^	typedef highp_uint					uint_t;$/;"	t	namespace:glm
uint_t	lib/glm/detail/type_int.hpp	/^	typedef lowp_uint					uint_t;$/;"	t	namespace:glm
uint_t	lib/glm/detail/type_int.hpp	/^	typedef mediump_uint				uint_t;$/;"	t	namespace:glm
umat2	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat2								umat2;$/;"	t	namespace:glm
umat2	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat2								umat2;$/;"	t	namespace:glm
umat2	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat2							umat2;$/;"	t	namespace:glm
umat2x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat2x2							umat2x2;$/;"	t	namespace:glm
umat2x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat2x2							umat2x2;$/;"	t	namespace:glm
umat2x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat2x2							umat2x2;$/;"	t	namespace:glm
umat2x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat2x3							umat2x3;$/;"	t	namespace:glm
umat2x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat2x3							umat2x3;$/;"	t	namespace:glm
umat2x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat2x3							umat2x3;$/;"	t	namespace:glm
umat2x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat2x4							umat2x4;$/;"	t	namespace:glm
umat2x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat2x4							umat2x4;$/;"	t	namespace:glm
umat2x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat2x4							umat2x4;$/;"	t	namespace:glm
umat3	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat3								umat3;$/;"	t	namespace:glm
umat3	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat3								umat3;$/;"	t	namespace:glm
umat3	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat3							umat3;$/;"	t	namespace:glm
umat3x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat3x2							umat3x2;$/;"	t	namespace:glm
umat3x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat3x2							umat3x2;$/;"	t	namespace:glm
umat3x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat3x2							umat3x2;$/;"	t	namespace:glm
umat3x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat3x3							umat3x3;$/;"	t	namespace:glm
umat3x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat3x3							umat3x3;$/;"	t	namespace:glm
umat3x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat3x3							umat3x3;$/;"	t	namespace:glm
umat3x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat3x4							umat3x4;$/;"	t	namespace:glm
umat3x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat3x4							umat3x4;$/;"	t	namespace:glm
umat3x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat3x4							umat3x4;$/;"	t	namespace:glm
umat4	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat4								umat4;$/;"	t	namespace:glm
umat4	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat4								umat4;$/;"	t	namespace:glm
umat4	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat4							umat4;$/;"	t	namespace:glm
umat4x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat4x2							umat4x2;$/;"	t	namespace:glm
umat4x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat4x2							umat4x2;$/;"	t	namespace:glm
umat4x2	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat4x2							umat4x2;$/;"	t	namespace:glm
umat4x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat4x3							umat4x3;$/;"	t	namespace:glm
umat4x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat4x3							umat4x3;$/;"	t	namespace:glm
umat4x3	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat4x3							umat4x3;$/;"	t	namespace:glm
umat4x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat4x4							umat4x4;$/;"	t	namespace:glm
umat4x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat4x4							umat4x4;$/;"	t	namespace:glm
umat4x4	lib/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat4x4							umat4x4;$/;"	t	namespace:glm
uniformBuffer	inc/vulkan_manager.h	/^	VkBuffer vertexBuffer, indexBuffer, uniformBuffer, uniformStagingBuffer;$/;"	m	class:VulkanManager
uniformBufferMem	inc/vulkan_manager.h	/^	VkDeviceMemory vertexBufferMem, indexBufferMem, uniformBufferMem, uniformStagingBufferMem;$/;"	m	class:VulkanManager
uniformStagingBuffer	inc/vulkan_manager.h	/^	VkBuffer vertexBuffer, indexBuffer, uniformBuffer, uniformStagingBuffer;$/;"	m	class:VulkanManager
uniformStagingBufferMem	inc/vulkan_manager.h	/^	VkDeviceMemory vertexBufferMem, indexBufferMem, uniformBufferMem, uniformStagingBufferMem;$/;"	m	class:VulkanManager
uninitialize	lib/glm/detail/setup.hpp	/^	enum ctor{uninitialize};$/;"	e	enum:glm::ctor
unnormalizedCoordinates	lib/vulkan/vulkan.h	/^    VkBool32                unnormalizedCoordinates;$/;"	m	struct:VkSamplerCreateInfo
unset	src/device_queue_indices.cpp	/^void DeviceQueueIndicies::unset() $/;"	f	class:DeviceQueueIndicies
updateUniformBuffer	src/vulkan_manager.cpp	/^void VulkanManager::updateUniformBuffer()$/;"	f	class:VulkanManager
usage	lib/vulkan/vulkan.h	/^    VkBufferUsageFlags     usage;$/;"	m	struct:VkBufferCreateInfo
usage	lib/vulkan/vulkan.h	/^    VkImageUsageFlags        usage;$/;"	m	struct:VkImageCreateInfo
uvec1	lib/glm/gtc/vec1.hpp	/^	typedef highp_uvec1			uvec1;$/;"	t	namespace:glm
uvec1	lib/glm/gtc/vec1.hpp	/^	typedef lowp_uvec1			uvec1;$/;"	t	namespace:glm
uvec1	lib/glm/gtc/vec1.hpp	/^	typedef mediump_uvec1		uvec1;$/;"	t	namespace:glm
uvec2	lib/glm/detail/type_vec.hpp	/^	typedef highp_uvec2			uvec2;$/;"	t	namespace:glm
uvec2	lib/glm/detail/type_vec.hpp	/^	typedef lowp_uvec2			uvec2;$/;"	t	namespace:glm
uvec2	lib/glm/detail/type_vec.hpp	/^	typedef mediump_uvec2		uvec2;$/;"	t	namespace:glm
uvec3	lib/glm/detail/type_vec.hpp	/^	typedef highp_uvec3			uvec3;$/;"	t	namespace:glm
uvec3	lib/glm/detail/type_vec.hpp	/^	typedef lowp_uvec3			uvec3;$/;"	t	namespace:glm
uvec3	lib/glm/detail/type_vec.hpp	/^	typedef mediump_uvec3		uvec3;$/;"	t	namespace:glm
uvec4	lib/glm/detail/type_vec.hpp	/^	typedef highp_uvec4			uvec4;$/;"	t	namespace:glm
uvec4	lib/glm/detail/type_vec.hpp	/^	typedef lowp_uvec4			uvec4;$/;"	t	namespace:glm
uvec4	lib/glm/detail/type_vec.hpp	/^	typedef mediump_uvec4		uvec4;$/;"	t	namespace:glm
v	lib/stb/stb_image.h	/^      int h,v;$/;"	m	struct:__anon60::__anon61
valid_loader_magic_value	lib/vulkan/vk_icd.h	/^static inline bool valid_loader_magic_value(void *pNewObject) {$/;"	f
validate_uint32	lib/stb/stb_image.h	/^typedef unsigned char validate_uint32[sizeof(stbi__uint32)==4 ? 1 : -1];$/;"	t
value	lib/glm/detail/precision.hpp	/^			static const bool value = true;$/;"	m	struct:glm::detail::is_aligned
value	lib/glm/detail/precision.hpp	/^		static const bool value = false;$/;"	m	struct:glm::detail::is_aligned
value	lib/glm/detail/type_mat2x2.hpp	/^		col_type value[2];$/;"	m	struct:glm::tmat2x2
value	lib/glm/detail/type_mat2x3.hpp	/^		col_type value[2];$/;"	m	struct:glm::tmat2x3
value	lib/glm/detail/type_mat2x4.hpp	/^		col_type value[2];$/;"	m	struct:glm::tmat2x4
value	lib/glm/detail/type_mat3x2.hpp	/^		col_type value[3];$/;"	m	struct:glm::tmat3x2
value	lib/glm/detail/type_mat3x3.hpp	/^		col_type value[3];$/;"	m	struct:glm::tmat3x3
value	lib/glm/detail/type_mat3x4.hpp	/^		col_type value[3];$/;"	m	struct:glm::tmat3x4
value	lib/glm/detail/type_mat4x2.hpp	/^		col_type value[4];$/;"	m	struct:glm::tmat4x2
value	lib/glm/detail/type_mat4x3.hpp	/^		col_type value[4];$/;"	m	struct:glm::tmat4x3
value	lib/glm/detail/type_mat4x4.hpp	/^		col_type value[4];$/;"	m	struct:glm::tmat4x4
value	lib/glm/gtx/io.hpp	/^			CTy value[3];$/;"	m	struct:glm::io::delimeter
value	lib/glm/gtx/io.hpp	/^			order_type value;$/;"	m	struct:glm::io::order
value	lib/glm/gtx/io.hpp	/^			unsigned value;$/;"	m	struct:glm::io::precision
value	lib/glm/gtx/io.hpp	/^			unsigned value;$/;"	m	struct:glm::io::width
value	lib/stb/stb_image.h	/^   stbi__uint16 value[288];$/;"	m	struct:__anon63
value_address	lib/glm/detail/type_gentype.hpp	/^		value_const_pointer value_address() const{return value_pointer(this);}$/;"	f	struct:glm::detail::genType
value_address	lib/glm/detail/type_gentype.hpp	/^		value_pointer value_address(){return value_pointer(this);}$/;"	f	struct:glm::detail::genType
value_const_pointer	lib/glm/detail/type_gentype.hpp	/^		typedef VALTYPE const * value_const_pointer;$/;"	t	struct:glm::detail::genType
value_pointer	lib/glm/detail/type_gentype.hpp	/^		typedef VALTYPE * value_pointer;$/;"	t	struct:glm::detail::genType
value_reference	lib/glm/detail/type_gentype.hpp	/^		typedef VALTYPE & value_reference;$/;"	t	struct:glm::detail::genType
value_type	lib/glm/detail/type_gentype.hpp	/^		typedef VALTYPE value_type;$/;"	t	struct:glm::detail::genType
value_type	lib/glm/detail/type_mat2x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat2x2
value_type	lib/glm/detail/type_mat2x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat2x3
value_type	lib/glm/detail/type_mat2x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat2x4
value_type	lib/glm/detail/type_mat3x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat3x2
value_type	lib/glm/detail/type_mat3x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat3x3
value_type	lib/glm/detail/type_mat3x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat3x4
value_type	lib/glm/detail/type_mat4x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat4x2
value_type	lib/glm/detail/type_mat4x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat4x3
value_type	lib/glm/detail/type_mat4x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat4x4
value_type	lib/glm/detail/type_vec1.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tvec1
value_type	lib/glm/detail/type_vec2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tvec2
value_type	lib/glm/detail/type_vec3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tvec3
value_type	lib/glm/detail/type_vec4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tvec4
value_type	lib/glm/gtc/quaternion.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tquat
value_type	lib/glm/gtx/dual_quaternion.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tdualquat
values	lib/stb/stb_image.h	/^   stbi_uc  values[256];$/;"	m	struct:__anon59
variableMultisampleRate	lib/vulkan/vulkan.h	/^    VkBool32    variableMultisampleRate;$/;"	m	struct:VkPhysicalDeviceFeatures
vec1	lib/glm/gtc/vec1.hpp	/^	typedef highp_vec1				vec1;$/;"	t	namespace:glm
vec1	lib/glm/gtc/vec1.hpp	/^	typedef lowp_vec1				vec1;$/;"	t	namespace:glm
vec1	lib/glm/gtc/vec1.hpp	/^	typedef mediump_vec1			vec1;$/;"	t	namespace:glm
vec2	lib/glm/detail/type_vec.hpp	/^	typedef highp_vec2			vec2;$/;"	t	namespace:glm
vec2	lib/glm/detail/type_vec.hpp	/^	typedef lowp_vec2			vec2;$/;"	t	namespace:glm
vec2	lib/glm/detail/type_vec.hpp	/^	typedef mediump_vec2		vec2;$/;"	t	namespace:glm
vec3	lib/glm/detail/type_vec.hpp	/^	typedef highp_vec3			vec3;$/;"	t	namespace:glm
vec3	lib/glm/detail/type_vec.hpp	/^	typedef lowp_vec3			vec3;$/;"	t	namespace:glm
vec3	lib/glm/detail/type_vec.hpp	/^	typedef mediump_vec3		vec3;$/;"	t	namespace:glm
vec4	lib/glm/detail/type_vec.hpp	/^	typedef highp_vec4			vec4;$/;"	t	namespace:glm
vec4	lib/glm/detail/type_vec.hpp	/^	typedef lowp_vec4			vec4;$/;"	t	namespace:glm
vec4	lib/glm/detail/type_vec.hpp	/^	typedef mediump_vec4		vec4;$/;"	t	namespace:glm
vendorID	lib/vulkan/vulkan.h	/^    uint32_t                            vendorID;$/;"	m	struct:VkPhysicalDeviceProperties
vertShaderModule	inc/vulkan_manager.h	/^	VkShaderModule vertShaderModule;$/;"	m	class:VulkanManager
vertexAttributeDescriptionCount	lib/vulkan/vulkan.h	/^    uint32_t                                    vertexAttributeDescriptionCount;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo
vertexBindingDescriptionCount	lib/vulkan/vulkan.h	/^    uint32_t                                    vertexBindingDescriptionCount;$/;"	m	struct:VkPipelineVertexInputStateCreateInfo
vertexBuffer	inc/vulkan_manager.h	/^	VkBuffer vertexBuffer, indexBuffer, uniformBuffer, uniformStagingBuffer;$/;"	m	class:VulkanManager
vertexBufferMem	inc/quad.h	/^	VkDeviceMemory vertexBufferMem, indexBufferMem;$/;"	m	class:Quad
vertexBufferMem	inc/vulkan_manager.h	/^	VkDeviceMemory vertexBufferMem, indexBufferMem, uniformBufferMem, uniformStagingBufferMem;$/;"	m	class:VulkanManager
vertexCount	lib/vulkan/vulkan.h	/^    uint32_t    vertexCount;$/;"	m	struct:VkDrawIndirectCommand
vertexOffset	lib/vulkan/vulkan.h	/^    int32_t     vertexOffset;$/;"	m	struct:VkDrawIndexedIndirectCommand
vertexPipelineStoresAndAtomics	lib/vulkan/vulkan.h	/^    VkBool32    vertexPipelineStoresAndAtomics;$/;"	m	struct:VkPhysicalDeviceFeatures
view	inc/vulkan_manager.h	/^		glm::mat4 view;$/;"	m	struct:VulkanManager::UBO
viewType	lib/vulkan/vulkan.h	/^    VkImageViewType            viewType;$/;"	m	struct:VkImageViewCreateInfo
viewportBoundsRange	lib/vulkan/vulkan.h	/^    float                 viewportBoundsRange[2];$/;"	m	struct:VkPhysicalDeviceLimits
viewportCount	lib/vulkan/vulkan.h	/^    uint32_t                              viewportCount;$/;"	m	struct:VkPipelineViewportStateCreateInfo
viewportSubPixelBits	lib/vulkan/vulkan.h	/^    uint32_t              viewportSubPixelBits;$/;"	m	struct:VkPhysicalDeviceLimits
visibleRegion	lib/vulkan/vulkan.h	/^    VkExtent2D    visibleRegion;$/;"	m	struct:VkDisplayModeParametersKHR
vs	lib/stb/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon62
w	lib/glm/detail/type_vec4.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tvec4::__anon1::__anon2
w	lib/glm/detail/type_vec4.hpp	/^			union { T w, a, q; };$/;"	m	union:glm::tvec4::__anon8
w	lib/glm/gtc/quaternion.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tquat::__anon39::__anon40
w	lib/glm/gtc/quaternion.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::tquat
w	lib/stb/stb_image.h	/^   int w,h;$/;"	m	struct:__anon71
w2	lib/stb/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon60::__anon61
w_lores	lib/stb/stb_image.h	/^   int w_lores; \/\/ horizontal pixels pre-expansion$/;"	m	struct:__anon62
waitIdle	src/vulkan_manager.cpp	/^void VulkanManager::waitIdle() $/;"	f	class:VulkanManager
waitSemaphoreCount	lib/vulkan/vulkan.h	/^    uint32_t                                    waitSemaphoreCount;$/;"	m	struct:VkBindSparseInfo
waitSemaphoreCount	lib/vulkan/vulkan.h	/^    uint32_t                       waitSemaphoreCount;$/;"	m	struct:VkSubmitInfo
waitSemaphoreCount	lib/vulkan/vulkan.h	/^    uint32_t                 waitSemaphoreCount;$/;"	m	struct:VkPresentInfoKHR
wformat_saver	lib/glm/gtx/io.hpp	/^		typedef basic_format_saver<wchar_t> wformat_saver;$/;"	t	namespace:glm::io
wideLines	lib/vulkan/vulkan.h	/^    VkBool32    wideLines;$/;"	m	struct:VkPhysicalDeviceFeatures
width	lib/glm/gtx/io.hpp	/^			unsigned   width;$/;"	m	class:glm::io::format_punct
width	lib/glm/gtx/io.hpp	/^		struct width$/;"	s	namespace:glm::io
width	lib/vulkan/vulkan.h	/^    float    width;$/;"	m	struct:VkViewport
width	lib/vulkan/vulkan.h	/^    uint32_t                    width;$/;"	m	struct:VkFramebufferCreateInfo
width	lib/vulkan/vulkan.h	/^    uint32_t    width;$/;"	m	struct:VkExtent2D
width	lib/vulkan/vulkan.h	/^    uint32_t    width;$/;"	m	struct:VkExtent3D
width_	lib/glm/gtx/io.hpp	/^			streamsize_type width_;$/;"	m	class:glm::io::basic_state_saver
window	lib/vulkan/vk_icd.h	/^    Window window;$/;"	m	struct:__anon49
window	lib/vulkan/vk_icd.h	/^    xcb_window_t window;$/;"	m	struct:__anon48
window	lib/vulkan/vulkan.h	/^    ANativeWindow*                    window;$/;"	m	struct:VkAndroidSurfaceCreateInfoKHR
window	lib/vulkan/vulkan.h	/^    Window                         window;$/;"	m	struct:VkXlibSurfaceCreateInfoKHR
window	lib/vulkan/vulkan.h	/^    xcb_window_t                  window;$/;"	m	struct:VkXcbSurfaceCreateInfoKHR
word	lib/glm/gtx/raw_data.hpp	/^	typedef detail::uint16		word;$/;"	t	namespace:glm
wordCount	lib/vulkan/libspirv.h	/^  const size_t wordCount;$/;"	m	struct:spv_const_binary_t
wordCount	lib/vulkan/libspirv.h	/^  size_t wordCount;$/;"	m	struct:spv_binary_t
words	lib/vulkan/libspirv.h	/^  const uint32_t* words;$/;"	m	struct:spv_parsed_instruction_t
writeMask	lib/vulkan/vulkan.h	/^    uint32_t       writeMask;$/;"	m	struct:VkStencilOpState
wstate_saver	lib/glm/gtx/io.hpp	/^		typedef basic_state_saver<wchar_t> wstate_saver;$/;"	t	namespace:glm::io
x	lib/glm/detail/type_vec1.hpp	/^				T x;$/;"	m	union:glm::tvec1::__anon15
x	lib/glm/detail/type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec1::__anon16
x	lib/glm/detail/type_vec2.hpp	/^				struct{ T x, y; };$/;"	m	struct:glm::tvec2::__anon9::__anon10
x	lib/glm/detail/type_vec2.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec2::__anon13
x	lib/glm/detail/type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	m	struct:glm::tvec3::__anon17::__anon18
x	lib/glm/detail/type_vec3.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec3::__anon21
x	lib/glm/detail/type_vec4.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tvec4::__anon1::__anon2
x	lib/glm/detail/type_vec4.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec4::__anon5
x	lib/glm/gtc/quaternion.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tquat::__anon39::__anon40
x	lib/glm/gtc/quaternion.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::tquat
x	lib/stb/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon60::__anon61
x	lib/vulkan/vulkan.h	/^    float    x;$/;"	m	struct:VkViewport
x	lib/vulkan/vulkan.h	/^    int32_t    x;$/;"	m	struct:VkOffset2D
x	lib/vulkan/vulkan.h	/^    int32_t    x;$/;"	m	struct:VkOffset3D
x	lib/vulkan/vulkan.h	/^    uint32_t    x;$/;"	m	struct:VkDispatchIndirectCommand
y	lib/glm/detail/type_vec2.hpp	/^				struct{ T x, y; };$/;"	m	struct:glm::tvec2::__anon9::__anon10
y	lib/glm/detail/type_vec2.hpp	/^			union {T y, g, t;};$/;"	m	union:glm::tvec2::__anon14
y	lib/glm/detail/type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	m	struct:glm::tvec3::__anon17::__anon18
y	lib/glm/detail/type_vec3.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec3::__anon22
y	lib/glm/detail/type_vec4.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tvec4::__anon1::__anon2
y	lib/glm/detail/type_vec4.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec4::__anon6
y	lib/glm/gtc/quaternion.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tquat::__anon39::__anon40
y	lib/glm/gtc/quaternion.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::tquat
y	lib/stb/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon60::__anon61
y	lib/vulkan/vulkan.h	/^    float    y;$/;"	m	struct:VkViewport
y	lib/vulkan/vulkan.h	/^    int32_t    y;$/;"	m	struct:VkOffset2D
y	lib/vulkan/vulkan.h	/^    int32_t    y;$/;"	m	struct:VkOffset3D
y	lib/vulkan/vulkan.h	/^    uint32_t    y;$/;"	m	struct:VkDispatchIndirectCommand
ypos	lib/stb/stb_image.h	/^   int ypos;    \/\/ which pre-expansion row we're on$/;"	m	struct:__anon62
ystep	lib/stb/stb_image.h	/^   int ystep;   \/\/ how far through vertical expansion we are$/;"	m	struct:__anon62
z	lib/glm/detail/type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	m	struct:glm::tvec3::__anon17::__anon18
z	lib/glm/detail/type_vec3.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec3::__anon23
z	lib/glm/detail/type_vec4.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tvec4::__anon1::__anon2
z	lib/glm/detail/type_vec4.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec4::__anon7
z	lib/glm/gtc/quaternion.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tquat::__anon39::__anon40
z	lib/glm/gtc/quaternion.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::tquat
z	lib/vulkan/vulkan.h	/^    int32_t    z;$/;"	m	struct:VkOffset3D
z	lib/vulkan/vulkan.h	/^    uint32_t    z;$/;"	m	struct:VkDispatchIndirectCommand
z_distance	lib/stb/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon64
z_expandable	lib/stb/stb_image.h	/^   int   z_expandable;$/;"	m	struct:__anon64
z_length	lib/stb/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon64
zbuffer	lib/stb/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon64
zbuffer_end	lib/stb/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon64
zout	lib/stb/stb_image.h	/^   char *zout;$/;"	m	struct:__anon64
zout_end	lib/stb/stb_image.h	/^   char *zout_end;$/;"	m	struct:__anon64
zout_start	lib/stb/stb_image.h	/^   char *zout_start;$/;"	m	struct:__anon64
~DeviceQueueIndicies	src/device_queue_indices.cpp	/^DeviceQueueIndicies::~DeviceQueueIndicies()$/;"	f	class:DeviceQueueIndicies
~Engine	src/engine.cpp	/^Engine::~Engine() $/;"	f	class:Engine
~InputManager	src/input_manager.cpp	/^InputManager::~InputManager()$/;"	f	class:InputManager
~Task	inc/task_manager.h	/^	virtual ~Task() {}$/;"	f	class:Task
~TaskManager	src/task_manager.cpp	/^TaskManager::~TaskManager() $/;"	f	class:TaskManager
~VulkanManager	src/vulkan_manager.cpp	/^VulkanManager::~VulkanManager()$/;"	f	class:VulkanManager
~Window	src/window.cpp	/^Window::~Window() $/;"	f	class:Window
